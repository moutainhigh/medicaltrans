// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_loop_common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.common.taskloop;

public class MtTaskLoopIce implements java.lang.Cloneable, java.io.Serializable
{
    public String taskLoopId;

    public String
    getTaskLoopId()
    {
        return taskLoopId;
    }

    public void
    setTaskLoopId(String _taskLoopId)
    {
        taskLoopId = _taskLoopId;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String transTypeParentCode;

    public String
    getTransTypeParentCode()
    {
        return transTypeParentCode;
    }

    public void
    setTransTypeParentCode(String _transTypeParentCode)
    {
        transTypeParentCode = _transTypeParentCode;
    }

    public String transTypeId;

    public String
    getTransTypeId()
    {
        return transTypeId;
    }

    public void
    setTransTypeId(String _transTypeId)
    {
        transTypeId = _transTypeId;
    }

    public String taskName;

    public String
    getTaskName()
    {
        return taskName;
    }

    public void
    setTaskName(String _taskName)
    {
        taskName = _taskName;
    }

    public String transTools;

    public String
    getTransTools()
    {
        return transTools;
    }

    public void
    setTransTools(String _transTools)
    {
        transTools = _transTools;
    }

    public String loopType;

    public String
    getLoopType()
    {
        return loopType;
    }

    public void
    setLoopType(String _loopType)
    {
        loopType = _loopType;
    }

    public String taskBeginTime;

    public String
    getTaskBeginTime()
    {
        return taskBeginTime;
    }

    public void
    setTaskBeginTime(String _taskBeginTime)
    {
        taskBeginTime = _taskBeginTime;
    }

    public String taskEndTime;

    public String
    getTaskEndTime()
    {
        return taskEndTime;
    }

    public void
    setTaskEndTime(String _taskEndTime)
    {
        taskEndTime = _taskEndTime;
    }

    public String loopDays;

    public String
    getLoopDays()
    {
        return loopDays;
    }

    public void
    setLoopDays(String _loopDays)
    {
        loopDays = _loopDays;
    }

    public String loopWeeks;

    public String
    getLoopWeeks()
    {
        return loopWeeks;
    }

    public void
    setLoopWeeks(String _loopWeeks)
    {
        loopWeeks = _loopWeeks;
    }

    public String loopMonths;

    public String
    getLoopMonths()
    {
        return loopMonths;
    }

    public void
    setLoopMonths(String _loopMonths)
    {
        loopMonths = _loopMonths;
    }

    public String preGenerateMinute;

    public String
    getPreGenerateMinute()
    {
        return preGenerateMinute;
    }

    public void
    setPreGenerateMinute(String _preGenerateMinute)
    {
        preGenerateMinute = _preGenerateMinute;
    }

    public String status;

    public String
    getStatus()
    {
        return status;
    }

    public void
    setStatus(String _status)
    {
        status = _status;
    }

    public String createDate;

    public String
    getCreateDate()
    {
        return createDate;
    }

    public void
    setCreateDate(String _createDate)
    {
        createDate = _createDate;
    }

    public String createBy;

    public String
    getCreateBy()
    {
        return createBy;
    }

    public void
    setCreateBy(String _createBy)
    {
        createBy = _createBy;
    }

    public String updateDate;

    public String
    getUpdateDate()
    {
        return updateDate;
    }

    public void
    setUpdateDate(String _updateDate)
    {
        updateDate = _updateDate;
    }

    public String updateBy;

    public String
    getUpdateBy()
    {
        return updateBy;
    }

    public void
    setUpdateBy(String _updateBy)
    {
        updateBy = _updateBy;
    }

    public String taskCron;

    public String
    getTaskCron()
    {
        return taskCron;
    }

    public void
    setTaskCron(String _taskCron)
    {
        taskCron = _taskCron;
    }

    public String loseRemark;

    public String
    getLoseRemark()
    {
        return loseRemark;
    }

    public void
    setLoseRemark(String _loseRemark)
    {
        loseRemark = _loseRemark;
    }

    public String limitMinute;

    public String
    getLimitMinute()
    {
        return limitMinute;
    }

    public void
    setLimitMinute(String _limitMinute)
    {
        limitMinute = _limitMinute;
    }

    public String groupOrganId;

    public String
    getGroupOrganId()
    {
        return groupOrganId;
    }

    public void
    setGroupOrganId(String _groupOrganId)
    {
        groupOrganId = _groupOrganId;
    }

    public MtTaskLoopIce()
    {
        taskLoopId = "";
        organId = "";
        transTypeParentCode = "";
        transTypeId = "";
        taskName = "";
        transTools = "";
        loopType = "";
        taskBeginTime = "";
        taskEndTime = "";
        loopDays = "";
        loopWeeks = "";
        loopMonths = "";
        preGenerateMinute = "";
        status = "";
        createDate = "";
        createBy = "";
        updateDate = "";
        updateBy = "";
        taskCron = "";
        loseRemark = "";
        limitMinute = "";
        groupOrganId = "";
    }

    public MtTaskLoopIce(String taskLoopId, String organId, String transTypeParentCode, String transTypeId, String taskName, String transTools, String loopType, String taskBeginTime, String taskEndTime, String loopDays, String loopWeeks, String loopMonths, String preGenerateMinute, String status, String createDate, String createBy, String updateDate, String updateBy, String taskCron, String loseRemark, String limitMinute, String groupOrganId)
    {
        this.taskLoopId = taskLoopId;
        this.organId = organId;
        this.transTypeParentCode = transTypeParentCode;
        this.transTypeId = transTypeId;
        this.taskName = taskName;
        this.transTools = transTools;
        this.loopType = loopType;
        this.taskBeginTime = taskBeginTime;
        this.taskEndTime = taskEndTime;
        this.loopDays = loopDays;
        this.loopWeeks = loopWeeks;
        this.loopMonths = loopMonths;
        this.preGenerateMinute = preGenerateMinute;
        this.status = status;
        this.createDate = createDate;
        this.createBy = createBy;
        this.updateDate = updateDate;
        this.updateBy = updateBy;
        this.taskCron = taskCron;
        this.loseRemark = loseRemark;
        this.limitMinute = limitMinute;
        this.groupOrganId = groupOrganId;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MtTaskLoopIce _r = null;
        if(rhs instanceof MtTaskLoopIce)
        {
            _r = (MtTaskLoopIce)rhs;
        }

        if(_r != null)
        {
            if(taskLoopId != _r.taskLoopId)
            {
                if(taskLoopId == null || _r.taskLoopId == null || !taskLoopId.equals(_r.taskLoopId))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(transTypeParentCode != _r.transTypeParentCode)
            {
                if(transTypeParentCode == null || _r.transTypeParentCode == null || !transTypeParentCode.equals(_r.transTypeParentCode))
                {
                    return false;
                }
            }
            if(transTypeId != _r.transTypeId)
            {
                if(transTypeId == null || _r.transTypeId == null || !transTypeId.equals(_r.transTypeId))
                {
                    return false;
                }
            }
            if(taskName != _r.taskName)
            {
                if(taskName == null || _r.taskName == null || !taskName.equals(_r.taskName))
                {
                    return false;
                }
            }
            if(transTools != _r.transTools)
            {
                if(transTools == null || _r.transTools == null || !transTools.equals(_r.transTools))
                {
                    return false;
                }
            }
            if(loopType != _r.loopType)
            {
                if(loopType == null || _r.loopType == null || !loopType.equals(_r.loopType))
                {
                    return false;
                }
            }
            if(taskBeginTime != _r.taskBeginTime)
            {
                if(taskBeginTime == null || _r.taskBeginTime == null || !taskBeginTime.equals(_r.taskBeginTime))
                {
                    return false;
                }
            }
            if(taskEndTime != _r.taskEndTime)
            {
                if(taskEndTime == null || _r.taskEndTime == null || !taskEndTime.equals(_r.taskEndTime))
                {
                    return false;
                }
            }
            if(loopDays != _r.loopDays)
            {
                if(loopDays == null || _r.loopDays == null || !loopDays.equals(_r.loopDays))
                {
                    return false;
                }
            }
            if(loopWeeks != _r.loopWeeks)
            {
                if(loopWeeks == null || _r.loopWeeks == null || !loopWeeks.equals(_r.loopWeeks))
                {
                    return false;
                }
            }
            if(loopMonths != _r.loopMonths)
            {
                if(loopMonths == null || _r.loopMonths == null || !loopMonths.equals(_r.loopMonths))
                {
                    return false;
                }
            }
            if(preGenerateMinute != _r.preGenerateMinute)
            {
                if(preGenerateMinute == null || _r.preGenerateMinute == null || !preGenerateMinute.equals(_r.preGenerateMinute))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                if(status == null || _r.status == null || !status.equals(_r.status))
                {
                    return false;
                }
            }
            if(createDate != _r.createDate)
            {
                if(createDate == null || _r.createDate == null || !createDate.equals(_r.createDate))
                {
                    return false;
                }
            }
            if(createBy != _r.createBy)
            {
                if(createBy == null || _r.createBy == null || !createBy.equals(_r.createBy))
                {
                    return false;
                }
            }
            if(updateDate != _r.updateDate)
            {
                if(updateDate == null || _r.updateDate == null || !updateDate.equals(_r.updateDate))
                {
                    return false;
                }
            }
            if(updateBy != _r.updateBy)
            {
                if(updateBy == null || _r.updateBy == null || !updateBy.equals(_r.updateBy))
                {
                    return false;
                }
            }
            if(taskCron != _r.taskCron)
            {
                if(taskCron == null || _r.taskCron == null || !taskCron.equals(_r.taskCron))
                {
                    return false;
                }
            }
            if(loseRemark != _r.loseRemark)
            {
                if(loseRemark == null || _r.loseRemark == null || !loseRemark.equals(_r.loseRemark))
                {
                    return false;
                }
            }
            if(limitMinute != _r.limitMinute)
            {
                if(limitMinute == null || _r.limitMinute == null || !limitMinute.equals(_r.limitMinute))
                {
                    return false;
                }
            }
            if(groupOrganId != _r.groupOrganId)
            {
                if(groupOrganId == null || _r.groupOrganId == null || !groupOrganId.equals(_r.groupOrganId))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::common::taskloop::MtTaskLoopIce");
        __h = IceInternal.HashUtil.hashAdd(__h, taskLoopId);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeParentCode);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeId);
        __h = IceInternal.HashUtil.hashAdd(__h, taskName);
        __h = IceInternal.HashUtil.hashAdd(__h, transTools);
        __h = IceInternal.HashUtil.hashAdd(__h, loopType);
        __h = IceInternal.HashUtil.hashAdd(__h, taskBeginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, taskEndTime);
        __h = IceInternal.HashUtil.hashAdd(__h, loopDays);
        __h = IceInternal.HashUtil.hashAdd(__h, loopWeeks);
        __h = IceInternal.HashUtil.hashAdd(__h, loopMonths);
        __h = IceInternal.HashUtil.hashAdd(__h, preGenerateMinute);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, createDate);
        __h = IceInternal.HashUtil.hashAdd(__h, createBy);
        __h = IceInternal.HashUtil.hashAdd(__h, updateDate);
        __h = IceInternal.HashUtil.hashAdd(__h, updateBy);
        __h = IceInternal.HashUtil.hashAdd(__h, taskCron);
        __h = IceInternal.HashUtil.hashAdd(__h, loseRemark);
        __h = IceInternal.HashUtil.hashAdd(__h, limitMinute);
        __h = IceInternal.HashUtil.hashAdd(__h, groupOrganId);
        return __h;
    }

    public MtTaskLoopIce
    clone()
    {
        MtTaskLoopIce c = null;
        try
        {
            c = (MtTaskLoopIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(taskLoopId);
        __os.writeString(organId);
        __os.writeString(transTypeParentCode);
        __os.writeString(transTypeId);
        __os.writeString(taskName);
        __os.writeString(transTools);
        __os.writeString(loopType);
        __os.writeString(taskBeginTime);
        __os.writeString(taskEndTime);
        __os.writeString(loopDays);
        __os.writeString(loopWeeks);
        __os.writeString(loopMonths);
        __os.writeString(preGenerateMinute);
        __os.writeString(status);
        __os.writeString(createDate);
        __os.writeString(createBy);
        __os.writeString(updateDate);
        __os.writeString(updateBy);
        __os.writeString(taskCron);
        __os.writeString(loseRemark);
        __os.writeString(limitMinute);
        __os.writeString(groupOrganId);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        taskLoopId = __is.readString();
        organId = __is.readString();
        transTypeParentCode = __is.readString();
        transTypeId = __is.readString();
        taskName = __is.readString();
        transTools = __is.readString();
        loopType = __is.readString();
        taskBeginTime = __is.readString();
        taskEndTime = __is.readString();
        loopDays = __is.readString();
        loopWeeks = __is.readString();
        loopMonths = __is.readString();
        preGenerateMinute = __is.readString();
        status = __is.readString();
        createDate = __is.readString();
        createBy = __is.readString();
        updateDate = __is.readString();
        updateBy = __is.readString();
        taskCron = __is.readString();
        loseRemark = __is.readString();
        limitMinute = __is.readString();
        groupOrganId = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, MtTaskLoopIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public MtTaskLoopIce
    __read(IceInternal.BasicStream __is, MtTaskLoopIce __v)
    {
        if(__v == null)
        {
             __v = new MtTaskLoopIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final MtTaskLoopIce __nullMarshalValue = new MtTaskLoopIce();

    public static final long serialVersionUID = -397961175L;
}
