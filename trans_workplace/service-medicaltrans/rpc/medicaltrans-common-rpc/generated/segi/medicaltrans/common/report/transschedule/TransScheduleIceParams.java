// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_trans_schedule.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.common.report.transschedule;

public class TransScheduleIceParams implements java.lang.Cloneable, java.io.Serializable
{
    public String groupOrganId;

    public String
    getGroupOrganId()
    {
        return groupOrganId;
    }

    public void
    setGroupOrganId(String _groupOrganId)
    {
        groupOrganId = _groupOrganId;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String runningStatus;

    public String
    getRunningStatus()
    {
        return runningStatus;
    }

    public void
    setRunningStatus(String _runningStatus)
    {
        runningStatus = _runningStatus;
    }

    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String userOrganId;

    public String
    getUserOrganId()
    {
        return userOrganId;
    }

    public void
    setUserOrganId(String _userOrganId)
    {
        userOrganId = _userOrganId;
    }

    public String pageLength;

    public String
    getPageLength()
    {
        return pageLength;
    }

    public void
    setPageLength(String _pageLength)
    {
        pageLength = _pageLength;
    }

    public String pageNo;

    public String
    getPageNo()
    {
        return pageNo;
    }

    public void
    setPageNo(String _pageNo)
    {
        pageNo = _pageNo;
    }

    public TransScheduleIceParams()
    {
        groupOrganId = "";
        organId = "";
        runningStatus = "";
        userId = "";
        userOrganId = "";
        pageLength = "";
        pageNo = "";
    }

    public TransScheduleIceParams(String groupOrganId, String organId, String runningStatus, String userId, String userOrganId, String pageLength, String pageNo)
    {
        this.groupOrganId = groupOrganId;
        this.organId = organId;
        this.runningStatus = runningStatus;
        this.userId = userId;
        this.userOrganId = userOrganId;
        this.pageLength = pageLength;
        this.pageNo = pageNo;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TransScheduleIceParams _r = null;
        if(rhs instanceof TransScheduleIceParams)
        {
            _r = (TransScheduleIceParams)rhs;
        }

        if(_r != null)
        {
            if(groupOrganId != _r.groupOrganId)
            {
                if(groupOrganId == null || _r.groupOrganId == null || !groupOrganId.equals(_r.groupOrganId))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(runningStatus != _r.runningStatus)
            {
                if(runningStatus == null || _r.runningStatus == null || !runningStatus.equals(_r.runningStatus))
                {
                    return false;
                }
            }
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(userOrganId != _r.userOrganId)
            {
                if(userOrganId == null || _r.userOrganId == null || !userOrganId.equals(_r.userOrganId))
                {
                    return false;
                }
            }
            if(pageLength != _r.pageLength)
            {
                if(pageLength == null || _r.pageLength == null || !pageLength.equals(_r.pageLength))
                {
                    return false;
                }
            }
            if(pageNo != _r.pageNo)
            {
                if(pageNo == null || _r.pageNo == null || !pageNo.equals(_r.pageNo))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::common::report::transschedule::TransScheduleIceParams");
        __h = IceInternal.HashUtil.hashAdd(__h, groupOrganId);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, runningStatus);
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, userOrganId);
        __h = IceInternal.HashUtil.hashAdd(__h, pageLength);
        __h = IceInternal.HashUtil.hashAdd(__h, pageNo);
        return __h;
    }

    public TransScheduleIceParams
    clone()
    {
        TransScheduleIceParams c = null;
        try
        {
            c = (TransScheduleIceParams)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(groupOrganId);
        __os.writeString(organId);
        __os.writeString(runningStatus);
        __os.writeString(userId);
        __os.writeString(userOrganId);
        __os.writeString(pageLength);
        __os.writeString(pageNo);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        groupOrganId = __is.readString();
        organId = __is.readString();
        runningStatus = __is.readString();
        userId = __is.readString();
        userOrganId = __is.readString();
        pageLength = __is.readString();
        pageNo = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, TransScheduleIceParams __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TransScheduleIceParams
    __read(IceInternal.BasicStream __is, TransScheduleIceParams __v)
    {
        if(__v == null)
        {
             __v = new TransScheduleIceParams();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TransScheduleIceParams __nullMarshalValue = new TransScheduleIceParams();

    public static final long serialVersionUID = 1678229745L;
}
