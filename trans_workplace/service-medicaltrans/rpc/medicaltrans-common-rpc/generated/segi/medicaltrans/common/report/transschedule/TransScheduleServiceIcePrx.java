// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_trans_schedule.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.common.report.transschedule;

public interface TransScheduleServiceIcePrx extends Ice.ObjectPrx
{
    public TransSchedulePaginatorIce queryTransSchedulePaginator(TransScheduleIceParams params);

    public TransSchedulePaginatorIce queryTransSchedulePaginator(TransScheduleIceParams params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, Ice.Callback __cb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, Callback_TransScheduleServiceIce_queryTransSchedulePaginator __cb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, java.util.Map<String, String> __ctx, Callback_TransScheduleServiceIce_queryTransSchedulePaginator __cb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, 
                                                             IceInternal.Functional_GenericCallback1<TransSchedulePaginatorIce> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, 
                                                             IceInternal.Functional_GenericCallback1<TransSchedulePaginatorIce> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_GenericCallback1<TransSchedulePaginatorIce> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryTransSchedulePaginator(TransScheduleIceParams params, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_GenericCallback1<TransSchedulePaginatorIce> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb);

    public TransSchedulePaginatorIce end_queryTransSchedulePaginator(Ice.AsyncResult __result);

    public TransScheduleGroupOrganMapIce getTransScheduleMap();

    public TransScheduleGroupOrganMapIce getTransScheduleMap(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTransScheduleMap();

    public Ice.AsyncResult begin_getTransScheduleMap(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTransScheduleMap(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTransScheduleMap(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTransScheduleMap(Callback_TransScheduleServiceIce_getTransScheduleMap __cb);

    public Ice.AsyncResult begin_getTransScheduleMap(java.util.Map<String, String> __ctx, Callback_TransScheduleServiceIce_getTransScheduleMap __cb);

    public Ice.AsyncResult begin_getTransScheduleMap(IceInternal.Functional_GenericCallback1<TransScheduleGroupOrganMapIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getTransScheduleMap(IceInternal.Functional_GenericCallback1<TransScheduleGroupOrganMapIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getTransScheduleMap(java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransScheduleGroupOrganMapIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getTransScheduleMap(java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransScheduleGroupOrganMapIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public TransScheduleGroupOrganMapIce end_getTransScheduleMap(Ice.AsyncResult __result);

    public TransScheduleByOrganIdIce queryTransSchedule(int organId);

    public TransScheduleByOrganIdIce queryTransSchedule(int organId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_queryTransSchedule(int organId);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, Ice.Callback __cb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, Callback_TransScheduleServiceIce_queryTransSchedule __cb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, java.util.Map<String, String> __ctx, Callback_TransScheduleServiceIce_queryTransSchedule __cb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, 
                                                    IceInternal.Functional_GenericCallback1<TransScheduleByOrganIdIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, 
                                                    IceInternal.Functional_GenericCallback1<TransScheduleByOrganIdIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TransScheduleByOrganIdIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_queryTransSchedule(int organId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TransScheduleByOrganIdIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    public TransScheduleByOrganIdIce end_queryTransSchedule(Ice.AsyncResult __result);
}
