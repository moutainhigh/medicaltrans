// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_userhosp_common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.common.userhosp;

/**
 * Provides type-specific helper functions.
 **/
public final class UserHospCommonServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements UserHospCommonServiceIcePrx
{
    private static final String __queryHospUserInfo_name = "queryHospUserInfo";

    public UserHospRelReturnInfoIce queryHospUserInfo(UserHospIce userHospIce)
    {
        return queryHospUserInfo(userHospIce, null, false);
    }

    public UserHospRelReturnInfoIce queryHospUserInfo(UserHospIce userHospIce, java.util.Map<String, String> __ctx)
    {
        return queryHospUserInfo(userHospIce, __ctx, true);
    }

    private UserHospRelReturnInfoIce queryHospUserInfo(UserHospIce userHospIce, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryHospUserInfo_name);
        return end_queryHospUserInfo(begin_queryHospUserInfo(userHospIce, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce)
    {
        return begin_queryHospUserInfo(userHospIce, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, java.util.Map<String, String> __ctx)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, Ice.Callback __cb)
    {
        return begin_queryHospUserInfo(userHospIce, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, Callback_UserHospCommonServiceIce_queryHospUserInfo __cb)
    {
        return begin_queryHospUserInfo(userHospIce, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, java.util.Map<String, String> __ctx, Callback_UserHospCommonServiceIce_queryHospUserInfo __cb)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                   IceInternal.Functional_GenericCallback1<UserHospRelReturnInfoIce> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryHospUserInfo(userHospIce, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                   IceInternal.Functional_GenericCallback1<UserHospRelReturnInfoIce> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfo(userHospIce, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<UserHospRelReturnInfoIce> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<UserHospRelReturnInfoIce> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_GenericCallback1<UserHospRelReturnInfoIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfo(userHospIce, __ctx, __explicitCtx, __synchronous, 
                                       new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.common.userhosp.UserHospRelReturnInfoIce>(__responseCb, __exceptionCb, __sentCb)
                                           {
                                               public final void __completed(Ice.AsyncResult __result)
                                               {
                                                   UserHospCommonServiceIcePrxHelper.__queryHospUserInfo_completed(this, __result);
                                               }
                                           });
    }

    private Ice.AsyncResult begin_queryHospUserInfo(UserHospIce userHospIce, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryHospUserInfo_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryHospUserInfo_name, __cb);
        try
        {
            __result.prepare(__queryHospUserInfo_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            UserHospIce.__write(__os, userHospIce);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public UserHospRelReturnInfoIce end_queryHospUserInfo(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryHospUserInfo_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            UserHospRelReturnInfoIce __ret = null;
            __ret = UserHospRelReturnInfoIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryHospUserInfo_completed(Ice.TwowayCallbackArg1<UserHospRelReturnInfoIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx __proxy = (segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx)__result.getProxy();
        UserHospRelReturnInfoIce __ret = null;
        try
        {
            __ret = __proxy.end_queryHospUserInfo(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryHospUserInfoList_name = "queryHospUserInfoList";

    public UserHospRelIceListRsp queryHospUserInfoList(UserHospIce userHospIce)
    {
        return queryHospUserInfoList(userHospIce, null, false);
    }

    public UserHospRelIceListRsp queryHospUserInfoList(UserHospIce userHospIce, java.util.Map<String, String> __ctx)
    {
        return queryHospUserInfoList(userHospIce, __ctx, true);
    }

    private UserHospRelIceListRsp queryHospUserInfoList(UserHospIce userHospIce, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryHospUserInfoList_name);
        return end_queryHospUserInfoList(begin_queryHospUserInfoList(userHospIce, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce)
    {
        return begin_queryHospUserInfoList(userHospIce, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, java.util.Map<String, String> __ctx)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, Ice.Callback __cb)
    {
        return begin_queryHospUserInfoList(userHospIce, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, Callback_UserHospCommonServiceIce_queryHospUserInfoList __cb)
    {
        return begin_queryHospUserInfoList(userHospIce, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, java.util.Map<String, String> __ctx, Callback_UserHospCommonServiceIce_queryHospUserInfoList __cb)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                       IceInternal.Functional_GenericCallback1<UserHospRelIceListRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryHospUserInfoList(userHospIce, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                       IceInternal.Functional_GenericCallback1<UserHospRelIceListRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfoList(userHospIce, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<UserHospRelIceListRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<UserHospRelIceListRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.Functional_GenericCallback1<UserHospRelIceListRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryHospUserInfoList(userHospIce, __ctx, __explicitCtx, __synchronous, 
                                           new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.common.userhosp.UserHospRelIceListRsp>(__responseCb, __exceptionCb, __sentCb)
                                               {
                                                   public final void __completed(Ice.AsyncResult __result)
                                                   {
                                                       UserHospCommonServiceIcePrxHelper.__queryHospUserInfoList_completed(this, __result);
                                                   }
                                               });
    }

    private Ice.AsyncResult begin_queryHospUserInfoList(UserHospIce userHospIce, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryHospUserInfoList_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryHospUserInfoList_name, __cb);
        try
        {
            __result.prepare(__queryHospUserInfoList_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            UserHospIce.__write(__os, userHospIce);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public UserHospRelIceListRsp end_queryHospUserInfoList(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryHospUserInfoList_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            UserHospRelIceListRsp __ret = null;
            __ret = UserHospRelIceListRsp.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryHospUserInfoList_completed(Ice.TwowayCallbackArg1<UserHospRelIceListRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx __proxy = (segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx)__result.getProxy();
        UserHospRelIceListRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryHospUserInfoList(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryUserIdsByHouseId_name = "queryUserIdsByHouseId";

    public UserIdsByHouseIdReturnIce queryUserIdsByHouseId(String houseId)
    {
        return queryUserIdsByHouseId(houseId, null, false);
    }

    public UserIdsByHouseIdReturnIce queryUserIdsByHouseId(String houseId, java.util.Map<String, String> __ctx)
    {
        return queryUserIdsByHouseId(houseId, __ctx, true);
    }

    private UserIdsByHouseIdReturnIce queryUserIdsByHouseId(String houseId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryUserIdsByHouseId_name);
        return end_queryUserIdsByHouseId(begin_queryUserIdsByHouseId(houseId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId)
    {
        return begin_queryUserIdsByHouseId(houseId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, java.util.Map<String, String> __ctx)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, Ice.Callback __cb)
    {
        return begin_queryUserIdsByHouseId(houseId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, Callback_UserHospCommonServiceIce_queryUserIdsByHouseId __cb)
    {
        return begin_queryUserIdsByHouseId(houseId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, java.util.Map<String, String> __ctx, Callback_UserHospCommonServiceIce_queryUserIdsByHouseId __cb)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                       IceInternal.Functional_GenericCallback1<UserIdsByHouseIdReturnIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryUserIdsByHouseId(houseId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                       IceInternal.Functional_GenericCallback1<UserIdsByHouseIdReturnIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserIdsByHouseId(houseId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<UserIdsByHouseIdReturnIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<UserIdsByHouseIdReturnIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.Functional_GenericCallback1<UserIdsByHouseIdReturnIce> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserIdsByHouseId(houseId, __ctx, __explicitCtx, __synchronous, 
                                           new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.common.userhosp.UserIdsByHouseIdReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                               {
                                                   public final void __completed(Ice.AsyncResult __result)
                                                   {
                                                       UserHospCommonServiceIcePrxHelper.__queryUserIdsByHouseId_completed(this, __result);
                                                   }
                                               });
    }

    private Ice.AsyncResult begin_queryUserIdsByHouseId(String houseId, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryUserIdsByHouseId_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryUserIdsByHouseId_name, __cb);
        try
        {
            __result.prepare(__queryUserIdsByHouseId_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(houseId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public UserIdsByHouseIdReturnIce end_queryUserIdsByHouseId(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryUserIdsByHouseId_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            UserIdsByHouseIdReturnIce __ret = null;
            __ret = UserIdsByHouseIdReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryUserIdsByHouseId_completed(Ice.TwowayCallbackArg1<UserIdsByHouseIdReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx __proxy = (segi.medicaltrans.common.userhosp.UserHospCommonServiceIcePrx)__result.getProxy();
        UserIdsByHouseIdReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryUserIdsByHouseId(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static UserHospCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static UserHospCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static UserHospCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static UserHospCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static UserHospCommonServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static UserHospCommonServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, UserHospCommonServiceIcePrx.class, UserHospCommonServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::common::userhosp::UserHospCommonServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, UserHospCommonServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static UserHospCommonServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            UserHospCommonServiceIcePrxHelper result = new UserHospCommonServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
