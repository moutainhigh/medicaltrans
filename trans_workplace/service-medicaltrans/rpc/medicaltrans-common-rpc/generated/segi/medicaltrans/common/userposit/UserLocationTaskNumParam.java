// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_user_posit_common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.common.userposit;

public class UserLocationTaskNumParam implements java.lang.Cloneable, java.io.Serializable
{
    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String userIds;

    public String
    getUserIds()
    {
        return userIds;
    }

    public void
    setUserIds(String _userIds)
    {
        userIds = _userIds;
    }

    public String unTaskNum;

    public String
    getUnTaskNum()
    {
        return unTaskNum;
    }

    public void
    setUnTaskNum(String _unTaskNum)
    {
        unTaskNum = _unTaskNum;
    }

    public String runTaskNum;

    public String
    getRunTaskNum()
    {
        return runTaskNum;
    }

    public void
    setRunTaskNum(String _runTaskNum)
    {
        runTaskNum = _runTaskNum;
    }

    public String executeDate;

    public String
    getExecuteDate()
    {
        return executeDate;
    }

    public void
    setExecuteDate(String _executeDate)
    {
        executeDate = _executeDate;
    }

    public UserLocationTaskNumParam()
    {
        organId = "";
        userIds = "";
        unTaskNum = "";
        runTaskNum = "";
        executeDate = "";
    }

    public UserLocationTaskNumParam(String organId, String userIds, String unTaskNum, String runTaskNum, String executeDate)
    {
        this.organId = organId;
        this.userIds = userIds;
        this.unTaskNum = unTaskNum;
        this.runTaskNum = runTaskNum;
        this.executeDate = executeDate;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserLocationTaskNumParam _r = null;
        if(rhs instanceof UserLocationTaskNumParam)
        {
            _r = (UserLocationTaskNumParam)rhs;
        }

        if(_r != null)
        {
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(userIds != _r.userIds)
            {
                if(userIds == null || _r.userIds == null || !userIds.equals(_r.userIds))
                {
                    return false;
                }
            }
            if(unTaskNum != _r.unTaskNum)
            {
                if(unTaskNum == null || _r.unTaskNum == null || !unTaskNum.equals(_r.unTaskNum))
                {
                    return false;
                }
            }
            if(runTaskNum != _r.runTaskNum)
            {
                if(runTaskNum == null || _r.runTaskNum == null || !runTaskNum.equals(_r.runTaskNum))
                {
                    return false;
                }
            }
            if(executeDate != _r.executeDate)
            {
                if(executeDate == null || _r.executeDate == null || !executeDate.equals(_r.executeDate))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::common::userposit::UserLocationTaskNumParam");
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, userIds);
        __h = IceInternal.HashUtil.hashAdd(__h, unTaskNum);
        __h = IceInternal.HashUtil.hashAdd(__h, runTaskNum);
        __h = IceInternal.HashUtil.hashAdd(__h, executeDate);
        return __h;
    }

    public UserLocationTaskNumParam
    clone()
    {
        UserLocationTaskNumParam c = null;
        try
        {
            c = (UserLocationTaskNumParam)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(organId);
        __os.writeString(userIds);
        __os.writeString(unTaskNum);
        __os.writeString(runTaskNum);
        __os.writeString(executeDate);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        organId = __is.readString();
        userIds = __is.readString();
        unTaskNum = __is.readString();
        runTaskNum = __is.readString();
        executeDate = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, UserLocationTaskNumParam __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public UserLocationTaskNumParam
    __read(IceInternal.BasicStream __is, UserLocationTaskNumParam __v)
    {
        if(__v == null)
        {
             __v = new UserLocationTaskNumParam();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final UserLocationTaskNumParam __nullMarshalValue = new UserLocationTaskNumParam();

    public static final long serialVersionUID = 590010974L;
}
