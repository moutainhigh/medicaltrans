// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_track.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.track;

public class TrackDetailIce implements java.lang.Cloneable, java.io.Serializable
{
    public String message;

    public String
    getMessage()
    {
        return message;
    }

    public void
    setMessage(String _message)
    {
        message = _message;
    }

    public String createDate;

    public String
    getCreateDate()
    {
        return createDate;
    }

    public void
    setCreateDate(String _createDate)
    {
        createDate = _createDate;
    }

    public String action;

    public String
    getAction()
    {
        return action;
    }

    public void
    setAction(String _action)
    {
        action = _action;
    }

    public String actionName;

    public String
    getActionName()
    {
        return actionName;
    }

    public void
    setActionName(String _actionName)
    {
        actionName = _actionName;
    }

    public String userName;

    public String
    getUserName()
    {
        return userName;
    }

    public void
    setUserName(String _userName)
    {
        userName = _userName;
    }

    public TrackDetailIce()
    {
        message = "";
        createDate = "";
        action = "";
        actionName = "";
        userName = "";
    }

    public TrackDetailIce(String message, String createDate, String action, String actionName, String userName)
    {
        this.message = message;
        this.createDate = createDate;
        this.action = action;
        this.actionName = actionName;
        this.userName = userName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TrackDetailIce _r = null;
        if(rhs instanceof TrackDetailIce)
        {
            _r = (TrackDetailIce)rhs;
        }

        if(_r != null)
        {
            if(message != _r.message)
            {
                if(message == null || _r.message == null || !message.equals(_r.message))
                {
                    return false;
                }
            }
            if(createDate != _r.createDate)
            {
                if(createDate == null || _r.createDate == null || !createDate.equals(_r.createDate))
                {
                    return false;
                }
            }
            if(action != _r.action)
            {
                if(action == null || _r.action == null || !action.equals(_r.action))
                {
                    return false;
                }
            }
            if(actionName != _r.actionName)
            {
                if(actionName == null || _r.actionName == null || !actionName.equals(_r.actionName))
                {
                    return false;
                }
            }
            if(userName != _r.userName)
            {
                if(userName == null || _r.userName == null || !userName.equals(_r.userName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::mttask::track::TrackDetailIce");
        __h = IceInternal.HashUtil.hashAdd(__h, message);
        __h = IceInternal.HashUtil.hashAdd(__h, createDate);
        __h = IceInternal.HashUtil.hashAdd(__h, action);
        __h = IceInternal.HashUtil.hashAdd(__h, actionName);
        __h = IceInternal.HashUtil.hashAdd(__h, userName);
        return __h;
    }

    public TrackDetailIce
    clone()
    {
        TrackDetailIce c = null;
        try
        {
            c = (TrackDetailIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(message);
        __os.writeString(createDate);
        __os.writeString(action);
        __os.writeString(actionName);
        __os.writeString(userName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        message = __is.readString();
        createDate = __is.readString();
        action = __is.readString();
        actionName = __is.readString();
        userName = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, TrackDetailIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TrackDetailIce
    __read(IceInternal.BasicStream __is, TrackDetailIce __v)
    {
        if(__v == null)
        {
             __v = new TrackDetailIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TrackDetailIce __nullMarshalValue = new TrackDetailIce();

    public static final long serialVersionUID = -509386715L;
}
