// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_his_task_query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mthistask.query;

/**
 * Provides type-specific helper functions.
 **/
public final class MtHisTaskRptQueryServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements MtHisTaskRptQueryServiceIcePrx
{
    private static final String __getDeptTaskRptPage_name = "getDeptTaskRptPage";

    public MtTaskPaginatorIceRsp getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam)
    {
        return getDeptTaskRptPage(deptTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getDeptTaskRptPage_name);
        return end_getDeptTaskRptPage(begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, Callback_MtHisTaskRptQueryServiceIce_getDeptTaskRptPage __cb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_getDeptTaskRptPage __cb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskRptPage(deptTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                        new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                            {
                                                public final void __completed(Ice.AsyncResult __result)
                                                {
                                                    MtHisTaskRptQueryServiceIcePrxHelper.__getDeptTaskRptPage_completed(this, __result);
                                                }
                                            });
    }

    private Ice.AsyncResult begin_getDeptTaskRptPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getDeptTaskRptPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getDeptTaskRptPage_name, __cb);
        try
        {
            __result.prepare(__getDeptTaskRptPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DeptTaskPageIceParam.__write(__os, deptTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_getDeptTaskRptPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getDeptTaskRptPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getDeptTaskRptPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_getDeptTaskRptPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisFixedTaskExeInfoRptPage_name = "queryMtHisFixedTaskExeInfoRptPage";

    public FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false);
    }

    public FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true);
    }

    private FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisFixedTaskExeInfoRptPage_name);
        return end_queryMtHisFixedTaskExeInfoRptPage(begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisFixedTaskExeInfoRptPage __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisFixedTaskExeInfoRptPage __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                   IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                   IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                   java.util.Map<String, String> __ctx, 
                                                                   IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                   java.util.Map<String, String> __ctx, 
                                                                   IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                    java.util.Map<String, String> __ctx, 
                                                                    boolean __explicitCtx, 
                                                                    boolean __synchronous, 
                                                                    IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoRptPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                                       new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.FixedTaskHisExePageRsp>(__responseCb, __exceptionCb, __sentCb)
                                                           {
                                                               public final void __completed(Ice.AsyncResult __result)
                                                               {
                                                                   MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisFixedTaskExeInfoRptPage_completed(this, __result);
                                                               }
                                                           });
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                    java.util.Map<String, String> __ctx, 
                                                                    boolean __explicitCtx, 
                                                                    boolean __synchronous, 
                                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisFixedTaskExeInfoRptPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisFixedTaskExeInfoRptPage_name, __cb);
        try
        {
            __result.prepare(__queryMtHisFixedTaskExeInfoRptPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskHisExePageRsp end_queryMtHisFixedTaskExeInfoRptPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisFixedTaskExeInfoRptPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskHisExePageRsp __ret = null;
            __ret = FixedTaskHisExePageRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisFixedTaskExeInfoRptPage_completed(Ice.TwowayCallbackArg1<FixedTaskHisExePageRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        FixedTaskHisExePageRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisFixedTaskExeInfoRptPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisFixedTaskExeRptDetail_name = "queryMtHisFixedTaskExeRptDetail";

    public FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false);
    }

    public FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisFixedTaskExeRptDetail_name);
        return end_queryMtHisFixedTaskExeRptDetail(begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisFixedTaskExeRptDetail __cb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisFixedTaskExeRptDetail __cb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                 IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                 IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                  java.util.Map<String, String> __ctx, 
                                                                  boolean __explicitCtx, 
                                                                  boolean __synchronous, 
                                                                  IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                                     new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.FixedTaskExeDetailReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                         {
                                                             public final void __completed(Ice.AsyncResult __result)
                                                             {
                                                                 MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisFixedTaskExeRptDetail_completed(this, __result);
                                                             }
                                                         });
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                                  java.util.Map<String, String> __ctx, 
                                                                  boolean __explicitCtx, 
                                                                  boolean __synchronous, 
                                                                  IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisFixedTaskExeRptDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisFixedTaskExeRptDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisFixedTaskExeRptDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskExeDetailReturnIce end_queryMtHisFixedTaskExeRptDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisFixedTaskExeRptDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskExeDetailReturnIce __ret = null;
            __ret = FixedTaskExeDetailReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisFixedTaskExeRptDetail_completed(Ice.TwowayCallbackArg1<FixedTaskExeDetailReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        FixedTaskExeDetailReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisFixedTaskExeRptDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskFixedRptDetail_name = "queryMtHisTaskFixedRptDetail";

    public MtTaskDetailRetIceRsp queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskFixedRptDetail_name);
        return end_queryMtHisTaskFixedRptDetail(begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskFixedRptDetail __cb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskFixedRptDetail __cb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                                  new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                      {
                                                          public final void __completed(Ice.AsyncResult __result)
                                                          {
                                                              MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisTaskFixedRptDetail_completed(this, __result);
                                                          }
                                                      });
    }

    private Ice.AsyncResult begin_queryMtHisTaskFixedRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskFixedRptDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskFixedRptDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskFixedRptDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtHisTaskFixedRptDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskFixedRptDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskFixedRptDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskFixedRptDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskRptDetail_name = "queryMtHisTaskRptDetail";

    public MtTaskDetailRetIceRsp queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskRptDetail_name);
        return end_queryMtHisTaskRptDetail(begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptDetail __cb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptDetail __cb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisTaskRptDetail_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskRptDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskRptDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskRptDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtHisTaskRptDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskRptDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskRptDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskRptDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskRptPage_name = "queryMtHisTaskRptPage";

    public MtTaskPaginatorIceRsp queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisTaskRptPage(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskRptPage_name);
        return end_queryMtHisTaskRptPage(begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptPage __cb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptPage __cb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                           new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                               {
                                                   public final void __completed(Ice.AsyncResult __result)
                                                   {
                                                       MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisTaskRptPage_completed(this, __result);
                                                   }
                                               });
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskRptPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskRptPage_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskRptPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_queryMtHisTaskRptPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskRptPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskRptPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskRptPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskRptPageByUser_name = "queryMtHisTaskRptPageByUser";

    public MtTaskPaginatorIceRsp queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskRptPageByUser_name);
        return end_queryMtHisTaskRptPageByUser(begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptPageByUser __cb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskRptQueryServiceIce_queryMtHisTaskRptPageByUser __cb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             java.util.Map<String, String> __ctx, 
                                                             IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              boolean __explicitCtx, 
                                                              boolean __synchronous, 
                                                              IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskRptPageByUser(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                                 new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                     {
                                                         public final void __completed(Ice.AsyncResult __result)
                                                         {
                                                             MtHisTaskRptQueryServiceIcePrxHelper.__queryMtHisTaskRptPageByUser_completed(this, __result);
                                                         }
                                                     });
    }

    private Ice.AsyncResult begin_queryMtHisTaskRptPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              boolean __explicitCtx, 
                                                              boolean __synchronous, 
                                                              IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskRptPageByUser_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskRptPageByUser_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskRptPageByUser_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_queryMtHisTaskRptPageByUser(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskRptPageByUser_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskRptPageByUser_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskRptQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskRptPageByUser(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static MtHisTaskRptQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, MtHisTaskRptQueryServiceIcePrx.class, MtHisTaskRptQueryServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::mthistask::query::MtHisTaskRptQueryServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, MtHisTaskRptQueryServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static MtHisTaskRptQueryServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            MtHisTaskRptQueryServiceIcePrxHelper result = new MtHisTaskRptQueryServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
