// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_his_task_query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mthistask.query;

/**
 * Provides type-specific helper functions.
 **/
public final class MtHisTaskQueryServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements MtHisTaskQueryServiceIcePrx
{
    private static final String __getDeptTaskPage_name = "getDeptTaskPage";

    public MtTaskPaginatorIceRsp getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam)
    {
        return getDeptTaskPage(deptTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return getDeptTaskPage(deptTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getDeptTaskPage_name);
        return end_getDeptTaskPage(begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, Callback_MtHisTaskQueryServiceIce_getDeptTaskPage __cb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_getDeptTaskPage __cb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getDeptTaskPage(deptTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                     new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                         {
                                             public final void __completed(Ice.AsyncResult __result)
                                             {
                                                 MtHisTaskQueryServiceIcePrxHelper.__getDeptTaskPage_completed(this, __result);
                                             }
                                         });
    }

    private Ice.AsyncResult begin_getDeptTaskPage(DeptTaskPageIceParam deptTaskPageIceParam, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getDeptTaskPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getDeptTaskPage_name, __cb);
        try
        {
            __result.prepare(__getDeptTaskPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            DeptTaskPageIceParam.__write(__os, deptTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_getDeptTaskPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getDeptTaskPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getDeptTaskPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_getDeptTaskPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisFixedTaskExeDetail_name = "queryMtHisFixedTaskExeDetail";

    public FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false);
    }

    public FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private FixedTaskExeDetailReturnIce queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisFixedTaskExeDetail_name);
        return end_queryMtHisFixedTaskExeDetail(begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisFixedTaskExeDetail __cb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisFixedTaskExeDetail __cb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                                  new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.FixedTaskExeDetailReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                      {
                                                          public final void __completed(Ice.AsyncResult __result)
                                                          {
                                                              MtHisTaskQueryServiceIcePrxHelper.__queryMtHisFixedTaskExeDetail_completed(this, __result);
                                                          }
                                                      });
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisFixedTaskExeDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisFixedTaskExeDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisFixedTaskExeDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskExeDetailReturnIce end_queryMtHisFixedTaskExeDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisFixedTaskExeDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskExeDetailReturnIce __ret = null;
            __ret = FixedTaskExeDetailReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisFixedTaskExeDetail_completed(Ice.TwowayCallbackArg1<FixedTaskExeDetailReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        FixedTaskExeDetailReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisFixedTaskExeDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisFixedTaskExeInfoPage_name = "queryMtHisFixedTaskExeInfoPage";

    public FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false);
    }

    public FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true);
    }

    private FixedTaskHisExePageRsp queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisFixedTaskExeInfoPage_name);
        return end_queryMtHisFixedTaskExeInfoPage(begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisFixedTaskExeInfoPage __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisFixedTaskExeInfoPage __cb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.Functional_GenericCallback1<FixedTaskHisExePageRsp> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                                    new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.FixedTaskHisExePageRsp>(__responseCb, __exceptionCb, __sentCb)
                                                        {
                                                            public final void __completed(Ice.AsyncResult __result)
                                                            {
                                                                MtHisTaskQueryServiceIcePrxHelper.__queryMtHisFixedTaskExeInfoPage_completed(this, __result);
                                                            }
                                                        });
    }

    private Ice.AsyncResult begin_queryMtHisFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisFixedTaskExeInfoPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisFixedTaskExeInfoPage_name, __cb);
        try
        {
            __result.prepare(__queryMtHisFixedTaskExeInfoPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskHisExePageRsp end_queryMtHisFixedTaskExeInfoPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisFixedTaskExeInfoPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskHisExePageRsp __ret = null;
            __ret = FixedTaskHisExePageRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisFixedTaskExeInfoPage_completed(Ice.TwowayCallbackArg1<FixedTaskHisExePageRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        FixedTaskHisExePageRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisFixedTaskExeInfoPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskDetail_name = "queryMtHisTaskDetail";

    public MtTaskDetailRetIceRsp queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisTaskDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskDetail_name);
        return end_queryMtHisTaskDetail(begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskDetail __cb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskDetail __cb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                      IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                      IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                          new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                              {
                                                  public final void __completed(Ice.AsyncResult __result)
                                                  {
                                                      MtHisTaskQueryServiceIcePrxHelper.__queryMtHisTaskDetail_completed(this, __result);
                                                  }
                                              });
    }

    private Ice.AsyncResult begin_queryMtHisTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtHisTaskDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskFixedDetail_name = "queryMtHisTaskFixedDetail";

    public MtTaskDetailRetIceRsp queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskFixedDetail_name);
        return end_queryMtHisTaskFixedDetail(begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskFixedDetail __cb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskFixedDetail __cb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskFixedDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                               new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                   {
                                                       public final void __completed(Ice.AsyncResult __result)
                                                       {
                                                           MtHisTaskQueryServiceIcePrxHelper.__queryMtHisTaskFixedDetail_completed(this, __result);
                                                       }
                                                   });
    }

    private Ice.AsyncResult begin_queryMtHisTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskFixedDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskFixedDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskFixedDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtHisTaskFixedDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskFixedDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskFixedDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskFixedDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskPage_name = "queryMtHisTaskPage";

    public MtTaskPaginatorIceRsp queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisTaskPage(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskPage_name);
        return end_queryMtHisTaskPage(begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskPage __cb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskPage __cb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                        new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                            {
                                                public final void __completed(Ice.AsyncResult __result)
                                                {
                                                    MtHisTaskQueryServiceIcePrxHelper.__queryMtHisTaskPage_completed(this, __result);
                                                }
                                            });
    }

    private Ice.AsyncResult begin_queryMtHisTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskPage_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_queryMtHisTaskPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtHisTaskPageByUser_name = "queryMtHisTaskPageByUser";

    public MtTaskPaginatorIceRsp queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtHisTaskPageByUser_name);
        return end_queryMtHisTaskPageByUser(begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskPageByUser __cb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryMtHisTaskPageByUser __cb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           boolean __explicitCtx, 
                                                           boolean __synchronous, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtHisTaskPageByUser(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                              new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                  {
                                                      public final void __completed(Ice.AsyncResult __result)
                                                      {
                                                          MtHisTaskQueryServiceIcePrxHelper.__queryMtHisTaskPageByUser_completed(this, __result);
                                                      }
                                                  });
    }

    private Ice.AsyncResult begin_queryMtHisTaskPageByUser(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           boolean __explicitCtx, 
                                                           boolean __synchronous, 
                                                           IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtHisTaskPageByUser_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtHisTaskPageByUser_name, __cb);
        try
        {
            __result.prepare(__queryMtHisTaskPageByUser_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_queryMtHisTaskPageByUser(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtHisTaskPageByUser_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtHisTaskPageByUser_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtHisTaskPageByUser(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryUserHisTaskDaylyPage_name = "queryUserHisTaskDaylyPage";

    public MtTaskPaginatorIceRsp queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIceRsp queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIceRsp queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryUserHisTaskDaylyPage_name);
        return end_queryUserHisTaskDaylyPage(begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtHisTaskQueryServiceIce_queryUserHisTaskDaylyPage __cb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtHisTaskQueryServiceIce_queryUserHisTaskDaylyPage __cb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.Functional_GenericCallback1<MtTaskPaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryUserHisTaskDaylyPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                               new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mthistask.query.MtTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                   {
                                                       public final void __completed(Ice.AsyncResult __result)
                                                       {
                                                           MtHisTaskQueryServiceIcePrxHelper.__queryUserHisTaskDaylyPage_completed(this, __result);
                                                       }
                                                   });
    }

    private Ice.AsyncResult begin_queryUserHisTaskDaylyPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryUserHisTaskDaylyPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryUserHisTaskDaylyPage_name, __cb);
        try
        {
            __result.prepare(__queryUserHisTaskDaylyPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIceRsp end_queryUserHisTaskDaylyPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryUserHisTaskDaylyPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIceRsp __ret = null;
            __ret = MtTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryUserHisTaskDaylyPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mthistask.query.MtHisTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryUserHisTaskDaylyPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtHisTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static MtHisTaskQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static MtHisTaskQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, MtHisTaskQueryServiceIcePrx.class, MtHisTaskQueryServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::mthistask::query::MtHisTaskQueryServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, MtHisTaskQueryServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static MtHisTaskQueryServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            MtHisTaskQueryServiceIcePrxHelper result = new MtHisTaskQueryServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
