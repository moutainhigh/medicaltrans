// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_location_common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.location.common;

/**
 * Provides type-specific helper functions.
 **/
public final class MtLocationCommonServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements MtLocationCommonServiceIcePrx
{
    private static final String __getLocationInfoByMac_name = "getLocationInfoByMac";

    public LocationInfoReturnIce getLocationInfoByMac(int organId, String mac)
    {
        return getLocationInfoByMac(organId, mac, null, false);
    }

    public LocationInfoReturnIce getLocationInfoByMac(int organId, String mac, java.util.Map<String, String> __ctx)
    {
        return getLocationInfoByMac(organId, mac, __ctx, true);
    }

    private LocationInfoReturnIce getLocationInfoByMac(int organId, String mac, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getLocationInfoByMac_name);
        return end_getLocationInfoByMac(begin_getLocationInfoByMac(organId, mac, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac)
    {
        return begin_getLocationInfoByMac(organId, mac, null, false, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac, java.util.Map<String, String> __ctx)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac, Ice.Callback __cb)
    {
        return begin_getLocationInfoByMac(organId, mac, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac, Callback_MtLocationCommonServiceIce_getLocationInfoByMac __cb)
    {
        return begin_getLocationInfoByMac(organId, mac, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, String mac, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_getLocationInfoByMac __cb)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                      String mac, 
                                                      IceInternal.Functional_GenericCallback1<LocationInfoReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoByMac(organId, mac, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                      String mac, 
                                                      IceInternal.Functional_GenericCallback1<LocationInfoReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByMac(organId, mac, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                      String mac, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<LocationInfoReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                      String mac, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<LocationInfoReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                       String mac, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.Functional_GenericCallback1<LocationInfoReturnIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByMac(organId, mac, __ctx, __explicitCtx, __synchronous, 
                                          new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                              {
                                                  public final void __completed(Ice.AsyncResult __result)
                                                  {
                                                      MtLocationCommonServiceIcePrxHelper.__getLocationInfoByMac_completed(this, __result);
                                                  }
                                              });
    }

    private Ice.AsyncResult begin_getLocationInfoByMac(int organId, 
                                                       String mac, 
                                                       java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getLocationInfoByMac_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getLocationInfoByMac_name, __cb);
        try
        {
            __result.prepare(__getLocationInfoByMac_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeString(mac);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoReturnIce end_getLocationInfoByMac(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getLocationInfoByMac_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoReturnIce __ret = null;
            __ret = LocationInfoReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getLocationInfoByMac_completed(Ice.TwowayCallbackArg1<LocationInfoReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_getLocationInfoByMac(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __getLocationInfoByRefIdList_name = "getLocationInfoByRefIdList";

    public LocationInfoListReturnIce getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList)
    {
        return getLocationInfoByRefIdList(organId, locationIdList, null, false);
    }

    public LocationInfoListReturnIce getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return getLocationInfoByRefIdList(organId, locationIdList, __ctx, true);
    }

    private LocationInfoListReturnIce getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getLocationInfoByRefIdList_name);
        return end_getLocationInfoByRefIdList(begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, null, false, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, Ice.Callback __cb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, Callback_MtLocationCommonServiceIce_getLocationInfoByRefIdList __cb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_getLocationInfoByRefIdList __cb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                            java.util.List<java.lang.Integer> locationIdList, 
                                                            IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                            java.util.List<java.lang.Integer> locationIdList, 
                                                            IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                            java.util.List<java.lang.Integer> locationIdList, 
                                                            java.util.Map<String, String> __ctx, 
                                                            IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                            java.util.List<java.lang.Integer> locationIdList, 
                                                            java.util.Map<String, String> __ctx, 
                                                            IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                             java.util.List<java.lang.Integer> locationIdList, 
                                                             java.util.Map<String, String> __ctx, 
                                                             boolean __explicitCtx, 
                                                             boolean __synchronous, 
                                                             IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoByRefIdList(organId, locationIdList, __ctx, __explicitCtx, __synchronous, 
                                                new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoListReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                    {
                                                        public final void __completed(Ice.AsyncResult __result)
                                                        {
                                                            MtLocationCommonServiceIcePrxHelper.__getLocationInfoByRefIdList_completed(this, __result);
                                                        }
                                                    });
    }

    private Ice.AsyncResult begin_getLocationInfoByRefIdList(int organId, 
                                                             java.util.List<java.lang.Integer> locationIdList, 
                                                             java.util.Map<String, String> __ctx, 
                                                             boolean __explicitCtx, 
                                                             boolean __synchronous, 
                                                             IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getLocationInfoByRefIdList_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getLocationInfoByRefIdList_name, __cb);
        try
        {
            __result.prepare(__getLocationInfoByRefIdList_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            LocationIdListHelper.write(__os, locationIdList);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoListReturnIce end_getLocationInfoByRefIdList(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getLocationInfoByRefIdList_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoListReturnIce __ret = null;
            __ret = LocationInfoListReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getLocationInfoByRefIdList_completed(Ice.TwowayCallbackArg1<LocationInfoListReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoListReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_getLocationInfoByRefIdList(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __getLocationInfoBylocationIdList_name = "getLocationInfoBylocationIdList";

    public LocationInfoListReturnIce getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList)
    {
        return getLocationInfoBylocationIdList(locationIdList, null, false);
    }

    public LocationInfoListReturnIce getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return getLocationInfoBylocationIdList(locationIdList, __ctx, true);
    }

    private LocationInfoListReturnIce getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getLocationInfoBylocationIdList_name);
        return end_getLocationInfoBylocationIdList(begin_getLocationInfoBylocationIdList(locationIdList, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, null, false, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, Ice.Callback __cb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, Callback_MtLocationCommonServiceIce_getLocationInfoBylocationIdList __cb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_getLocationInfoBylocationIdList __cb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                  java.util.Map<String, String> __ctx, 
                                                                  boolean __explicitCtx, 
                                                                  boolean __synchronous, 
                                                                  IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getLocationInfoBylocationIdList(locationIdList, __ctx, __explicitCtx, __synchronous, 
                                                     new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoListReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                         {
                                                             public final void __completed(Ice.AsyncResult __result)
                                                             {
                                                                 MtLocationCommonServiceIcePrxHelper.__getLocationInfoBylocationIdList_completed(this, __result);
                                                             }
                                                         });
    }

    private Ice.AsyncResult begin_getLocationInfoBylocationIdList(java.util.List<java.lang.Integer> locationIdList, 
                                                                  java.util.Map<String, String> __ctx, 
                                                                  boolean __explicitCtx, 
                                                                  boolean __synchronous, 
                                                                  IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getLocationInfoBylocationIdList_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getLocationInfoBylocationIdList_name, __cb);
        try
        {
            __result.prepare(__getLocationInfoBylocationIdList_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            LocationIdListHelper.write(__os, locationIdList);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoListReturnIce end_getLocationInfoBylocationIdList(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getLocationInfoBylocationIdList_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoListReturnIce __ret = null;
            __ret = LocationInfoListReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getLocationInfoBylocationIdList_completed(Ice.TwowayCallbackArg1<LocationInfoListReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoListReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_getLocationInfoBylocationIdList(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryLocationInfo_name = "queryLocationInfo";

    public LocationInfoReturn queryLocationInfo(int organId, int locationId)
    {
        return queryLocationInfo(organId, locationId, null, false);
    }

    public LocationInfoReturn queryLocationInfo(int organId, int locationId, java.util.Map<String, String> __ctx)
    {
        return queryLocationInfo(organId, locationId, __ctx, true);
    }

    private LocationInfoReturn queryLocationInfo(int organId, int locationId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryLocationInfo_name);
        return end_queryLocationInfo(begin_queryLocationInfo(organId, locationId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId)
    {
        return begin_queryLocationInfo(organId, locationId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId, java.util.Map<String, String> __ctx)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId, Ice.Callback __cb)
    {
        return begin_queryLocationInfo(organId, locationId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId, Callback_MtLocationCommonServiceIce_queryLocationInfo __cb)
    {
        return begin_queryLocationInfo(organId, locationId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, int locationId, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_queryLocationInfo __cb)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                   int locationId, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfo(organId, locationId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                   int locationId, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfo(organId, locationId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                   int locationId, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                   int locationId, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                    int locationId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_GenericCallback1<LocationInfoReturn> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfo(organId, locationId, __ctx, __explicitCtx, __synchronous, 
                                       new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoReturn>(__responseCb, __exceptionCb, __sentCb)
                                           {
                                               public final void __completed(Ice.AsyncResult __result)
                                               {
                                                   MtLocationCommonServiceIcePrxHelper.__queryLocationInfo_completed(this, __result);
                                               }
                                           });
    }

    private Ice.AsyncResult begin_queryLocationInfo(int organId, 
                                                    int locationId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryLocationInfo_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryLocationInfo_name, __cb);
        try
        {
            __result.prepare(__queryLocationInfo_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeInt(locationId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoReturn end_queryLocationInfo(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryLocationInfo_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoReturn __ret = null;
            __ret = LocationInfoReturn.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryLocationInfo_completed(Ice.TwowayCallbackArg1<LocationInfoReturn> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoReturn __ret = null;
        try
        {
            __ret = __proxy.end_queryLocationInfo(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryLocationInfoByOrganIdList_name = "queryLocationInfoByOrganIdList";

    public LocationInfoListReturn queryLocationInfoByOrganIdList(int organId)
    {
        return queryLocationInfoByOrganIdList(organId, null, false);
    }

    public LocationInfoListReturn queryLocationInfoByOrganIdList(int organId, java.util.Map<String, String> __ctx)
    {
        return queryLocationInfoByOrganIdList(organId, __ctx, true);
    }

    private LocationInfoListReturn queryLocationInfoByOrganIdList(int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryLocationInfoByOrganIdList_name);
        return end_queryLocationInfoByOrganIdList(begin_queryLocationInfoByOrganIdList(organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId)
    {
        return begin_queryLocationInfoByOrganIdList(organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, Ice.Callback __cb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, Callback_MtLocationCommonServiceIce_queryLocationInfoByOrganIdList __cb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_queryLocationInfoByOrganIdList __cb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoByOrganIdList(organId, __ctx, __explicitCtx, __synchronous, 
                                                    new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoListReturn>(__responseCb, __exceptionCb, __sentCb)
                                                        {
                                                            public final void __completed(Ice.AsyncResult __result)
                                                            {
                                                                MtLocationCommonServiceIcePrxHelper.__queryLocationInfoByOrganIdList_completed(this, __result);
                                                            }
                                                        });
    }

    private Ice.AsyncResult begin_queryLocationInfoByOrganIdList(int organId, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryLocationInfoByOrganIdList_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryLocationInfoByOrganIdList_name, __cb);
        try
        {
            __result.prepare(__queryLocationInfoByOrganIdList_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoListReturn end_queryLocationInfoByOrganIdList(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryLocationInfoByOrganIdList_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoListReturn __ret = null;
            __ret = LocationInfoListReturn.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryLocationInfoByOrganIdList_completed(Ice.TwowayCallbackArg1<LocationInfoListReturn> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoListReturn __ret = null;
        try
        {
            __ret = __proxy.end_queryLocationInfoByOrganIdList(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryLocationInfoListByOrganId_name = "queryLocationInfoListByOrganId";

    public LocationInfoListReturnIce queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList)
    {
        return queryLocationInfoListByOrganId(organId, locationIdList, null, false);
    }

    public LocationInfoListReturnIce queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true);
    }

    private LocationInfoListReturnIce queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryLocationInfoListByOrganId_name);
        return end_queryLocationInfoListByOrganId(begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, Ice.Callback __cb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, Callback_MtLocationCommonServiceIce_queryLocationInfoListByOrganId __cb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_queryLocationInfoListByOrganId __cb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                java.util.List<java.lang.Integer> locationIdList, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                java.util.List<java.lang.Integer> locationIdList, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                java.util.List<java.lang.Integer> locationIdList, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                java.util.List<java.lang.Integer> locationIdList, 
                                                                java.util.Map<String, String> __ctx, 
                                                                IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                 java.util.List<java.lang.Integer> locationIdList, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.Functional_GenericCallback1<LocationInfoListReturnIce> __responseCb, 
                                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationInfoListByOrganId(organId, locationIdList, __ctx, __explicitCtx, __synchronous, 
                                                    new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoListReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                        {
                                                            public final void __completed(Ice.AsyncResult __result)
                                                            {
                                                                MtLocationCommonServiceIcePrxHelper.__queryLocationInfoListByOrganId_completed(this, __result);
                                                            }
                                                        });
    }

    private Ice.AsyncResult begin_queryLocationInfoListByOrganId(int organId, 
                                                                 java.util.List<java.lang.Integer> locationIdList, 
                                                                 java.util.Map<String, String> __ctx, 
                                                                 boolean __explicitCtx, 
                                                                 boolean __synchronous, 
                                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryLocationInfoListByOrganId_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryLocationInfoListByOrganId_name, __cb);
        try
        {
            __result.prepare(__queryLocationInfoListByOrganId_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            LocationIdListHelper.write(__os, locationIdList);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoListReturnIce end_queryLocationInfoListByOrganId(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryLocationInfoListByOrganId_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoListReturnIce __ret = null;
            __ret = LocationInfoListReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryLocationInfoListByOrganId_completed(Ice.TwowayCallbackArg1<LocationInfoListReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoListReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryLocationInfoListByOrganId(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryLocationList_name = "queryLocationList";

    public LocationInfoListReturn queryLocationList(java.util.List<java.lang.Integer> locationIdList)
    {
        return queryLocationList(locationIdList, null, false);
    }

    public LocationInfoListReturn queryLocationList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return queryLocationList(locationIdList, __ctx, true);
    }

    private LocationInfoListReturn queryLocationList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryLocationList_name);
        return end_queryLocationList(begin_queryLocationList(locationIdList, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList)
    {
        return begin_queryLocationList(locationIdList, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx)
    {
        return begin_queryLocationList(locationIdList, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, Ice.Callback __cb)
    {
        return begin_queryLocationList(locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryLocationList(locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, Callback_MtLocationCommonServiceIce_queryLocationList __cb)
    {
        return begin_queryLocationList(locationIdList, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_queryLocationList __cb)
    {
        return begin_queryLocationList(locationIdList, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationList(locationIdList, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationList(locationIdList, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryLocationList(locationIdList, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationList(locationIdList, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_GenericCallback1<LocationInfoListReturn> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryLocationList(locationIdList, __ctx, __explicitCtx, __synchronous, 
                                       new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.location.common.LocationInfoListReturn>(__responseCb, __exceptionCb, __sentCb)
                                           {
                                               public final void __completed(Ice.AsyncResult __result)
                                               {
                                                   MtLocationCommonServiceIcePrxHelper.__queryLocationList_completed(this, __result);
                                               }
                                           });
    }

    private Ice.AsyncResult begin_queryLocationList(java.util.List<java.lang.Integer> locationIdList, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryLocationList_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryLocationList_name, __cb);
        try
        {
            __result.prepare(__queryLocationList_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            LocationIdListHelper.write(__os, locationIdList);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public LocationInfoListReturn end_queryLocationList(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryLocationList_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            LocationInfoListReturn __ret = null;
            __ret = LocationInfoListReturn.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryLocationList_completed(Ice.TwowayCallbackArg1<LocationInfoListReturn> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        LocationInfoListReturn __ret = null;
        try
        {
            __ret = __proxy.end_queryLocationList(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __refreshRedisLocaiton_name = "refreshRedisLocaiton";

    public resp.RpcRespIce refreshRedisLocaiton()
    {
        return refreshRedisLocaiton(null, false);
    }

    public resp.RpcRespIce refreshRedisLocaiton(java.util.Map<String, String> __ctx)
    {
        return refreshRedisLocaiton(__ctx, true);
    }

    private resp.RpcRespIce refreshRedisLocaiton(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__refreshRedisLocaiton_name);
        return end_refreshRedisLocaiton(begin_refreshRedisLocaiton(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton()
    {
        return begin_refreshRedisLocaiton(null, false, false, null);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx)
    {
        return begin_refreshRedisLocaiton(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(Ice.Callback __cb)
    {
        return begin_refreshRedisLocaiton(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_refreshRedisLocaiton(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(Callback_MtLocationCommonServiceIce_refreshRedisLocaiton __cb)
    {
        return begin_refreshRedisLocaiton(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_refreshRedisLocaiton __cb)
    {
        return begin_refreshRedisLocaiton(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_refreshRedisLocaiton(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisLocaiton(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_refreshRedisLocaiton(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisLocaiton(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisLocaiton(__ctx, __explicitCtx, __synchronous, 
                                          new IceInternal.Functional_TwowayCallbackArg1<resp.RpcRespIce>(__responseCb, __exceptionCb, __sentCb)
                                              {
                                                  public final void __completed(Ice.AsyncResult __result)
                                                  {
                                                      MtLocationCommonServiceIcePrxHelper.__refreshRedisLocaiton_completed(this, __result);
                                                  }
                                              });
    }

    private Ice.AsyncResult begin_refreshRedisLocaiton(java.util.Map<String, String> __ctx, 
                                                       boolean __explicitCtx, 
                                                       boolean __synchronous, 
                                                       IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__refreshRedisLocaiton_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__refreshRedisLocaiton_name, __cb);
        try
        {
            __result.prepare(__refreshRedisLocaiton_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public resp.RpcRespIce end_refreshRedisLocaiton(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __refreshRedisLocaiton_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            resp.RpcRespIceHolder __ret = new resp.RpcRespIceHolder();
            __is.readObject(__ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret.value;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __refreshRedisLocaiton_completed(Ice.TwowayCallbackArg1<resp.RpcRespIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        resp.RpcRespIce __ret = null;
        try
        {
            __ret = __proxy.end_refreshRedisLocaiton(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __refreshRedisUserLocaiton_name = "refreshRedisUserLocaiton";

    public resp.RpcRespIce refreshRedisUserLocaiton()
    {
        return refreshRedisUserLocaiton(null, false);
    }

    public resp.RpcRespIce refreshRedisUserLocaiton(java.util.Map<String, String> __ctx)
    {
        return refreshRedisUserLocaiton(__ctx, true);
    }

    private resp.RpcRespIce refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__refreshRedisUserLocaiton_name);
        return end_refreshRedisUserLocaiton(begin_refreshRedisUserLocaiton(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton()
    {
        return begin_refreshRedisUserLocaiton(null, false, false, null);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx)
    {
        return begin_refreshRedisUserLocaiton(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(Ice.Callback __cb)
    {
        return begin_refreshRedisUserLocaiton(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_refreshRedisUserLocaiton(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(Callback_MtLocationCommonServiceIce_refreshRedisUserLocaiton __cb)
    {
        return begin_refreshRedisUserLocaiton(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, Callback_MtLocationCommonServiceIce_refreshRedisUserLocaiton __cb)
    {
        return begin_refreshRedisUserLocaiton(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_refreshRedisUserLocaiton(null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisUserLocaiton(null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, 
                                                          IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_refreshRedisUserLocaiton(__ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, 
                                                          IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisUserLocaiton(__ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, 
                                                           boolean __explicitCtx, 
                                                           boolean __synchronous, 
                                                           IceInternal.Functional_GenericCallback1<resp.RpcRespIce> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_refreshRedisUserLocaiton(__ctx, __explicitCtx, __synchronous, 
                                              new IceInternal.Functional_TwowayCallbackArg1<resp.RpcRespIce>(__responseCb, __exceptionCb, __sentCb)
                                                  {
                                                      public final void __completed(Ice.AsyncResult __result)
                                                      {
                                                          MtLocationCommonServiceIcePrxHelper.__refreshRedisUserLocaiton_completed(this, __result);
                                                      }
                                                  });
    }

    private Ice.AsyncResult begin_refreshRedisUserLocaiton(java.util.Map<String, String> __ctx, 
                                                           boolean __explicitCtx, 
                                                           boolean __synchronous, 
                                                           IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__refreshRedisUserLocaiton_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__refreshRedisUserLocaiton_name, __cb);
        try
        {
            __result.prepare(__refreshRedisUserLocaiton_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public resp.RpcRespIce end_refreshRedisUserLocaiton(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __refreshRedisUserLocaiton_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            resp.RpcRespIceHolder __ret = new resp.RpcRespIceHolder();
            __is.readObject(__ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret.value;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __refreshRedisUserLocaiton_completed(Ice.TwowayCallbackArg1<resp.RpcRespIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx __proxy = (segi.medicaltrans.location.common.MtLocationCommonServiceIcePrx)__result.getProxy();
        resp.RpcRespIce __ret = null;
        try
        {
            __ret = __proxy.end_refreshRedisUserLocaiton(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtLocationCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtLocationCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtLocationCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtLocationCommonServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static MtLocationCommonServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static MtLocationCommonServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, MtLocationCommonServiceIcePrx.class, MtLocationCommonServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::location::common::MtLocationCommonServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, MtLocationCommonServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static MtLocationCommonServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            MtLocationCommonServiceIcePrxHelper result = new MtLocationCommonServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
