// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_location_common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.location.common;

public class LocationInfoIce implements java.lang.Cloneable, java.io.Serializable
{
    public String locationId;

    public String
    getLocationId()
    {
        return locationId;
    }

    public void
    setLocationId(String _locationId)
    {
        locationId = _locationId;
    }

    public String locationName;

    public String
    getLocationName()
    {
        return locationName;
    }

    public void
    setLocationName(String _locationName)
    {
        locationName = _locationName;
    }

    public String buildId;

    public String
    getBuildId()
    {
        return buildId;
    }

    public void
    setBuildId(String _buildId)
    {
        buildId = _buildId;
    }

    public String sid;

    public String
    getSid()
    {
        return sid;
    }

    public void
    setSid(String _sid)
    {
        sid = _sid;
    }

    public String floorId;

    public String
    getFloorId()
    {
        return floorId;
    }

    public void
    setFloorId(String _floorId)
    {
        floorId = _floorId;
    }

    public String groupOrganId;

    public String
    getGroupOrganId()
    {
        return groupOrganId;
    }

    public void
    setGroupOrganId(String _groupOrganId)
    {
        groupOrganId = _groupOrganId;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String status;

    public String
    getStatus()
    {
        return status;
    }

    public void
    setStatus(String _status)
    {
        status = _status;
    }

    public LocationInfoIce()
    {
        locationId = "";
        locationName = "";
        buildId = "";
        sid = "";
        floorId = "";
        groupOrganId = "";
        organId = "";
        status = "";
    }

    public LocationInfoIce(String locationId, String locationName, String buildId, String sid, String floorId, String groupOrganId, String organId, String status)
    {
        this.locationId = locationId;
        this.locationName = locationName;
        this.buildId = buildId;
        this.sid = sid;
        this.floorId = floorId;
        this.groupOrganId = groupOrganId;
        this.organId = organId;
        this.status = status;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LocationInfoIce _r = null;
        if(rhs instanceof LocationInfoIce)
        {
            _r = (LocationInfoIce)rhs;
        }

        if(_r != null)
        {
            if(locationId != _r.locationId)
            {
                if(locationId == null || _r.locationId == null || !locationId.equals(_r.locationId))
                {
                    return false;
                }
            }
            if(locationName != _r.locationName)
            {
                if(locationName == null || _r.locationName == null || !locationName.equals(_r.locationName))
                {
                    return false;
                }
            }
            if(buildId != _r.buildId)
            {
                if(buildId == null || _r.buildId == null || !buildId.equals(_r.buildId))
                {
                    return false;
                }
            }
            if(sid != _r.sid)
            {
                if(sid == null || _r.sid == null || !sid.equals(_r.sid))
                {
                    return false;
                }
            }
            if(floorId != _r.floorId)
            {
                if(floorId == null || _r.floorId == null || !floorId.equals(_r.floorId))
                {
                    return false;
                }
            }
            if(groupOrganId != _r.groupOrganId)
            {
                if(groupOrganId == null || _r.groupOrganId == null || !groupOrganId.equals(_r.groupOrganId))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                if(status == null || _r.status == null || !status.equals(_r.status))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::location::common::LocationInfoIce");
        __h = IceInternal.HashUtil.hashAdd(__h, locationId);
        __h = IceInternal.HashUtil.hashAdd(__h, locationName);
        __h = IceInternal.HashUtil.hashAdd(__h, buildId);
        __h = IceInternal.HashUtil.hashAdd(__h, sid);
        __h = IceInternal.HashUtil.hashAdd(__h, floorId);
        __h = IceInternal.HashUtil.hashAdd(__h, groupOrganId);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        return __h;
    }

    public LocationInfoIce
    clone()
    {
        LocationInfoIce c = null;
        try
        {
            c = (LocationInfoIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(locationId);
        __os.writeString(locationName);
        __os.writeString(buildId);
        __os.writeString(sid);
        __os.writeString(floorId);
        __os.writeString(groupOrganId);
        __os.writeString(organId);
        __os.writeString(status);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        locationId = __is.readString();
        locationName = __is.readString();
        buildId = __is.readString();
        sid = __is.readString();
        floorId = __is.readString();
        groupOrganId = __is.readString();
        organId = __is.readString();
        status = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, LocationInfoIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public LocationInfoIce
    __read(IceInternal.BasicStream __is, LocationInfoIce __v)
    {
        if(__v == null)
        {
             __v = new LocationInfoIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final LocationInfoIce __nullMarshalValue = new LocationInfoIce();

    public static final long serialVersionUID = 2136506911L;
}
