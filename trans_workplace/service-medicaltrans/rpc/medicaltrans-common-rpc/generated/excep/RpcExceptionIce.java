// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `commons.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package excep;

public class RpcExceptionIce extends Ice.UserException
{
    public RpcExceptionIce()
    {
        code = "";
        message = "";
        data = "";
    }

    public RpcExceptionIce(Throwable __cause)
    {
        super(__cause);
        code = "";
        message = "";
        data = "";
    }

    public RpcExceptionIce(String code, String message, String data)
    {
        this.code = code;
        this.message = message;
        this.data = data;
    }

    public RpcExceptionIce(String code, String message, String data, Throwable __cause)
    {
        super(__cause);
        this.code = code;
        this.message = message;
        this.data = data;
    }

    public String
    ice_name()
    {
        return "excep::RpcExceptionIce";
    }

    public String code;

    public String
    getCode()
    {
        return code;
    }

    public void
    setCode(String _code)
    {
        code = _code;
    }

    public String message;

    public String
    getMessage()
    {
        return message;
    }

    public void
    setMessage(String _message)
    {
        message = _message;
    }

    public String data;

    public String
    getData()
    {
        return data;
    }

    public void
    setData(String _data)
    {
        data = _data;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.startWriteException(__slicedData);
        __writeImpl(__os);
        __os.endWriteException();
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        __is.startReadException();
        __readImpl(__is);
        __slicedData = __is.endReadException(true);
    }

    protected void
    __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice("::excep::RpcExceptionIce", -1, true);
        __os.writeString(code);
        __os.writeString(message);
        __os.writeString(data);
        __os.endWriteSlice();
    }

    protected void
    __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        code = __is.readString();
        message = __is.readString();
        data = __is.readString();
        __is.endReadSlice();
    }

    protected Ice.SlicedData __slicedData;

    public static final long serialVersionUID = 549434056L;
}
