// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_trans_statistics.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.report.trans;

/**
 * Provides type-specific helper functions.
 **/
public final class TransStatisticsServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements TransStatisticsServiceIcePrx
{
    private static final String __queryFromHouseRatio_name = "queryFromHouseRatio";

    public TransRatioReturnIce queryFromHouseRatio(int organId)
    {
        return queryFromHouseRatio(organId, null, false);
    }

    public TransRatioReturnIce queryFromHouseRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return queryFromHouseRatio(organId, __ctx, true);
    }

    private TransRatioReturnIce queryFromHouseRatio(int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryFromHouseRatio_name);
        return end_queryFromHouseRatio(begin_queryFromHouseRatio(organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId)
    {
        return begin_queryFromHouseRatio(organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryFromHouseRatio(organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, Ice.Callback __cb)
    {
        return begin_queryFromHouseRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryFromHouseRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, Callback_TransStatisticsServiceIce_queryFromHouseRatio __cb)
    {
        return begin_queryFromHouseRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, java.util.Map<String, String> __ctx, Callback_TransStatisticsServiceIce_queryFromHouseRatio __cb)
    {
        return begin_queryFromHouseRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFromHouseRatio(organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFromHouseRatio(organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFromHouseRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFromHouseRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFromHouseRatio(organId, __ctx, __explicitCtx, __synchronous, 
                                         new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.report.trans.TransRatioReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                             {
                                                 public final void __completed(Ice.AsyncResult __result)
                                                 {
                                                     TransStatisticsServiceIcePrxHelper.__queryFromHouseRatio_completed(this, __result);
                                                 }
                                             });
    }

    private Ice.AsyncResult begin_queryFromHouseRatio(int organId, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryFromHouseRatio_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryFromHouseRatio_name, __cb);
        try
        {
            __result.prepare(__queryFromHouseRatio_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TransRatioReturnIce end_queryFromHouseRatio(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryFromHouseRatio_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TransRatioReturnIce __ret = null;
            __ret = TransRatioReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryFromHouseRatio_completed(Ice.TwowayCallbackArg1<TransRatioReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx __proxy = (segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx)__result.getProxy();
        TransRatioReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryFromHouseRatio(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryTaskStructureRatio_name = "queryTaskStructureRatio";

    public TransRatioReturnIce queryTaskStructureRatio(int organId)
    {
        return queryTaskStructureRatio(organId, null, false);
    }

    public TransRatioReturnIce queryTaskStructureRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return queryTaskStructureRatio(organId, __ctx, true);
    }

    private TransRatioReturnIce queryTaskStructureRatio(int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryTaskStructureRatio_name);
        return end_queryTaskStructureRatio(begin_queryTaskStructureRatio(organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId)
    {
        return begin_queryTaskStructureRatio(organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, Ice.Callback __cb)
    {
        return begin_queryTaskStructureRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, Callback_TransStatisticsServiceIce_queryTaskStructureRatio __cb)
    {
        return begin_queryTaskStructureRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, java.util.Map<String, String> __ctx, Callback_TransStatisticsServiceIce_queryTaskStructureRatio __cb)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                         IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTaskStructureRatio(organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                         IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskStructureRatio(organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskStructureRatio(organId, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.report.trans.TransRatioReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         TransStatisticsServiceIcePrxHelper.__queryTaskStructureRatio_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryTaskStructureRatio(int organId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryTaskStructureRatio_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryTaskStructureRatio_name, __cb);
        try
        {
            __result.prepare(__queryTaskStructureRatio_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TransRatioReturnIce end_queryTaskStructureRatio(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryTaskStructureRatio_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TransRatioReturnIce __ret = null;
            __ret = TransRatioReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryTaskStructureRatio_completed(Ice.TwowayCallbackArg1<TransRatioReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx __proxy = (segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx)__result.getProxy();
        TransRatioReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryTaskStructureRatio(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryTransModeRatio_name = "queryTransModeRatio";

    public TransRatioReturnIce queryTransModeRatio(int organId)
    {
        return queryTransModeRatio(organId, null, false);
    }

    public TransRatioReturnIce queryTransModeRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return queryTransModeRatio(organId, __ctx, true);
    }

    private TransRatioReturnIce queryTransModeRatio(int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryTransModeRatio_name);
        return end_queryTransModeRatio(begin_queryTransModeRatio(organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId)
    {
        return begin_queryTransModeRatio(organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryTransModeRatio(organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, Ice.Callback __cb)
    {
        return begin_queryTransModeRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryTransModeRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, Callback_TransStatisticsServiceIce_queryTransModeRatio __cb)
    {
        return begin_queryTransModeRatio(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, java.util.Map<String, String> __ctx, Callback_TransStatisticsServiceIce_queryTransModeRatio __cb)
    {
        return begin_queryTransModeRatio(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTransModeRatio(organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransModeRatio(organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTransModeRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransModeRatio(organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.Functional_GenericCallback1<TransRatioReturnIce> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransModeRatio(organId, __ctx, __explicitCtx, __synchronous, 
                                         new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.report.trans.TransRatioReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                             {
                                                 public final void __completed(Ice.AsyncResult __result)
                                                 {
                                                     TransStatisticsServiceIcePrxHelper.__queryTransModeRatio_completed(this, __result);
                                                 }
                                             });
    }

    private Ice.AsyncResult begin_queryTransModeRatio(int organId, 
                                                      java.util.Map<String, String> __ctx, 
                                                      boolean __explicitCtx, 
                                                      boolean __synchronous, 
                                                      IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryTransModeRatio_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryTransModeRatio_name, __cb);
        try
        {
            __result.prepare(__queryTransModeRatio_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TransRatioReturnIce end_queryTransModeRatio(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryTransModeRatio_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TransRatioReturnIce __ret = null;
            __ret = TransRatioReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryTransModeRatio_completed(Ice.TwowayCallbackArg1<TransRatioReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx __proxy = (segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx)__result.getProxy();
        TransRatioReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryTransModeRatio(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryTransportTime_name = "queryTransportTime";

    public TransTimeReturnIce queryTransportTime(int organId)
    {
        return queryTransportTime(organId, null, false);
    }

    public TransTimeReturnIce queryTransportTime(int organId, java.util.Map<String, String> __ctx)
    {
        return queryTransportTime(organId, __ctx, true);
    }

    private TransTimeReturnIce queryTransportTime(int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryTransportTime_name);
        return end_queryTransportTime(begin_queryTransportTime(organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId)
    {
        return begin_queryTransportTime(organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryTransportTime(organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, Ice.Callback __cb)
    {
        return begin_queryTransportTime(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryTransportTime(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, Callback_TransStatisticsServiceIce_queryTransportTime __cb)
    {
        return begin_queryTransportTime(organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, java.util.Map<String, String> __ctx, Callback_TransStatisticsServiceIce_queryTransportTime __cb)
    {
        return begin_queryTransportTime(organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                    IceInternal.Functional_GenericCallback1<TransTimeReturnIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTransportTime(organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                    IceInternal.Functional_GenericCallback1<TransTimeReturnIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransportTime(organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TransTimeReturnIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTransportTime(organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TransTimeReturnIce> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransportTime(organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.Functional_GenericCallback1<TransTimeReturnIce> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTransportTime(organId, __ctx, __explicitCtx, __synchronous, 
                                        new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.report.trans.TransTimeReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                            {
                                                public final void __completed(Ice.AsyncResult __result)
                                                {
                                                    TransStatisticsServiceIcePrxHelper.__queryTransportTime_completed(this, __result);
                                                }
                                            });
    }

    private Ice.AsyncResult begin_queryTransportTime(int organId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryTransportTime_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryTransportTime_name, __cb);
        try
        {
            __result.prepare(__queryTransportTime_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TransTimeReturnIce end_queryTransportTime(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryTransportTime_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TransTimeReturnIce __ret = null;
            __ret = TransTimeReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryTransportTime_completed(Ice.TwowayCallbackArg1<TransTimeReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx __proxy = (segi.medicaltrans.report.trans.TransStatisticsServiceIcePrx)__result.getProxy();
        TransTimeReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryTransportTime(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TransStatisticsServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TransStatisticsServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TransStatisticsServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static TransStatisticsServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static TransStatisticsServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static TransStatisticsServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, TransStatisticsServiceIcePrx.class, TransStatisticsServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::report::trans::TransStatisticsServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, TransStatisticsServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static TransStatisticsServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            TransStatisticsServiceIcePrxHelper result = new TransStatisticsServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
