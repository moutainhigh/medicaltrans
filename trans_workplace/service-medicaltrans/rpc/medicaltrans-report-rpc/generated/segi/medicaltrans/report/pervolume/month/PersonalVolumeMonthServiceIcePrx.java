// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_personal_volume_month.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.report.pervolume.month;

public interface PersonalVolumeMonthServiceIcePrx extends Ice.ObjectPrx
{
    public PersonalVolumeMonthPaginator getMonthTransVolumeRank(PerTaskAmoMonthParam params);

    public PersonalVolumeMonthPaginator getMonthTransVolumeRank(PerTaskAmoMonthParam params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, Callback_PersonalVolumeMonthServiceIce_getMonthTransVolumeRank __cb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, java.util.Map<String, String> __ctx, Callback_PersonalVolumeMonthServiceIce_getMonthTransVolumeRank __cb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, 
                                                         IceInternal.Functional_GenericCallback1<PersonalVolumeMonthPaginator> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, 
                                                         IceInternal.Functional_GenericCallback1<PersonalVolumeMonthPaginator> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<PersonalVolumeMonthPaginator> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMonthTransVolumeRank(PerTaskAmoMonthParam params, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<PersonalVolumeMonthPaginator> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb);

    public PersonalVolumeMonthPaginator end_getMonthTransVolumeRank(Ice.AsyncResult __result);
}
