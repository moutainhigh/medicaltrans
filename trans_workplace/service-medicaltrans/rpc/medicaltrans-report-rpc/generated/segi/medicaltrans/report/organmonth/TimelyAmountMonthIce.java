// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `organMonthAmount.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.report.organmonth;

public class TimelyAmountMonthIce implements java.lang.Cloneable, java.io.Serializable
{
    public String cycleYm;

    public String
    getCycleYm()
    {
        return cycleYm;
    }

    public void
    setCycleYm(String _cycleYm)
    {
        cycleYm = _cycleYm;
    }

    public String timelyRatio;

    public String
    getTimelyRatio()
    {
        return timelyRatio;
    }

    public void
    setTimelyRatio(String _timelyRatio)
    {
        timelyRatio = _timelyRatio;
    }

    public String satisfactionRatio;

    public String
    getSatisfactionRatio()
    {
        return satisfactionRatio;
    }

    public void
    setSatisfactionRatio(String _satisfactionRatio)
    {
        satisfactionRatio = _satisfactionRatio;
    }

    public TimelyAmountMonthIce()
    {
        cycleYm = "";
        timelyRatio = "";
        satisfactionRatio = "";
    }

    public TimelyAmountMonthIce(String cycleYm, String timelyRatio, String satisfactionRatio)
    {
        this.cycleYm = cycleYm;
        this.timelyRatio = timelyRatio;
        this.satisfactionRatio = satisfactionRatio;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TimelyAmountMonthIce _r = null;
        if(rhs instanceof TimelyAmountMonthIce)
        {
            _r = (TimelyAmountMonthIce)rhs;
        }

        if(_r != null)
        {
            if(cycleYm != _r.cycleYm)
            {
                if(cycleYm == null || _r.cycleYm == null || !cycleYm.equals(_r.cycleYm))
                {
                    return false;
                }
            }
            if(timelyRatio != _r.timelyRatio)
            {
                if(timelyRatio == null || _r.timelyRatio == null || !timelyRatio.equals(_r.timelyRatio))
                {
                    return false;
                }
            }
            if(satisfactionRatio != _r.satisfactionRatio)
            {
                if(satisfactionRatio == null || _r.satisfactionRatio == null || !satisfactionRatio.equals(_r.satisfactionRatio))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::report::organmonth::TimelyAmountMonthIce");
        __h = IceInternal.HashUtil.hashAdd(__h, cycleYm);
        __h = IceInternal.HashUtil.hashAdd(__h, timelyRatio);
        __h = IceInternal.HashUtil.hashAdd(__h, satisfactionRatio);
        return __h;
    }

    public TimelyAmountMonthIce
    clone()
    {
        TimelyAmountMonthIce c = null;
        try
        {
            c = (TimelyAmountMonthIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(cycleYm);
        __os.writeString(timelyRatio);
        __os.writeString(satisfactionRatio);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        cycleYm = __is.readString();
        timelyRatio = __is.readString();
        satisfactionRatio = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, TimelyAmountMonthIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TimelyAmountMonthIce
    __read(IceInternal.BasicStream __is, TimelyAmountMonthIce __v)
    {
        if(__v == null)
        {
             __v = new TimelyAmountMonthIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TimelyAmountMonthIce __nullMarshalValue = new TimelyAmountMonthIce();

    public static final long serialVersionUID = -698811619L;
}
