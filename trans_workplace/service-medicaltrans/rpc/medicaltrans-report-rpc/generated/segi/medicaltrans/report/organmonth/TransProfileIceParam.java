// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `organMonthAmount.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.report.organmonth;

public class TransProfileIceParam implements java.lang.Cloneable, java.io.Serializable
{
    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String cycleY;

    public String
    getCycleY()
    {
        return cycleY;
    }

    public void
    setCycleY(String _cycleY)
    {
        cycleY = _cycleY;
    }

    public TransProfileIceParam()
    {
        organId = "";
        cycleY = "";
    }

    public TransProfileIceParam(String organId, String cycleY)
    {
        this.organId = organId;
        this.cycleY = cycleY;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TransProfileIceParam _r = null;
        if(rhs instanceof TransProfileIceParam)
        {
            _r = (TransProfileIceParam)rhs;
        }

        if(_r != null)
        {
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(cycleY != _r.cycleY)
            {
                if(cycleY == null || _r.cycleY == null || !cycleY.equals(_r.cycleY))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::report::organmonth::TransProfileIceParam");
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, cycleY);
        return __h;
    }

    public TransProfileIceParam
    clone()
    {
        TransProfileIceParam c = null;
        try
        {
            c = (TransProfileIceParam)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(organId);
        __os.writeString(cycleY);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        organId = __is.readString();
        cycleY = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, TransProfileIceParam __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TransProfileIceParam
    __read(IceInternal.BasicStream __is, TransProfileIceParam __v)
    {
        if(__v == null)
        {
             __v = new TransProfileIceParam();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TransProfileIceParam __nullMarshalValue = new TransProfileIceParam();

    public static final long serialVersionUID = -1900373879L;
}
