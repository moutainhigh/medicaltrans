// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `commons.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package model;

public class HandleActionIce implements java.lang.Cloneable, java.io.Serializable
{
    public String actionCode;

    public String
    getActionCode()
    {
        return actionCode;
    }

    public void
    setActionCode(String _actionCode)
    {
        actionCode = _actionCode;
    }

    public String actionName;

    public String
    getActionName()
    {
        return actionName;
    }

    public void
    setActionName(String _actionName)
    {
        actionName = _actionName;
    }

    public HandleActionIce()
    {
        actionCode = "";
        actionName = "";
    }

    public HandleActionIce(String actionCode, String actionName)
    {
        this.actionCode = actionCode;
        this.actionName = actionName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HandleActionIce _r = null;
        if(rhs instanceof HandleActionIce)
        {
            _r = (HandleActionIce)rhs;
        }

        if(_r != null)
        {
            if(actionCode != _r.actionCode)
            {
                if(actionCode == null || _r.actionCode == null || !actionCode.equals(_r.actionCode))
                {
                    return false;
                }
            }
            if(actionName != _r.actionName)
            {
                if(actionName == null || _r.actionName == null || !actionName.equals(_r.actionName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::model::HandleActionIce");
        __h = IceInternal.HashUtil.hashAdd(__h, actionCode);
        __h = IceInternal.HashUtil.hashAdd(__h, actionName);
        return __h;
    }

    public HandleActionIce
    clone()
    {
        HandleActionIce c = null;
        try
        {
            c = (HandleActionIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(actionCode);
        __os.writeString(actionName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        actionCode = __is.readString();
        actionName = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, HandleActionIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public HandleActionIce
    __read(IceInternal.BasicStream __is, HandleActionIce __v)
    {
        if(__v == null)
        {
             __v = new HandleActionIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final HandleActionIce __nullMarshalValue = new HandleActionIce();

    public static final long serialVersionUID = -1051976043L;
}
