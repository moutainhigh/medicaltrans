// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userstatus.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userstatus;

public class UserStatusIce implements java.lang.Cloneable, java.io.Serializable
{
    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String status;

    public String
    getStatus()
    {
        return status;
    }

    public void
    setStatus(String _status)
    {
        status = _status;
    }

    public UserStatusIce()
    {
        organId = "";
        userId = "";
        status = "";
    }

    public UserStatusIce(String organId, String userId, String status)
    {
        this.organId = organId;
        this.userId = userId;
        this.status = status;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserStatusIce _r = null;
        if(rhs instanceof UserStatusIce)
        {
            _r = (UserStatusIce)rhs;
        }

        if(_r != null)
        {
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                if(status == null || _r.status == null || !status.equals(_r.status))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userstatus::UserStatusIce");
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        return __h;
    }

    public UserStatusIce
    clone()
    {
        UserStatusIce c = null;
        try
        {
            c = (UserStatusIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(organId);
        __os.writeString(userId);
        __os.writeString(status);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        organId = __is.readString();
        userId = __is.readString();
        status = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, UserStatusIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public UserStatusIce
    __read(IceInternal.BasicStream __is, UserStatusIce __v)
    {
        if(__v == null)
        {
             __v = new UserStatusIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final UserStatusIce __nullMarshalValue = new UserStatusIce();

    public static final long serialVersionUID = -2143249585L;
}
