// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userposit.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userposit;

public class ResultDateIce implements java.lang.Cloneable, java.io.Serializable
{
    public java.util.List<SumLocationListIce> resultList;

    public java.util.List<SumLocationListIce>
    getResultList()
    {
        return resultList;
    }

    public void
    setResultList(java.util.List<SumLocationListIce> _resultList)
    {
        resultList = _resultList;
    }

    public String planUrl;

    public String
    getPlanUrl()
    {
        return planUrl;
    }

    public void
    setPlanUrl(String _planUrl)
    {
        planUrl = _planUrl;
    }

    public ResultDateIce()
    {
        planUrl = "";
    }

    public ResultDateIce(java.util.List<SumLocationListIce> resultList, String planUrl)
    {
        this.resultList = resultList;
        this.planUrl = planUrl;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ResultDateIce _r = null;
        if(rhs instanceof ResultDateIce)
        {
            _r = (ResultDateIce)rhs;
        }

        if(_r != null)
        {
            if(resultList != _r.resultList)
            {
                if(resultList == null || _r.resultList == null || !resultList.equals(_r.resultList))
                {
                    return false;
                }
            }
            if(planUrl != _r.planUrl)
            {
                if(planUrl == null || _r.planUrl == null || !planUrl.equals(_r.planUrl))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userposit::ResultDateIce");
        __h = IceInternal.HashUtil.hashAdd(__h, resultList);
        __h = IceInternal.HashUtil.hashAdd(__h, planUrl);
        return __h;
    }

    public ResultDateIce
    clone()
    {
        ResultDateIce c = null;
        try
        {
            c = (ResultDateIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        SumLocationListIceListHelper.write(__os, resultList);
        __os.writeString(planUrl);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        resultList = SumLocationListIceListHelper.read(__is);
        planUrl = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, ResultDateIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public ResultDateIce
    __read(IceInternal.BasicStream __is, ResultDateIce __v)
    {
        if(__v == null)
        {
             __v = new ResultDateIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final ResultDateIce __nullMarshalValue = new ResultDateIce();

    public static final long serialVersionUID = -296807114L;
}
