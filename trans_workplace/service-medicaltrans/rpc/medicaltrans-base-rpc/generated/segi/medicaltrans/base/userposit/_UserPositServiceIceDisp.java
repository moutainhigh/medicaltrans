// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userposit.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userposit;

public abstract class _UserPositServiceIceDisp extends Ice.ObjectImpl implements UserPositServiceIce
{
    protected void
    ice_copyStateFrom(Ice.Object __obj)
        throws java.lang.CloneNotSupportedException
    {
        throw new java.lang.CloneNotSupportedException();
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::base::userposit::UserPositServiceIce"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public final UserPositReturnIce getLastPositByUser(UserPositIce userPositIce)
    {
        return getLastPositByUser(userPositIce, null);
    }

    public final SumUserLocationInfoIce querySumUserLocation(UserGraLocationIceParam userGraLocationIceParam)
    {
        return querySumUserLocation(userGraLocationIceParam, null);
    }

    public final UserInfoPaginatorIce queryUserInfoPage(UserInfoPageParam userInfoPageParam)
    {
        return queryUserInfoPage(userInfoPageParam, null);
    }

    public final String queryUserLocationByOrganIdRedis(String organId)
    {
        return queryUserLocationByOrganIdRedis(organId, null);
    }

    public final UserGraLocationInfoPaginatorIce queryUserLocationPage(UserGraLocationIceParam userGraLocationIceParam)
    {
        return queryUserLocationPage(userGraLocationIceParam, null);
    }

    public final UserPlaLocationInfoIce queryUserPlaLocation(UserPlaLocationIceParam userPlaLocationIceParam)
    {
        return queryUserPlaLocation(userPlaLocationIceParam, null);
    }

    public final UserPositReturnIce updateLocatePosit(UserPositIce userPositIce)
    {
        return updateLocatePosit(userPositIce, null);
    }

    public static Ice.DispatchStatus ___getLastPositByUser(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserPositIce userPositIce = null;
        userPositIce = UserPositIce.__read(__is, userPositIce);
        __inS.endReadParams();
        UserPositReturnIce __ret = __obj.getLastPositByUser(userPositIce, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        UserPositReturnIce.__write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___updateLocatePosit(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserPositIce userPositIce = null;
        userPositIce = UserPositIce.__read(__is, userPositIce);
        __inS.endReadParams();
        UserPositReturnIce __ret = __obj.updateLocatePosit(userPositIce, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        UserPositReturnIce.__write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___queryUserLocationPage(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserGraLocationIceParam userGraLocationIceParam = null;
        userGraLocationIceParam = UserGraLocationIceParam.__read(__is, userGraLocationIceParam);
        __inS.endReadParams();
        UserGraLocationInfoPaginatorIce __ret = __obj.queryUserLocationPage(userGraLocationIceParam, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        UserGraLocationInfoPaginatorIce.__write(__os, __ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___querySumUserLocation(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserGraLocationIceParam userGraLocationIceParam = null;
        userGraLocationIceParam = UserGraLocationIceParam.__read(__is, userGraLocationIceParam);
        __inS.endReadParams();
        SumUserLocationInfoIce __ret = __obj.querySumUserLocation(userGraLocationIceParam, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        SumUserLocationInfoIce.__write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___queryUserPlaLocation(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserPlaLocationIceParam userPlaLocationIceParam = null;
        userPlaLocationIceParam = UserPlaLocationIceParam.__read(__is, userPlaLocationIceParam);
        __inS.endReadParams();
        UserPlaLocationInfoIce __ret = __obj.queryUserPlaLocation(userPlaLocationIceParam, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        UserPlaLocationInfoIce.__write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___queryUserLocationByOrganIdRedis(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String organId;
        organId = __is.readString();
        __inS.endReadParams();
        String __ret = __obj.queryUserLocationByOrganIdRedis(organId, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___queryUserInfoPage(UserPositServiceIce __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        UserInfoPageParam userInfoPageParam = null;
        userInfoPageParam = UserInfoPageParam.__read(__is, userInfoPageParam);
        __inS.endReadParams();
        UserInfoPaginatorIce __ret = __obj.queryUserInfoPage(userInfoPageParam, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        UserInfoPaginatorIce.__write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "getLastPositByUser",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "querySumUserLocation",
        "queryUserInfoPage",
        "queryUserLocationByOrganIdRedis",
        "queryUserLocationPage",
        "queryUserPlaLocation",
        "updateLocatePosit"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___getLastPositByUser(this, in, __current);
            }
            case 1:
            {
                return ___ice_id(this, in, __current);
            }
            case 2:
            {
                return ___ice_ids(this, in, __current);
            }
            case 3:
            {
                return ___ice_isA(this, in, __current);
            }
            case 4:
            {
                return ___ice_ping(this, in, __current);
            }
            case 5:
            {
                return ___querySumUserLocation(this, in, __current);
            }
            case 6:
            {
                return ___queryUserInfoPage(this, in, __current);
            }
            case 7:
            {
                return ___queryUserLocationByOrganIdRedis(this, in, __current);
            }
            case 8:
            {
                return ___queryUserLocationPage(this, in, __current);
            }
            case 9:
            {
                return ___queryUserPlaLocation(this, in, __current);
            }
            case 10:
            {
                return ___updateLocatePosit(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        __is.endReadSlice();
    }

    public static final long serialVersionUID = 0L;
}
