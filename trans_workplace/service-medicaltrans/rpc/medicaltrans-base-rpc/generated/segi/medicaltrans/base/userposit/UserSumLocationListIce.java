// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userposit.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userposit;

public class UserSumLocationListIce implements java.lang.Cloneable, java.io.Serializable
{
    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String userName;

    public String
    getUserName()
    {
        return userName;
    }

    public void
    setUserName(String _userName)
    {
        userName = _userName;
    }

    public String userWorkNo;

    public String
    getUserWorkNo()
    {
        return userWorkNo;
    }

    public void
    setUserWorkNo(String _userWorkNo)
    {
        userWorkNo = _userWorkNo;
    }

    public String statusName;

    public String
    getStatusName()
    {
        return statusName;
    }

    public void
    setStatusName(String _statusName)
    {
        statusName = _statusName;
    }

    public UserSumLocationListIce()
    {
        userId = "";
        userName = "";
        userWorkNo = "";
        statusName = "";
    }

    public UserSumLocationListIce(String userId, String userName, String userWorkNo, String statusName)
    {
        this.userId = userId;
        this.userName = userName;
        this.userWorkNo = userWorkNo;
        this.statusName = statusName;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserSumLocationListIce _r = null;
        if(rhs instanceof UserSumLocationListIce)
        {
            _r = (UserSumLocationListIce)rhs;
        }

        if(_r != null)
        {
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(userName != _r.userName)
            {
                if(userName == null || _r.userName == null || !userName.equals(_r.userName))
                {
                    return false;
                }
            }
            if(userWorkNo != _r.userWorkNo)
            {
                if(userWorkNo == null || _r.userWorkNo == null || !userWorkNo.equals(_r.userWorkNo))
                {
                    return false;
                }
            }
            if(statusName != _r.statusName)
            {
                if(statusName == null || _r.statusName == null || !statusName.equals(_r.statusName))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userposit::UserSumLocationListIce");
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, userName);
        __h = IceInternal.HashUtil.hashAdd(__h, userWorkNo);
        __h = IceInternal.HashUtil.hashAdd(__h, statusName);
        return __h;
    }

    public UserSumLocationListIce
    clone()
    {
        UserSumLocationListIce c = null;
        try
        {
            c = (UserSumLocationListIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(userId);
        __os.writeString(userName);
        __os.writeString(userWorkNo);
        __os.writeString(statusName);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        userId = __is.readString();
        userName = __is.readString();
        userWorkNo = __is.readString();
        statusName = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, UserSumLocationListIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public UserSumLocationListIce
    __read(IceInternal.BasicStream __is, UserSumLocationListIce __v)
    {
        if(__v == null)
        {
             __v = new UserSumLocationListIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final UserSumLocationListIce __nullMarshalValue = new UserSumLocationListIce();

    public static final long serialVersionUID = 1878334997L;
}
