// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userinfomanage.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userinfomanage;

public class UserInfoIce implements java.lang.Cloneable, java.io.Serializable
{
    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String userName;

    public String
    getUserName()
    {
        return userName;
    }

    public void
    setUserName(String _userName)
    {
        userName = _userName;
    }

    public String jobNumber;

    public String
    getJobNumber()
    {
        return jobNumber;
    }

    public void
    setJobNumber(String _jobNumber)
    {
        jobNumber = _jobNumber;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String organName;

    public String
    getOrganName()
    {
        return organName;
    }

    public void
    setOrganName(String _organName)
    {
        organName = _organName;
    }

    public String tel;

    public String
    getTel()
    {
        return tel;
    }

    public void
    setTel(String _tel)
    {
        tel = _tel;
    }

    public String sex;

    public String
    getSex()
    {
        return sex;
    }

    public void
    setSex(String _sex)
    {
        sex = _sex;
    }

    public String sexName;

    public String
    getSexName()
    {
        return sexName;
    }

    public void
    setSexName(String _sexName)
    {
        sexName = _sexName;
    }

    public String status;

    public String
    getStatus()
    {
        return status;
    }

    public void
    setStatus(String _status)
    {
        status = _status;
    }

    public String statusName;

    public String
    getStatusName()
    {
        return statusName;
    }

    public void
    setStatusName(String _statusName)
    {
        statusName = _statusName;
    }

    public String identity;

    public String
    getIdentity()
    {
        return identity;
    }

    public void
    setIdentity(String _identity)
    {
        identity = _identity;
    }

    public UserInfoIce()
    {
        userId = "";
        userName = "";
        jobNumber = "";
        organId = "";
        organName = "";
        tel = "";
        sex = "";
        sexName = "";
        status = "";
        statusName = "";
        identity = "";
    }

    public UserInfoIce(String userId, String userName, String jobNumber, String organId, String organName, String tel, String sex, String sexName, String status, String statusName, String identity)
    {
        this.userId = userId;
        this.userName = userName;
        this.jobNumber = jobNumber;
        this.organId = organId;
        this.organName = organName;
        this.tel = tel;
        this.sex = sex;
        this.sexName = sexName;
        this.status = status;
        this.statusName = statusName;
        this.identity = identity;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserInfoIce _r = null;
        if(rhs instanceof UserInfoIce)
        {
            _r = (UserInfoIce)rhs;
        }

        if(_r != null)
        {
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(userName != _r.userName)
            {
                if(userName == null || _r.userName == null || !userName.equals(_r.userName))
                {
                    return false;
                }
            }
            if(jobNumber != _r.jobNumber)
            {
                if(jobNumber == null || _r.jobNumber == null || !jobNumber.equals(_r.jobNumber))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(organName != _r.organName)
            {
                if(organName == null || _r.organName == null || !organName.equals(_r.organName))
                {
                    return false;
                }
            }
            if(tel != _r.tel)
            {
                if(tel == null || _r.tel == null || !tel.equals(_r.tel))
                {
                    return false;
                }
            }
            if(sex != _r.sex)
            {
                if(sex == null || _r.sex == null || !sex.equals(_r.sex))
                {
                    return false;
                }
            }
            if(sexName != _r.sexName)
            {
                if(sexName == null || _r.sexName == null || !sexName.equals(_r.sexName))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                if(status == null || _r.status == null || !status.equals(_r.status))
                {
                    return false;
                }
            }
            if(statusName != _r.statusName)
            {
                if(statusName == null || _r.statusName == null || !statusName.equals(_r.statusName))
                {
                    return false;
                }
            }
            if(identity != _r.identity)
            {
                if(identity == null || _r.identity == null || !identity.equals(_r.identity))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userinfomanage::UserInfoIce");
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, userName);
        __h = IceInternal.HashUtil.hashAdd(__h, jobNumber);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, organName);
        __h = IceInternal.HashUtil.hashAdd(__h, tel);
        __h = IceInternal.HashUtil.hashAdd(__h, sex);
        __h = IceInternal.HashUtil.hashAdd(__h, sexName);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, statusName);
        __h = IceInternal.HashUtil.hashAdd(__h, identity);
        return __h;
    }

    public UserInfoIce
    clone()
    {
        UserInfoIce c = null;
        try
        {
            c = (UserInfoIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(userId);
        __os.writeString(userName);
        __os.writeString(jobNumber);
        __os.writeString(organId);
        __os.writeString(organName);
        __os.writeString(tel);
        __os.writeString(sex);
        __os.writeString(sexName);
        __os.writeString(status);
        __os.writeString(statusName);
        __os.writeString(identity);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        userId = __is.readString();
        userName = __is.readString();
        jobNumber = __is.readString();
        organId = __is.readString();
        organName = __is.readString();
        tel = __is.readString();
        sex = __is.readString();
        sexName = __is.readString();
        status = __is.readString();
        statusName = __is.readString();
        identity = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, UserInfoIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public UserInfoIce
    __read(IceInternal.BasicStream __is, UserInfoIce __v)
    {
        if(__v == null)
        {
             __v = new UserInfoIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final UserInfoIce __nullMarshalValue = new UserInfoIce();

    public static final long serialVersionUID = 50172689L;
}
