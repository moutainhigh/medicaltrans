// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userposit.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userposit;

public class BuildFloorIce implements java.lang.Cloneable, java.io.Serializable
{
    public String floorId;

    public String
    getFloorId()
    {
        return floorId;
    }

    public void
    setFloorId(String _floorId)
    {
        floorId = _floorId;
    }

    public String floorNum;

    public String
    getFloorNum()
    {
        return floorNum;
    }

    public void
    setFloorNum(String _floorNum)
    {
        floorNum = _floorNum;
    }

    public String floorName;

    public String
    getFloorName()
    {
        return floorName;
    }

    public void
    setFloorName(String _floorName)
    {
        floorName = _floorName;
    }

    public java.util.List<BuildLocationIce> buildLocationIceList;

    public java.util.List<BuildLocationIce>
    getBuildLocationIceList()
    {
        return buildLocationIceList;
    }

    public void
    setBuildLocationIceList(java.util.List<BuildLocationIce> _buildLocationIceList)
    {
        buildLocationIceList = _buildLocationIceList;
    }

    public BuildFloorIce()
    {
        floorId = "";
        floorNum = "";
        floorName = "";
    }

    public BuildFloorIce(String floorId, String floorNum, String floorName, java.util.List<BuildLocationIce> buildLocationIceList)
    {
        this.floorId = floorId;
        this.floorNum = floorNum;
        this.floorName = floorName;
        this.buildLocationIceList = buildLocationIceList;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        BuildFloorIce _r = null;
        if(rhs instanceof BuildFloorIce)
        {
            _r = (BuildFloorIce)rhs;
        }

        if(_r != null)
        {
            if(floorId != _r.floorId)
            {
                if(floorId == null || _r.floorId == null || !floorId.equals(_r.floorId))
                {
                    return false;
                }
            }
            if(floorNum != _r.floorNum)
            {
                if(floorNum == null || _r.floorNum == null || !floorNum.equals(_r.floorNum))
                {
                    return false;
                }
            }
            if(floorName != _r.floorName)
            {
                if(floorName == null || _r.floorName == null || !floorName.equals(_r.floorName))
                {
                    return false;
                }
            }
            if(buildLocationIceList != _r.buildLocationIceList)
            {
                if(buildLocationIceList == null || _r.buildLocationIceList == null || !buildLocationIceList.equals(_r.buildLocationIceList))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userposit::BuildFloorIce");
        __h = IceInternal.HashUtil.hashAdd(__h, floorId);
        __h = IceInternal.HashUtil.hashAdd(__h, floorNum);
        __h = IceInternal.HashUtil.hashAdd(__h, floorName);
        __h = IceInternal.HashUtil.hashAdd(__h, buildLocationIceList);
        return __h;
    }

    public BuildFloorIce
    clone()
    {
        BuildFloorIce c = null;
        try
        {
            c = (BuildFloorIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(floorId);
        __os.writeString(floorNum);
        __os.writeString(floorName);
        BuildLocationIceListHelper.write(__os, buildLocationIceList);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        floorId = __is.readString();
        floorNum = __is.readString();
        floorName = __is.readString();
        buildLocationIceList = BuildLocationIceListHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, BuildFloorIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public BuildFloorIce
    __read(IceInternal.BasicStream __is, BuildFloorIce __v)
    {
        if(__v == null)
        {
             __v = new BuildFloorIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final BuildFloorIce __nullMarshalValue = new BuildFloorIce();

    public static final long serialVersionUID = -491900076L;
}
