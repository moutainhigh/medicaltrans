// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `task_loop.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.taskloop;

public class TaskLoopParam implements java.lang.Cloneable, java.io.Serializable
{
    public String taskLoopId;

    public String
    getTaskLoopId()
    {
        return taskLoopId;
    }

    public void
    setTaskLoopId(String _taskLoopId)
    {
        taskLoopId = _taskLoopId;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String taskName;

    public String
    getTaskName()
    {
        return taskName;
    }

    public void
    setTaskName(String _taskName)
    {
        taskName = _taskName;
    }

    public String transTypeParentCode;

    public String
    getTransTypeParentCode()
    {
        return transTypeParentCode;
    }

    public void
    setTransTypeParentCode(String _transTypeParentCode)
    {
        transTypeParentCode = _transTypeParentCode;
    }

    public String transTypeId;

    public String
    getTransTypeId()
    {
        return transTypeId;
    }

    public void
    setTransTypeId(String _transTypeId)
    {
        transTypeId = _transTypeId;
    }

    public String houseIds;

    public String
    getHouseIds()
    {
        return houseIds;
    }

    public void
    setHouseIds(String _houseIds)
    {
        houseIds = _houseIds;
    }

    public String transTools;

    public String
    getTransTools()
    {
        return transTools;
    }

    public void
    setTransTools(String _transTools)
    {
        transTools = _transTools;
    }

    public String loopType;

    public String
    getLoopType()
    {
        return loopType;
    }

    public void
    setLoopType(String _loopType)
    {
        loopType = _loopType;
    }

    public String taskBeginTime;

    public String
    getTaskBeginTime()
    {
        return taskBeginTime;
    }

    public void
    setTaskBeginTime(String _taskBeginTime)
    {
        taskBeginTime = _taskBeginTime;
    }

    public String taskEndTime;

    public String
    getTaskEndTime()
    {
        return taskEndTime;
    }

    public void
    setTaskEndTime(String _taskEndTime)
    {
        taskEndTime = _taskEndTime;
    }

    public String loopMonths;

    public String
    getLoopMonths()
    {
        return loopMonths;
    }

    public void
    setLoopMonths(String _loopMonths)
    {
        loopMonths = _loopMonths;
    }

    public String loopWeeks;

    public String
    getLoopWeeks()
    {
        return loopWeeks;
    }

    public void
    setLoopWeeks(String _loopWeeks)
    {
        loopWeeks = _loopWeeks;
    }

    public String loopDays;

    public String
    getLoopDays()
    {
        return loopDays;
    }

    public void
    setLoopDays(String _loopDays)
    {
        loopDays = _loopDays;
    }

    public String userIds;

    public String
    getUserIds()
    {
        return userIds;
    }

    public void
    setUserIds(String _userIds)
    {
        userIds = _userIds;
    }

    public String preGenerateMinute;

    public String
    getPreGenerateMinute()
    {
        return preGenerateMinute;
    }

    public void
    setPreGenerateMinute(String _preGenerateMinute)
    {
        preGenerateMinute = _preGenerateMinute;
    }

    public String createBy;

    public String
    getCreateBy()
    {
        return createBy;
    }

    public void
    setCreateBy(String _createBy)
    {
        createBy = _createBy;
    }

    public String updateBy;

    public String
    getUpdateBy()
    {
        return updateBy;
    }

    public void
    setUpdateBy(String _updateBy)
    {
        updateBy = _updateBy;
    }

    public TaskLoopParam()
    {
        taskLoopId = "";
        organId = "";
        taskName = "";
        transTypeParentCode = "";
        transTypeId = "";
        houseIds = "";
        transTools = "";
        loopType = "";
        taskBeginTime = "";
        taskEndTime = "";
        loopMonths = "";
        loopWeeks = "";
        loopDays = "";
        userIds = "";
        preGenerateMinute = "";
        createBy = "";
        updateBy = "";
    }

    public TaskLoopParam(String taskLoopId, String organId, String taskName, String transTypeParentCode, String transTypeId, String houseIds, String transTools, String loopType, String taskBeginTime, String taskEndTime, String loopMonths, String loopWeeks, String loopDays, String userIds, String preGenerateMinute, String createBy, String updateBy)
    {
        this.taskLoopId = taskLoopId;
        this.organId = organId;
        this.taskName = taskName;
        this.transTypeParentCode = transTypeParentCode;
        this.transTypeId = transTypeId;
        this.houseIds = houseIds;
        this.transTools = transTools;
        this.loopType = loopType;
        this.taskBeginTime = taskBeginTime;
        this.taskEndTime = taskEndTime;
        this.loopMonths = loopMonths;
        this.loopWeeks = loopWeeks;
        this.loopDays = loopDays;
        this.userIds = userIds;
        this.preGenerateMinute = preGenerateMinute;
        this.createBy = createBy;
        this.updateBy = updateBy;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TaskLoopParam _r = null;
        if(rhs instanceof TaskLoopParam)
        {
            _r = (TaskLoopParam)rhs;
        }

        if(_r != null)
        {
            if(taskLoopId != _r.taskLoopId)
            {
                if(taskLoopId == null || _r.taskLoopId == null || !taskLoopId.equals(_r.taskLoopId))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(taskName != _r.taskName)
            {
                if(taskName == null || _r.taskName == null || !taskName.equals(_r.taskName))
                {
                    return false;
                }
            }
            if(transTypeParentCode != _r.transTypeParentCode)
            {
                if(transTypeParentCode == null || _r.transTypeParentCode == null || !transTypeParentCode.equals(_r.transTypeParentCode))
                {
                    return false;
                }
            }
            if(transTypeId != _r.transTypeId)
            {
                if(transTypeId == null || _r.transTypeId == null || !transTypeId.equals(_r.transTypeId))
                {
                    return false;
                }
            }
            if(houseIds != _r.houseIds)
            {
                if(houseIds == null || _r.houseIds == null || !houseIds.equals(_r.houseIds))
                {
                    return false;
                }
            }
            if(transTools != _r.transTools)
            {
                if(transTools == null || _r.transTools == null || !transTools.equals(_r.transTools))
                {
                    return false;
                }
            }
            if(loopType != _r.loopType)
            {
                if(loopType == null || _r.loopType == null || !loopType.equals(_r.loopType))
                {
                    return false;
                }
            }
            if(taskBeginTime != _r.taskBeginTime)
            {
                if(taskBeginTime == null || _r.taskBeginTime == null || !taskBeginTime.equals(_r.taskBeginTime))
                {
                    return false;
                }
            }
            if(taskEndTime != _r.taskEndTime)
            {
                if(taskEndTime == null || _r.taskEndTime == null || !taskEndTime.equals(_r.taskEndTime))
                {
                    return false;
                }
            }
            if(loopMonths != _r.loopMonths)
            {
                if(loopMonths == null || _r.loopMonths == null || !loopMonths.equals(_r.loopMonths))
                {
                    return false;
                }
            }
            if(loopWeeks != _r.loopWeeks)
            {
                if(loopWeeks == null || _r.loopWeeks == null || !loopWeeks.equals(_r.loopWeeks))
                {
                    return false;
                }
            }
            if(loopDays != _r.loopDays)
            {
                if(loopDays == null || _r.loopDays == null || !loopDays.equals(_r.loopDays))
                {
                    return false;
                }
            }
            if(userIds != _r.userIds)
            {
                if(userIds == null || _r.userIds == null || !userIds.equals(_r.userIds))
                {
                    return false;
                }
            }
            if(preGenerateMinute != _r.preGenerateMinute)
            {
                if(preGenerateMinute == null || _r.preGenerateMinute == null || !preGenerateMinute.equals(_r.preGenerateMinute))
                {
                    return false;
                }
            }
            if(createBy != _r.createBy)
            {
                if(createBy == null || _r.createBy == null || !createBy.equals(_r.createBy))
                {
                    return false;
                }
            }
            if(updateBy != _r.updateBy)
            {
                if(updateBy == null || _r.updateBy == null || !updateBy.equals(_r.updateBy))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::taskloop::TaskLoopParam");
        __h = IceInternal.HashUtil.hashAdd(__h, taskLoopId);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, taskName);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeParentCode);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeId);
        __h = IceInternal.HashUtil.hashAdd(__h, houseIds);
        __h = IceInternal.HashUtil.hashAdd(__h, transTools);
        __h = IceInternal.HashUtil.hashAdd(__h, loopType);
        __h = IceInternal.HashUtil.hashAdd(__h, taskBeginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, taskEndTime);
        __h = IceInternal.HashUtil.hashAdd(__h, loopMonths);
        __h = IceInternal.HashUtil.hashAdd(__h, loopWeeks);
        __h = IceInternal.HashUtil.hashAdd(__h, loopDays);
        __h = IceInternal.HashUtil.hashAdd(__h, userIds);
        __h = IceInternal.HashUtil.hashAdd(__h, preGenerateMinute);
        __h = IceInternal.HashUtil.hashAdd(__h, createBy);
        __h = IceInternal.HashUtil.hashAdd(__h, updateBy);
        return __h;
    }

    public TaskLoopParam
    clone()
    {
        TaskLoopParam c = null;
        try
        {
            c = (TaskLoopParam)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(taskLoopId);
        __os.writeString(organId);
        __os.writeString(taskName);
        __os.writeString(transTypeParentCode);
        __os.writeString(transTypeId);
        __os.writeString(houseIds);
        __os.writeString(transTools);
        __os.writeString(loopType);
        __os.writeString(taskBeginTime);
        __os.writeString(taskEndTime);
        __os.writeString(loopMonths);
        __os.writeString(loopWeeks);
        __os.writeString(loopDays);
        __os.writeString(userIds);
        __os.writeString(preGenerateMinute);
        __os.writeString(createBy);
        __os.writeString(updateBy);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        taskLoopId = __is.readString();
        organId = __is.readString();
        taskName = __is.readString();
        transTypeParentCode = __is.readString();
        transTypeId = __is.readString();
        houseIds = __is.readString();
        transTools = __is.readString();
        loopType = __is.readString();
        taskBeginTime = __is.readString();
        taskEndTime = __is.readString();
        loopMonths = __is.readString();
        loopWeeks = __is.readString();
        loopDays = __is.readString();
        userIds = __is.readString();
        preGenerateMinute = __is.readString();
        createBy = __is.readString();
        updateBy = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, TaskLoopParam __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public TaskLoopParam
    __read(IceInternal.BasicStream __is, TaskLoopParam __v)
    {
        if(__v == null)
        {
             __v = new TaskLoopParam();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final TaskLoopParam __nullMarshalValue = new TaskLoopParam();

    public static final long serialVersionUID = -1138144659L;
}
