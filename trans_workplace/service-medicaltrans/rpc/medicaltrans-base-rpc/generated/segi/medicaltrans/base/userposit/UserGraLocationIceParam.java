// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `userposit.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.base.userposit;

public class UserGraLocationIceParam implements java.lang.Cloneable, java.io.Serializable
{
    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String userName;

    public String
    getUserName()
    {
        return userName;
    }

    public void
    setUserName(String _userName)
    {
        userName = _userName;
    }

    public String userWorkNo;

    public String
    getUserWorkNo()
    {
        return userWorkNo;
    }

    public void
    setUserWorkNo(String _userWorkNo)
    {
        userWorkNo = _userWorkNo;
    }

    public String buildId;

    public String
    getBuildId()
    {
        return buildId;
    }

    public void
    setBuildId(String _buildId)
    {
        buildId = _buildId;
    }

    public String floorId;

    public String
    getFloorId()
    {
        return floorId;
    }

    public void
    setFloorId(String _floorId)
    {
        floorId = _floorId;
    }

    public String sid;

    public String
    getSid()
    {
        return sid;
    }

    public void
    setSid(String _sid)
    {
        sid = _sid;
    }

    public String curUserId;

    public String
    getCurUserId()
    {
        return curUserId;
    }

    public void
    setCurUserId(String _curUserId)
    {
        curUserId = _curUserId;
    }

    public String pageNo;

    public String
    getPageNo()
    {
        return pageNo;
    }

    public void
    setPageNo(String _pageNo)
    {
        pageNo = _pageNo;
    }

    public String pageLength;

    public String
    getPageLength()
    {
        return pageLength;
    }

    public void
    setPageLength(String _pageLength)
    {
        pageLength = _pageLength;
    }

    public UserGraLocationIceParam()
    {
        organId = "";
        userName = "";
        userWorkNo = "";
        buildId = "";
        floorId = "";
        sid = "";
        curUserId = "";
        pageNo = "";
        pageLength = "";
    }

    public UserGraLocationIceParam(String organId, String userName, String userWorkNo, String buildId, String floorId, String sid, String curUserId, String pageNo, String pageLength)
    {
        this.organId = organId;
        this.userName = userName;
        this.userWorkNo = userWorkNo;
        this.buildId = buildId;
        this.floorId = floorId;
        this.sid = sid;
        this.curUserId = curUserId;
        this.pageNo = pageNo;
        this.pageLength = pageLength;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserGraLocationIceParam _r = null;
        if(rhs instanceof UserGraLocationIceParam)
        {
            _r = (UserGraLocationIceParam)rhs;
        }

        if(_r != null)
        {
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(userName != _r.userName)
            {
                if(userName == null || _r.userName == null || !userName.equals(_r.userName))
                {
                    return false;
                }
            }
            if(userWorkNo != _r.userWorkNo)
            {
                if(userWorkNo == null || _r.userWorkNo == null || !userWorkNo.equals(_r.userWorkNo))
                {
                    return false;
                }
            }
            if(buildId != _r.buildId)
            {
                if(buildId == null || _r.buildId == null || !buildId.equals(_r.buildId))
                {
                    return false;
                }
            }
            if(floorId != _r.floorId)
            {
                if(floorId == null || _r.floorId == null || !floorId.equals(_r.floorId))
                {
                    return false;
                }
            }
            if(sid != _r.sid)
            {
                if(sid == null || _r.sid == null || !sid.equals(_r.sid))
                {
                    return false;
                }
            }
            if(curUserId != _r.curUserId)
            {
                if(curUserId == null || _r.curUserId == null || !curUserId.equals(_r.curUserId))
                {
                    return false;
                }
            }
            if(pageNo != _r.pageNo)
            {
                if(pageNo == null || _r.pageNo == null || !pageNo.equals(_r.pageNo))
                {
                    return false;
                }
            }
            if(pageLength != _r.pageLength)
            {
                if(pageLength == null || _r.pageLength == null || !pageLength.equals(_r.pageLength))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::base::userposit::UserGraLocationIceParam");
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, userName);
        __h = IceInternal.HashUtil.hashAdd(__h, userWorkNo);
        __h = IceInternal.HashUtil.hashAdd(__h, buildId);
        __h = IceInternal.HashUtil.hashAdd(__h, floorId);
        __h = IceInternal.HashUtil.hashAdd(__h, sid);
        __h = IceInternal.HashUtil.hashAdd(__h, curUserId);
        __h = IceInternal.HashUtil.hashAdd(__h, pageNo);
        __h = IceInternal.HashUtil.hashAdd(__h, pageLength);
        return __h;
    }

    public UserGraLocationIceParam
    clone()
    {
        UserGraLocationIceParam c = null;
        try
        {
            c = (UserGraLocationIceParam)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(organId);
        __os.writeString(userName);
        __os.writeString(userWorkNo);
        __os.writeString(buildId);
        __os.writeString(floorId);
        __os.writeString(sid);
        __os.writeString(curUserId);
        __os.writeString(pageNo);
        __os.writeString(pageLength);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        organId = __is.readString();
        userName = __is.readString();
        userWorkNo = __is.readString();
        buildId = __is.readString();
        floorId = __is.readString();
        sid = __is.readString();
        curUserId = __is.readString();
        pageNo = __is.readString();
        pageLength = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, UserGraLocationIceParam __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public UserGraLocationIceParam
    __read(IceInternal.BasicStream __is, UserGraLocationIceParam __v)
    {
        if(__v == null)
        {
             __v = new UserGraLocationIceParam();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final UserGraLocationIceParam __nullMarshalValue = new UserGraLocationIceParam();

    public static final long serialVersionUID = 1700984354L;
}
