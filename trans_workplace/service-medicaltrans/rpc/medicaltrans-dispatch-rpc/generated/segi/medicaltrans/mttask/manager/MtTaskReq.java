// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_manager.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.manager;

public class MtTaskReq implements java.lang.Cloneable, java.io.Serializable
{
    public String taskId;

    public String
    getTaskId()
    {
        return taskId;
    }

    public void
    setTaskId(String _taskId)
    {
        taskId = _taskId;
    }

    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String taskType;

    public String
    getTaskType()
    {
        return taskType;
    }

    public void
    setTaskType(String _taskType)
    {
        taskType = _taskType;
    }

    public String transTypeParentCode;

    public String
    getTransTypeParentCode()
    {
        return transTypeParentCode;
    }

    public void
    setTransTypeParentCode(String _transTypeParentCode)
    {
        transTypeParentCode = _transTypeParentCode;
    }

    public String transTypeId;

    public String
    getTransTypeId()
    {
        return transTypeId;
    }

    public void
    setTransTypeId(String _transTypeId)
    {
        transTypeId = _transTypeId;
    }

    public String urgency;

    public String
    getUrgency()
    {
        return urgency;
    }

    public void
    setUrgency(String _urgency)
    {
        urgency = _urgency;
    }

    public String sourceHouseId;

    public String
    getSourceHouseId()
    {
        return sourceHouseId;
    }

    public void
    setSourceHouseId(String _sourceHouseId)
    {
        sourceHouseId = _sourceHouseId;
    }

    public String fromHouseId;

    public String
    getFromHouseId()
    {
        return fromHouseId;
    }

    public void
    setFromHouseId(String _fromHouseId)
    {
        fromHouseId = _fromHouseId;
    }

    public String toHouseId;

    public String
    getToHouseId()
    {
        return toHouseId;
    }

    public void
    setToHouseId(String _toHouseId)
    {
        toHouseId = _toHouseId;
    }

    public String transPersonCount;

    public String
    getTransPersonCount()
    {
        return transPersonCount;
    }

    public void
    setTransPersonCount(String _transPersonCount)
    {
        transPersonCount = _transPersonCount;
    }

    public String transTools;

    public String
    getTransTools()
    {
        return transTools;
    }

    public void
    setTransTools(String _transTools)
    {
        transTools = _transTools;
    }

    public String fileIds;

    public String
    getFileIds()
    {
        return fileIds;
    }

    public void
    setFileIds(String _fileIds)
    {
        fileIds = _fileIds;
    }

    public String delFileIds;

    public String
    getDelFileIds()
    {
        return delFileIds;
    }

    public void
    setDelFileIds(String _delFileIds)
    {
        delFileIds = _delFileIds;
    }

    public String taskContent;

    public String
    getTaskContent()
    {
        return taskContent;
    }

    public void
    setTaskContent(String _taskContent)
    {
        taskContent = _taskContent;
    }

    public String patientName;

    public String
    getPatientName()
    {
        return patientName;
    }

    public void
    setPatientName(String _patientName)
    {
        patientName = _patientName;
    }

    public String bedNo;

    public String
    getBedNo()
    {
        return bedNo;
    }

    public void
    setBedNo(String _bedNo)
    {
        bedNo = _bedNo;
    }

    public String patientGender;

    public String
    getPatientGender()
    {
        return patientGender;
    }

    public void
    setPatientGender(String _patientGender)
    {
        patientGender = _patientGender;
    }

    public String medicalRecNo;

    public String
    getMedicalRecNo()
    {
        return medicalRecNo;
    }

    public void
    setMedicalRecNo(String _medicalRecNo)
    {
        medicalRecNo = _medicalRecNo;
    }

    public String dataSource;

    public String
    getDataSource()
    {
        return dataSource;
    }

    public void
    setDataSource(String _dataSource)
    {
        dataSource = _dataSource;
    }

    public String isReservedFlag;

    public String
    getIsReservedFlag()
    {
        return isReservedFlag;
    }

    public void
    setIsReservedFlag(String _isReservedFlag)
    {
        isReservedFlag = _isReservedFlag;
    }

    public String beginTime;

    public String
    getBeginTime()
    {
        return beginTime;
    }

    public void
    setBeginTime(String _beginTime)
    {
        beginTime = _beginTime;
    }

    public String limitMinute;

    public String
    getLimitMinute()
    {
        return limitMinute;
    }

    public void
    setLimitMinute(String _limitMinute)
    {
        limitMinute = _limitMinute;
    }

    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String userOrganId;

    public String
    getUserOrganId()
    {
        return userOrganId;
    }

    public void
    setUserOrganId(String _userOrganId)
    {
        userOrganId = _userOrganId;
    }

    public String resType;

    public String
    getResType()
    {
        return resType;
    }

    public void
    setResType(String _resType)
    {
        resType = _resType;
    }

    public String exeUserIds;

    public String
    getExeUserIds()
    {
        return exeUserIds;
    }

    public void
    setExeUserIds(String _exeUserIds)
    {
        exeUserIds = _exeUserIds;
    }

    public String exeEndUserId;

    public String
    getExeEndUserId()
    {
        return exeEndUserId;
    }

    public void
    setExeEndUserId(String _exeEndUserId)
    {
        exeEndUserId = _exeEndUserId;
    }

    public String serviceGroupIds;

    public String
    getServiceGroupIds()
    {
        return serviceGroupIds;
    }

    public void
    setServiceGroupIds(String _serviceGroupIds)
    {
        serviceGroupIds = _serviceGroupIds;
    }

    public String sendContent;

    public String
    getSendContent()
    {
        return sendContent;
    }

    public void
    setSendContent(String _sendContent)
    {
        sendContent = _sendContent;
    }

    public String voiceIds;

    public String
    getVoiceIds()
    {
        return voiceIds;
    }

    public void
    setVoiceIds(String _voiceIds)
    {
        voiceIds = _voiceIds;
    }

    public String delVoiceIds;

    public String
    getDelVoiceIds()
    {
        return delVoiceIds;
    }

    public void
    setDelVoiceIds(String _delVoiceIds)
    {
        delVoiceIds = _delVoiceIds;
    }

    public String userHouseId;

    public String
    getUserHouseId()
    {
        return userHouseId;
    }

    public void
    setUserHouseId(String _userHouseId)
    {
        userHouseId = _userHouseId;
    }

    public boolean flag;

    public boolean
    getFlag()
    {
        return flag;
    }

    public void
    setFlag(boolean _flag)
    {
        flag = _flag;
    }

    public boolean
    isFlag()
    {
        return flag;
    }

    public MtTaskReq()
    {
        taskId = "";
        organId = "";
        taskType = "";
        transTypeParentCode = "";
        transTypeId = "";
        urgency = "";
        sourceHouseId = "";
        fromHouseId = "";
        toHouseId = "";
        transPersonCount = "";
        transTools = "";
        fileIds = "";
        delFileIds = "";
        taskContent = "";
        patientName = "";
        bedNo = "";
        patientGender = "";
        medicalRecNo = "";
        dataSource = "";
        isReservedFlag = "";
        beginTime = "";
        limitMinute = "";
        userId = "";
        userOrganId = "";
        resType = "";
        exeUserIds = "";
        exeEndUserId = "";
        serviceGroupIds = "";
        sendContent = "";
        voiceIds = "";
        delVoiceIds = "";
        userHouseId = "";
    }

    public MtTaskReq(String taskId, String organId, String taskType, String transTypeParentCode, String transTypeId, String urgency, String sourceHouseId, String fromHouseId, String toHouseId, String transPersonCount, String transTools, String fileIds, String delFileIds, String taskContent, String patientName, String bedNo, String patientGender, String medicalRecNo, String dataSource, String isReservedFlag, String beginTime, String limitMinute, String userId, String userOrganId, String resType, String exeUserIds, String exeEndUserId, String serviceGroupIds, String sendContent, String voiceIds, String delVoiceIds, String userHouseId, boolean flag)
    {
        this.taskId = taskId;
        this.organId = organId;
        this.taskType = taskType;
        this.transTypeParentCode = transTypeParentCode;
        this.transTypeId = transTypeId;
        this.urgency = urgency;
        this.sourceHouseId = sourceHouseId;
        this.fromHouseId = fromHouseId;
        this.toHouseId = toHouseId;
        this.transPersonCount = transPersonCount;
        this.transTools = transTools;
        this.fileIds = fileIds;
        this.delFileIds = delFileIds;
        this.taskContent = taskContent;
        this.patientName = patientName;
        this.bedNo = bedNo;
        this.patientGender = patientGender;
        this.medicalRecNo = medicalRecNo;
        this.dataSource = dataSource;
        this.isReservedFlag = isReservedFlag;
        this.beginTime = beginTime;
        this.limitMinute = limitMinute;
        this.userId = userId;
        this.userOrganId = userOrganId;
        this.resType = resType;
        this.exeUserIds = exeUserIds;
        this.exeEndUserId = exeEndUserId;
        this.serviceGroupIds = serviceGroupIds;
        this.sendContent = sendContent;
        this.voiceIds = voiceIds;
        this.delVoiceIds = delVoiceIds;
        this.userHouseId = userHouseId;
        this.flag = flag;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MtTaskReq _r = null;
        if(rhs instanceof MtTaskReq)
        {
            _r = (MtTaskReq)rhs;
        }

        if(_r != null)
        {
            if(taskId != _r.taskId)
            {
                if(taskId == null || _r.taskId == null || !taskId.equals(_r.taskId))
                {
                    return false;
                }
            }
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(taskType != _r.taskType)
            {
                if(taskType == null || _r.taskType == null || !taskType.equals(_r.taskType))
                {
                    return false;
                }
            }
            if(transTypeParentCode != _r.transTypeParentCode)
            {
                if(transTypeParentCode == null || _r.transTypeParentCode == null || !transTypeParentCode.equals(_r.transTypeParentCode))
                {
                    return false;
                }
            }
            if(transTypeId != _r.transTypeId)
            {
                if(transTypeId == null || _r.transTypeId == null || !transTypeId.equals(_r.transTypeId))
                {
                    return false;
                }
            }
            if(urgency != _r.urgency)
            {
                if(urgency == null || _r.urgency == null || !urgency.equals(_r.urgency))
                {
                    return false;
                }
            }
            if(sourceHouseId != _r.sourceHouseId)
            {
                if(sourceHouseId == null || _r.sourceHouseId == null || !sourceHouseId.equals(_r.sourceHouseId))
                {
                    return false;
                }
            }
            if(fromHouseId != _r.fromHouseId)
            {
                if(fromHouseId == null || _r.fromHouseId == null || !fromHouseId.equals(_r.fromHouseId))
                {
                    return false;
                }
            }
            if(toHouseId != _r.toHouseId)
            {
                if(toHouseId == null || _r.toHouseId == null || !toHouseId.equals(_r.toHouseId))
                {
                    return false;
                }
            }
            if(transPersonCount != _r.transPersonCount)
            {
                if(transPersonCount == null || _r.transPersonCount == null || !transPersonCount.equals(_r.transPersonCount))
                {
                    return false;
                }
            }
            if(transTools != _r.transTools)
            {
                if(transTools == null || _r.transTools == null || !transTools.equals(_r.transTools))
                {
                    return false;
                }
            }
            if(fileIds != _r.fileIds)
            {
                if(fileIds == null || _r.fileIds == null || !fileIds.equals(_r.fileIds))
                {
                    return false;
                }
            }
            if(delFileIds != _r.delFileIds)
            {
                if(delFileIds == null || _r.delFileIds == null || !delFileIds.equals(_r.delFileIds))
                {
                    return false;
                }
            }
            if(taskContent != _r.taskContent)
            {
                if(taskContent == null || _r.taskContent == null || !taskContent.equals(_r.taskContent))
                {
                    return false;
                }
            }
            if(patientName != _r.patientName)
            {
                if(patientName == null || _r.patientName == null || !patientName.equals(_r.patientName))
                {
                    return false;
                }
            }
            if(bedNo != _r.bedNo)
            {
                if(bedNo == null || _r.bedNo == null || !bedNo.equals(_r.bedNo))
                {
                    return false;
                }
            }
            if(patientGender != _r.patientGender)
            {
                if(patientGender == null || _r.patientGender == null || !patientGender.equals(_r.patientGender))
                {
                    return false;
                }
            }
            if(medicalRecNo != _r.medicalRecNo)
            {
                if(medicalRecNo == null || _r.medicalRecNo == null || !medicalRecNo.equals(_r.medicalRecNo))
                {
                    return false;
                }
            }
            if(dataSource != _r.dataSource)
            {
                if(dataSource == null || _r.dataSource == null || !dataSource.equals(_r.dataSource))
                {
                    return false;
                }
            }
            if(isReservedFlag != _r.isReservedFlag)
            {
                if(isReservedFlag == null || _r.isReservedFlag == null || !isReservedFlag.equals(_r.isReservedFlag))
                {
                    return false;
                }
            }
            if(beginTime != _r.beginTime)
            {
                if(beginTime == null || _r.beginTime == null || !beginTime.equals(_r.beginTime))
                {
                    return false;
                }
            }
            if(limitMinute != _r.limitMinute)
            {
                if(limitMinute == null || _r.limitMinute == null || !limitMinute.equals(_r.limitMinute))
                {
                    return false;
                }
            }
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(userOrganId != _r.userOrganId)
            {
                if(userOrganId == null || _r.userOrganId == null || !userOrganId.equals(_r.userOrganId))
                {
                    return false;
                }
            }
            if(resType != _r.resType)
            {
                if(resType == null || _r.resType == null || !resType.equals(_r.resType))
                {
                    return false;
                }
            }
            if(exeUserIds != _r.exeUserIds)
            {
                if(exeUserIds == null || _r.exeUserIds == null || !exeUserIds.equals(_r.exeUserIds))
                {
                    return false;
                }
            }
            if(exeEndUserId != _r.exeEndUserId)
            {
                if(exeEndUserId == null || _r.exeEndUserId == null || !exeEndUserId.equals(_r.exeEndUserId))
                {
                    return false;
                }
            }
            if(serviceGroupIds != _r.serviceGroupIds)
            {
                if(serviceGroupIds == null || _r.serviceGroupIds == null || !serviceGroupIds.equals(_r.serviceGroupIds))
                {
                    return false;
                }
            }
            if(sendContent != _r.sendContent)
            {
                if(sendContent == null || _r.sendContent == null || !sendContent.equals(_r.sendContent))
                {
                    return false;
                }
            }
            if(voiceIds != _r.voiceIds)
            {
                if(voiceIds == null || _r.voiceIds == null || !voiceIds.equals(_r.voiceIds))
                {
                    return false;
                }
            }
            if(delVoiceIds != _r.delVoiceIds)
            {
                if(delVoiceIds == null || _r.delVoiceIds == null || !delVoiceIds.equals(_r.delVoiceIds))
                {
                    return false;
                }
            }
            if(userHouseId != _r.userHouseId)
            {
                if(userHouseId == null || _r.userHouseId == null || !userHouseId.equals(_r.userHouseId))
                {
                    return false;
                }
            }
            if(flag != _r.flag)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::mttask::manager::MtTaskReq");
        __h = IceInternal.HashUtil.hashAdd(__h, taskId);
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, taskType);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeParentCode);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeId);
        __h = IceInternal.HashUtil.hashAdd(__h, urgency);
        __h = IceInternal.HashUtil.hashAdd(__h, sourceHouseId);
        __h = IceInternal.HashUtil.hashAdd(__h, fromHouseId);
        __h = IceInternal.HashUtil.hashAdd(__h, toHouseId);
        __h = IceInternal.HashUtil.hashAdd(__h, transPersonCount);
        __h = IceInternal.HashUtil.hashAdd(__h, transTools);
        __h = IceInternal.HashUtil.hashAdd(__h, fileIds);
        __h = IceInternal.HashUtil.hashAdd(__h, delFileIds);
        __h = IceInternal.HashUtil.hashAdd(__h, taskContent);
        __h = IceInternal.HashUtil.hashAdd(__h, patientName);
        __h = IceInternal.HashUtil.hashAdd(__h, bedNo);
        __h = IceInternal.HashUtil.hashAdd(__h, patientGender);
        __h = IceInternal.HashUtil.hashAdd(__h, medicalRecNo);
        __h = IceInternal.HashUtil.hashAdd(__h, dataSource);
        __h = IceInternal.HashUtil.hashAdd(__h, isReservedFlag);
        __h = IceInternal.HashUtil.hashAdd(__h, beginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, limitMinute);
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, userOrganId);
        __h = IceInternal.HashUtil.hashAdd(__h, resType);
        __h = IceInternal.HashUtil.hashAdd(__h, exeUserIds);
        __h = IceInternal.HashUtil.hashAdd(__h, exeEndUserId);
        __h = IceInternal.HashUtil.hashAdd(__h, serviceGroupIds);
        __h = IceInternal.HashUtil.hashAdd(__h, sendContent);
        __h = IceInternal.HashUtil.hashAdd(__h, voiceIds);
        __h = IceInternal.HashUtil.hashAdd(__h, delVoiceIds);
        __h = IceInternal.HashUtil.hashAdd(__h, userHouseId);
        __h = IceInternal.HashUtil.hashAdd(__h, flag);
        return __h;
    }

    public MtTaskReq
    clone()
    {
        MtTaskReq c = null;
        try
        {
            c = (MtTaskReq)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(taskId);
        __os.writeString(organId);
        __os.writeString(taskType);
        __os.writeString(transTypeParentCode);
        __os.writeString(transTypeId);
        __os.writeString(urgency);
        __os.writeString(sourceHouseId);
        __os.writeString(fromHouseId);
        __os.writeString(toHouseId);
        __os.writeString(transPersonCount);
        __os.writeString(transTools);
        __os.writeString(fileIds);
        __os.writeString(delFileIds);
        __os.writeString(taskContent);
        __os.writeString(patientName);
        __os.writeString(bedNo);
        __os.writeString(patientGender);
        __os.writeString(medicalRecNo);
        __os.writeString(dataSource);
        __os.writeString(isReservedFlag);
        __os.writeString(beginTime);
        __os.writeString(limitMinute);
        __os.writeString(userId);
        __os.writeString(userOrganId);
        __os.writeString(resType);
        __os.writeString(exeUserIds);
        __os.writeString(exeEndUserId);
        __os.writeString(serviceGroupIds);
        __os.writeString(sendContent);
        __os.writeString(voiceIds);
        __os.writeString(delVoiceIds);
        __os.writeString(userHouseId);
        __os.writeBool(flag);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        taskId = __is.readString();
        organId = __is.readString();
        taskType = __is.readString();
        transTypeParentCode = __is.readString();
        transTypeId = __is.readString();
        urgency = __is.readString();
        sourceHouseId = __is.readString();
        fromHouseId = __is.readString();
        toHouseId = __is.readString();
        transPersonCount = __is.readString();
        transTools = __is.readString();
        fileIds = __is.readString();
        delFileIds = __is.readString();
        taskContent = __is.readString();
        patientName = __is.readString();
        bedNo = __is.readString();
        patientGender = __is.readString();
        medicalRecNo = __is.readString();
        dataSource = __is.readString();
        isReservedFlag = __is.readString();
        beginTime = __is.readString();
        limitMinute = __is.readString();
        userId = __is.readString();
        userOrganId = __is.readString();
        resType = __is.readString();
        exeUserIds = __is.readString();
        exeEndUserId = __is.readString();
        serviceGroupIds = __is.readString();
        sendContent = __is.readString();
        voiceIds = __is.readString();
        delVoiceIds = __is.readString();
        userHouseId = __is.readString();
        flag = __is.readBool();
    }

    static public void
    __write(IceInternal.BasicStream __os, MtTaskReq __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public MtTaskReq
    __read(IceInternal.BasicStream __is, MtTaskReq __v)
    {
        if(__v == null)
        {
             __v = new MtTaskReq();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final MtTaskReq __nullMarshalValue = new MtTaskReq();

    public static final long serialVersionUID = -644345974L;
}
