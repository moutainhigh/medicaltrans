// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.query;

/**
 * Provides type-specific helper functions.
 **/
public final class MtTaskQueryServiceIcePrxHelper extends Ice.ObjectPrxHelperBase implements MtTaskQueryServiceIcePrx
{
    private static final String __queryAutonomousTaskDetailApp_name = "queryAutonomousTaskDetailApp";

    public MtAutonomousTaskDetailIceRsp queryAutonomousTaskDetailApp(int organId, int taskId)
    {
        return queryAutonomousTaskDetailApp(organId, taskId, null, false);
    }

    public MtAutonomousTaskDetailIceRsp queryAutonomousTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return queryAutonomousTaskDetailApp(organId, taskId, __ctx, true);
    }

    private MtAutonomousTaskDetailIceRsp queryAutonomousTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryAutonomousTaskDetailApp_name);
        return end_queryAutonomousTaskDetailApp(begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId, Ice.Callback __cb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId, Callback_MtTaskQueryServiceIce_queryAutonomousTaskDetailApp __cb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryAutonomousTaskDetailApp __cb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              IceInternal.Functional_GenericCallback1<MtAutonomousTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              IceInternal.Functional_GenericCallback1<MtAutonomousTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtAutonomousTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtAutonomousTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                               int taskId, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.Functional_GenericCallback1<MtAutonomousTaskDetailIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskDetailApp(organId, taskId, __ctx, __explicitCtx, __synchronous, 
                                                  new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtAutonomousTaskDetailIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                      {
                                                          public final void __completed(Ice.AsyncResult __result)
                                                          {
                                                              MtTaskQueryServiceIcePrxHelper.__queryAutonomousTaskDetailApp_completed(this, __result);
                                                          }
                                                      });
    }

    private Ice.AsyncResult begin_queryAutonomousTaskDetailApp(int organId, 
                                                               int taskId, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryAutonomousTaskDetailApp_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryAutonomousTaskDetailApp_name, __cb);
        try
        {
            __result.prepare(__queryAutonomousTaskDetailApp_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeInt(taskId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtAutonomousTaskDetailIceRsp end_queryAutonomousTaskDetailApp(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryAutonomousTaskDetailApp_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtAutonomousTaskDetailIceRsp __ret = null;
            __ret = MtAutonomousTaskDetailIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryAutonomousTaskDetailApp_completed(Ice.TwowayCallbackArg1<MtAutonomousTaskDetailIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtAutonomousTaskDetailIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryAutonomousTaskDetailApp(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryAutonomousTaskPage_name = "queryAutonomousTaskPage";

    public MtAutonomousTaskPaginatorIceRsp queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryAutonomousTaskPage(mtTaskPageIceParam, null, false);
    }

    public MtAutonomousTaskPaginatorIceRsp queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtAutonomousTaskPaginatorIceRsp queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryAutonomousTaskPage_name);
        return end_queryAutonomousTaskPage(begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryAutonomousTaskPage __cb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryAutonomousTaskPage __cb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         IceInternal.Functional_GenericCallback1<MtAutonomousTaskPaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         IceInternal.Functional_GenericCallback1<MtAutonomousTaskPaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtAutonomousTaskPaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtAutonomousTaskPaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<MtAutonomousTaskPaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryAutonomousTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtAutonomousTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         MtTaskQueryServiceIcePrxHelper.__queryAutonomousTaskPage_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryAutonomousTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryAutonomousTaskPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryAutonomousTaskPage_name, __cb);
        try
        {
            __result.prepare(__queryAutonomousTaskPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtAutonomousTaskPaginatorIceRsp end_queryAutonomousTaskPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryAutonomousTaskPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtAutonomousTaskPaginatorIceRsp __ret = null;
            __ret = MtAutonomousTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryAutonomousTaskPage_completed(Ice.TwowayCallbackArg1<MtAutonomousTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtAutonomousTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryAutonomousTaskPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryDispatchTaskPageByAssign_name = "queryDispatchTaskPageByAssign";

    public MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false);
    }

    public MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true);
    }

    private MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryDispatchTaskPageByAssign_name);
        return end_queryDispatchTaskPageByAssign(begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryDispatchTaskPageByAssign __cb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryDispatchTaskPageByAssign __cb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                               IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                               IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                               java.util.Map<String, String> __ctx, 
                                                               IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                java.util.Map<String, String> __ctx, 
                                                                boolean __explicitCtx, 
                                                                boolean __synchronous, 
                                                                IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByAssign(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                                   new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtDispatchTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                       {
                                                           public final void __completed(Ice.AsyncResult __result)
                                                           {
                                                               MtTaskQueryServiceIcePrxHelper.__queryDispatchTaskPageByAssign_completed(this, __result);
                                                           }
                                                       });
    }

    private Ice.AsyncResult begin_queryDispatchTaskPageByAssign(MtTaskPageIceParam mtTaskPageIceParam, 
                                                                java.util.Map<String, String> __ctx, 
                                                                boolean __explicitCtx, 
                                                                boolean __synchronous, 
                                                                IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryDispatchTaskPageByAssign_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryDispatchTaskPageByAssign_name, __cb);
        try
        {
            __result.prepare(__queryDispatchTaskPageByAssign_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtDispatchTaskPaginatorIceRsp end_queryDispatchTaskPageByAssign(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryDispatchTaskPageByAssign_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtDispatchTaskPaginatorIceRsp __ret = null;
            __ret = MtDispatchTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryDispatchTaskPageByAssign_completed(Ice.TwowayCallbackArg1<MtDispatchTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtDispatchTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryDispatchTaskPageByAssign(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryDispatchTaskPageByRob_name = "queryDispatchTaskPageByRob";

    public MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false);
    }

    public MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true);
    }

    private MtDispatchTaskPaginatorIceRsp queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryDispatchTaskPageByRob_name);
        return end_queryDispatchTaskPageByRob(begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryDispatchTaskPageByRob __cb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryDispatchTaskPageByRob __cb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             java.util.Map<String, String> __ctx, 
                                                             boolean __explicitCtx, 
                                                             boolean __synchronous, 
                                                             IceInternal.Functional_GenericCallback1<MtDispatchTaskPaginatorIceRsp> __responseCb, 
                                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryDispatchTaskPageByRob(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                                new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtDispatchTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                    {
                                                        public final void __completed(Ice.AsyncResult __result)
                                                        {
                                                            MtTaskQueryServiceIcePrxHelper.__queryDispatchTaskPageByRob_completed(this, __result);
                                                        }
                                                    });
    }

    private Ice.AsyncResult begin_queryDispatchTaskPageByRob(MtTaskPageIceParam mtTaskPageIceParam, 
                                                             java.util.Map<String, String> __ctx, 
                                                             boolean __explicitCtx, 
                                                             boolean __synchronous, 
                                                             IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryDispatchTaskPageByRob_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryDispatchTaskPageByRob_name, __cb);
        try
        {
            __result.prepare(__queryDispatchTaskPageByRob_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtDispatchTaskPaginatorIceRsp end_queryDispatchTaskPageByRob(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryDispatchTaskPageByRob_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtDispatchTaskPaginatorIceRsp __ret = null;
            __ret = MtDispatchTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryDispatchTaskPageByRob_completed(Ice.TwowayCallbackArg1<MtDispatchTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtDispatchTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryDispatchTaskPageByRob(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryEvaluatePageForPad_name = "queryEvaluatePageForPad";

    public TaskAndEvaluatePaginatorIceRsp queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryEvaluatePageForPad(mtTaskPageIceParam, null, false);
    }

    public TaskAndEvaluatePaginatorIceRsp queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true);
    }

    private TaskAndEvaluatePaginatorIceRsp queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryEvaluatePageForPad_name);
        return end_queryEvaluatePageForPad(begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryEvaluatePageForPad __cb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryEvaluatePageForPad __cb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryEvaluatePageForPad(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.TaskAndEvaluatePaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         MtTaskQueryServiceIcePrxHelper.__queryEvaluatePageForPad_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryEvaluatePageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryEvaluatePageForPad_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryEvaluatePageForPad_name, __cb);
        try
        {
            __result.prepare(__queryEvaluatePageForPad_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TaskAndEvaluatePaginatorIceRsp end_queryEvaluatePageForPad(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryEvaluatePageForPad_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TaskAndEvaluatePaginatorIceRsp __ret = null;
            __ret = TaskAndEvaluatePaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryEvaluatePageForPad_completed(Ice.TwowayCallbackArg1<TaskAndEvaluatePaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        TaskAndEvaluatePaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryEvaluatePageForPad(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryFixedTaskDetailApp_name = "queryFixedTaskDetailApp";

    public MtFixedTaskDetailIceRsp queryFixedTaskDetailApp(int organId, int taskId)
    {
        return queryFixedTaskDetailApp(organId, taskId, null, false);
    }

    public MtFixedTaskDetailIceRsp queryFixedTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return queryFixedTaskDetailApp(organId, taskId, __ctx, true);
    }

    private MtFixedTaskDetailIceRsp queryFixedTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryFixedTaskDetailApp_name);
        return end_queryFixedTaskDetailApp(begin_queryFixedTaskDetailApp(organId, taskId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId, Ice.Callback __cb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId, Callback_MtTaskQueryServiceIce_queryFixedTaskDetailApp __cb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, int taskId, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryFixedTaskDetailApp __cb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                         int taskId, 
                                                         IceInternal.Functional_GenericCallback1<MtFixedTaskDetailIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                         int taskId, 
                                                         IceInternal.Functional_GenericCallback1<MtFixedTaskDetailIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                         int taskId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtFixedTaskDetailIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                         int taskId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<MtFixedTaskDetailIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                          int taskId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<MtFixedTaskDetailIceRsp> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskDetailApp(organId, taskId, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtFixedTaskDetailIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         MtTaskQueryServiceIcePrxHelper.__queryFixedTaskDetailApp_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryFixedTaskDetailApp(int organId, 
                                                          int taskId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryFixedTaskDetailApp_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryFixedTaskDetailApp_name, __cb);
        try
        {
            __result.prepare(__queryFixedTaskDetailApp_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeInt(taskId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtFixedTaskDetailIceRsp end_queryFixedTaskDetailApp(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryFixedTaskDetailApp_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtFixedTaskDetailIceRsp __ret = null;
            __ret = MtFixedTaskDetailIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryFixedTaskDetailApp_completed(Ice.TwowayCallbackArg1<MtFixedTaskDetailIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtFixedTaskDetailIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryFixedTaskDetailApp(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryFixedTaskExeDetail_name = "queryFixedTaskExeDetail";

    public FixedTaskExeDetailReturnIce queryFixedTaskExeDetail(int routeId, int organId)
    {
        return queryFixedTaskExeDetail(routeId, organId, null, false);
    }

    public FixedTaskExeDetailReturnIce queryFixedTaskExeDetail(int routeId, int organId, java.util.Map<String, String> __ctx)
    {
        return queryFixedTaskExeDetail(routeId, organId, __ctx, true);
    }

    private FixedTaskExeDetailReturnIce queryFixedTaskExeDetail(int routeId, int organId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryFixedTaskExeDetail_name);
        return end_queryFixedTaskExeDetail(begin_queryFixedTaskExeDetail(routeId, organId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId, java.util.Map<String, String> __ctx)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId, Ice.Callback __cb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId, Callback_MtTaskQueryServiceIce_queryFixedTaskExeDetail __cb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, int organId, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryFixedTaskExeDetail __cb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                         int organId, 
                                                         IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                         int organId, 
                                                         IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                         int organId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                         int organId, 
                                                         java.util.Map<String, String> __ctx, 
                                                         IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                          int organId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.Functional_GenericCallback1<FixedTaskExeDetailReturnIce> __responseCb, 
                                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeDetail(routeId, organId, __ctx, __explicitCtx, __synchronous, 
                                             new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.FixedTaskExeDetailReturnIce>(__responseCb, __exceptionCb, __sentCb)
                                                 {
                                                     public final void __completed(Ice.AsyncResult __result)
                                                     {
                                                         MtTaskQueryServiceIcePrxHelper.__queryFixedTaskExeDetail_completed(this, __result);
                                                     }
                                                 });
    }

    private Ice.AsyncResult begin_queryFixedTaskExeDetail(int routeId, 
                                                          int organId, 
                                                          java.util.Map<String, String> __ctx, 
                                                          boolean __explicitCtx, 
                                                          boolean __synchronous, 
                                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryFixedTaskExeDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryFixedTaskExeDetail_name, __cb);
        try
        {
            __result.prepare(__queryFixedTaskExeDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(routeId);
            __os.writeInt(organId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskExeDetailReturnIce end_queryFixedTaskExeDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryFixedTaskExeDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskExeDetailReturnIce __ret = null;
            __ret = FixedTaskExeDetailReturnIce.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryFixedTaskExeDetail_completed(Ice.TwowayCallbackArg1<FixedTaskExeDetailReturnIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        FixedTaskExeDetailReturnIce __ret = null;
        try
        {
            __ret = __proxy.end_queryFixedTaskExeDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryFixedTaskExeInfoPage_name = "queryFixedTaskExeInfoPage";

    public FixedTaskExePaginatorIceRsp queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false);
    }

    public FixedTaskExePaginatorIceRsp queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true);
    }

    private FixedTaskExePaginatorIceRsp queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryFixedTaskExeInfoPage_name);
        return end_queryFixedTaskExeInfoPage(begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryFixedTaskExeInfoPage __cb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryFixedTaskExeInfoPage __cb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           IceInternal.Functional_GenericCallback1<FixedTaskExePaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           IceInternal.Functional_GenericCallback1<FixedTaskExePaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<FixedTaskExePaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                           java.util.Map<String, String> __ctx, 
                                                           IceInternal.Functional_GenericCallback1<FixedTaskExePaginatorIceRsp> __responseCb, 
                                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                           IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.Functional_GenericCallback1<FixedTaskExePaginatorIceRsp> __responseCb, 
                                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                            IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskExeInfoPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                               new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.FixedTaskExePaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                   {
                                                       public final void __completed(Ice.AsyncResult __result)
                                                       {
                                                           MtTaskQueryServiceIcePrxHelper.__queryFixedTaskExeInfoPage_completed(this, __result);
                                                       }
                                                   });
    }

    private Ice.AsyncResult begin_queryFixedTaskExeInfoPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                            java.util.Map<String, String> __ctx, 
                                                            boolean __explicitCtx, 
                                                            boolean __synchronous, 
                                                            IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryFixedTaskExeInfoPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryFixedTaskExeInfoPage_name, __cb);
        try
        {
            __result.prepare(__queryFixedTaskExeInfoPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public FixedTaskExePaginatorIceRsp end_queryFixedTaskExeInfoPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryFixedTaskExeInfoPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            FixedTaskExePaginatorIceRsp __ret = null;
            __ret = FixedTaskExePaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryFixedTaskExeInfoPage_completed(Ice.TwowayCallbackArg1<FixedTaskExePaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        FixedTaskExePaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryFixedTaskExeInfoPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryFixedTaskPage_name = "queryFixedTaskPage";

    public MtFixedTaskPaginatorIceRsp queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryFixedTaskPage(mtTaskPageIceParam, null, false);
    }

    public MtFixedTaskPaginatorIceRsp queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryFixedTaskPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtFixedTaskPaginatorIceRsp queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryFixedTaskPage_name);
        return end_queryFixedTaskPage(begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryFixedTaskPage __cb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryFixedTaskPage __cb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtFixedTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    IceInternal.Functional_GenericCallback1<MtFixedTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtFixedTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<MtFixedTaskPaginatorIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.Functional_GenericCallback1<MtFixedTaskPaginatorIceRsp> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryFixedTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                        new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtFixedTaskPaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                            {
                                                public final void __completed(Ice.AsyncResult __result)
                                                {
                                                    MtTaskQueryServiceIcePrxHelper.__queryFixedTaskPage_completed(this, __result);
                                                }
                                            });
    }

    private Ice.AsyncResult begin_queryFixedTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryFixedTaskPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryFixedTaskPage_name, __cb);
        try
        {
            __result.prepare(__queryFixedTaskPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtFixedTaskPaginatorIceRsp end_queryFixedTaskPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryFixedTaskPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtFixedTaskPaginatorIceRsp __ret = null;
            __ret = MtFixedTaskPaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryFixedTaskPage_completed(Ice.TwowayCallbackArg1<MtFixedTaskPaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtFixedTaskPaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryFixedTaskPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtDispatchTaskDetailApp_name = "queryMtDispatchTaskDetailApp";

    public MtDispatchTaskDetailIceRsp queryMtDispatchTaskDetailApp(int organId, int taskId, String userId)
    {
        return queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false);
    }

    public MtDispatchTaskDetailIceRsp queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, java.util.Map<String, String> __ctx)
    {
        return queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true);
    }

    private MtDispatchTaskDetailIceRsp queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtDispatchTaskDetailApp_name);
        return end_queryMtDispatchTaskDetailApp(begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, Ice.Callback __cb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, Callback_MtTaskQueryServiceIce_queryMtDispatchTaskDetailApp __cb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, int taskId, String userId, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtDispatchTaskDetailApp __cb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              String userId, 
                                                              IceInternal.Functional_GenericCallback1<MtDispatchTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              String userId, 
                                                              IceInternal.Functional_GenericCallback1<MtDispatchTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              String userId, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtDispatchTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                              int taskId, 
                                                              String userId, 
                                                              java.util.Map<String, String> __ctx, 
                                                              IceInternal.Functional_GenericCallback1<MtDispatchTaskDetailIceRsp> __responseCb, 
                                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                               int taskId, 
                                                               String userId, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.Functional_GenericCallback1<MtDispatchTaskDetailIceRsp> __responseCb, 
                                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtDispatchTaskDetailApp(organId, taskId, userId, __ctx, __explicitCtx, __synchronous, 
                                                  new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtDispatchTaskDetailIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                      {
                                                          public final void __completed(Ice.AsyncResult __result)
                                                          {
                                                              MtTaskQueryServiceIcePrxHelper.__queryMtDispatchTaskDetailApp_completed(this, __result);
                                                          }
                                                      });
    }

    private Ice.AsyncResult begin_queryMtDispatchTaskDetailApp(int organId, 
                                                               int taskId, 
                                                               String userId, 
                                                               java.util.Map<String, String> __ctx, 
                                                               boolean __explicitCtx, 
                                                               boolean __synchronous, 
                                                               IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtDispatchTaskDetailApp_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtDispatchTaskDetailApp_name, __cb);
        try
        {
            __result.prepare(__queryMtDispatchTaskDetailApp_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeInt(taskId);
            __os.writeString(userId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtDispatchTaskDetailIceRsp end_queryMtDispatchTaskDetailApp(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtDispatchTaskDetailApp_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtDispatchTaskDetailIceRsp __ret = null;
            __ret = MtDispatchTaskDetailIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtDispatchTaskDetailApp_completed(Ice.TwowayCallbackArg1<MtDispatchTaskDetailIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtDispatchTaskDetailIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtDispatchTaskDetailApp(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtTaskDetail_name = "queryMtTaskDetail";

    public MtTaskDetailRetIceRsp queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtTaskDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtTaskDetail_name);
        return end_queryMtTaskDetail(begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtTaskQueryServiceIce_queryMtTaskDetail __cb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtTaskDetail __cb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                   IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                   IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                   java.util.Map<String, String> __ctx, 
                                                   IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                   IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                   IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                       new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                           {
                                               public final void __completed(Ice.AsyncResult __result)
                                               {
                                                   MtTaskQueryServiceIcePrxHelper.__queryMtTaskDetail_completed(this, __result);
                                               }
                                           });
    }

    private Ice.AsyncResult begin_queryMtTaskDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                    java.util.Map<String, String> __ctx, 
                                                    boolean __explicitCtx, 
                                                    boolean __synchronous, 
                                                    IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtTaskDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtTaskDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtTaskDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtTaskDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtTaskDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtTaskDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtTaskDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtTaskFixedDetail_name = "queryMtTaskFixedDetail";

    public MtTaskDetailRetIceRsp queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false);
    }

    public MtTaskDetailRetIceRsp queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true);
    }

    private MtTaskDetailRetIceRsp queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtTaskFixedDetail_name);
        return end_queryMtTaskFixedDetail(begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Ice.Callback __cb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, Callback_MtTaskQueryServiceIce_queryMtTaskFixedDetail __cb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtTaskFixedDetail __cb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskDetailRetIceRsp> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskFixedDetail(mtTaskDetailIceParam, __ctx, __explicitCtx, __synchronous, 
                                            new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtTaskDetailRetIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                                {
                                                    public final void __completed(Ice.AsyncResult __result)
                                                    {
                                                        MtTaskQueryServiceIcePrxHelper.__queryMtTaskFixedDetail_completed(this, __result);
                                                    }
                                                });
    }

    private Ice.AsyncResult begin_queryMtTaskFixedDetail(MtTaskDetailIceParam mtTaskDetailIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtTaskFixedDetail_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtTaskFixedDetail_name, __cb);
        try
        {
            __result.prepare(__queryMtTaskFixedDetail_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskDetailIceParam.__write(__os, mtTaskDetailIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskDetailRetIceRsp end_queryMtTaskFixedDetail(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtTaskFixedDetail_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskDetailRetIceRsp __ret = null;
            __ret = MtTaskDetailRetIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtTaskFixedDetail_completed(Ice.TwowayCallbackArg1<MtTaskDetailRetIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskDetailRetIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtTaskFixedDetail(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtTaskHistoryPage_name = "queryMtTaskHistoryPage";

    public MtTaskHistoryPaginatorIce queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtTaskHistoryPage(mtTaskPageIceParam, null, false);
    }

    public MtTaskHistoryPaginatorIce queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskHistoryPaginatorIce queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtTaskHistoryPage_name);
        return end_queryMtTaskHistoryPage(begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryMtTaskHistoryPage __cb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtTaskHistoryPage __cb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskHistoryPaginatorIce> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskHistoryPaginatorIce> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskHistoryPaginatorIce> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<MtTaskHistoryPaginatorIce> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.Functional_GenericCallback1<MtTaskHistoryPaginatorIce> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskHistoryPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                            new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtTaskHistoryPaginatorIce>(__responseCb, __exceptionCb, __sentCb)
                                                {
                                                    public final void __completed(Ice.AsyncResult __result)
                                                    {
                                                        MtTaskQueryServiceIcePrxHelper.__queryMtTaskHistoryPage_completed(this, __result);
                                                    }
                                                });
    }

    private Ice.AsyncResult begin_queryMtTaskHistoryPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtTaskHistoryPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtTaskHistoryPage_name, __cb);
        try
        {
            __result.prepare(__queryMtTaskHistoryPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskHistoryPaginatorIce end_queryMtTaskHistoryPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtTaskHistoryPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskHistoryPaginatorIce __ret = null;
            __ret = MtTaskHistoryPaginatorIce.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtTaskHistoryPage_completed(Ice.TwowayCallbackArg1<MtTaskHistoryPaginatorIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskHistoryPaginatorIce __ret = null;
        try
        {
            __ret = __proxy.end_queryMtTaskHistoryPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtTaskPage_name = "queryMtTaskPage";

    public MtTaskPaginatorIce queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtTaskPage(mtTaskPageIceParam, null, false);
    }

    public MtTaskPaginatorIce queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtTaskPage(mtTaskPageIceParam, __ctx, true);
    }

    private MtTaskPaginatorIce queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtTaskPage_name);
        return end_queryMtTaskPage(begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryMtTaskPage __cb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtTaskPage __cb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIce> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIce> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIce> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<MtTaskPaginatorIce> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.Functional_GenericCallback1<MtTaskPaginatorIce> __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPage(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                     new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.MtTaskPaginatorIce>(__responseCb, __exceptionCb, __sentCb)
                                         {
                                             public final void __completed(Ice.AsyncResult __result)
                                             {
                                                 MtTaskQueryServiceIcePrxHelper.__queryMtTaskPage_completed(this, __result);
                                             }
                                         });
    }

    private Ice.AsyncResult begin_queryMtTaskPage(MtTaskPageIceParam mtTaskPageIceParam, 
                                                  java.util.Map<String, String> __ctx, 
                                                  boolean __explicitCtx, 
                                                  boolean __synchronous, 
                                                  IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtTaskPage_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtTaskPage_name, __cb);
        try
        {
            __result.prepare(__queryMtTaskPage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MtTaskPaginatorIce end_queryMtTaskPage(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtTaskPage_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MtTaskPaginatorIce __ret = null;
            __ret = MtTaskPaginatorIce.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtTaskPage_completed(Ice.TwowayCallbackArg1<MtTaskPaginatorIce> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        MtTaskPaginatorIce __ret = null;
        try
        {
            __ret = __proxy.end_queryMtTaskPage(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryMtTaskPageForPad_name = "queryMtTaskPageForPad";

    public TaskAndEvaluatePaginatorIceRsp queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return queryMtTaskPageForPad(mtTaskPageIceParam, null, false);
    }

    public TaskAndEvaluatePaginatorIceRsp queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true);
    }

    private TaskAndEvaluatePaginatorIceRsp queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryMtTaskPageForPad_name);
        return end_queryMtTaskPageForPad(begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, Ice.Callback __cb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, Callback_MtTaskQueryServiceIce_queryMtTaskPageForPad __cb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryMtTaskPageForPad __cb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                       java.util.Map<String, String> __ctx, 
                                                       IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                       IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.Functional_GenericCallback1<TaskAndEvaluatePaginatorIceRsp> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryMtTaskPageForPad(mtTaskPageIceParam, __ctx, __explicitCtx, __synchronous, 
                                           new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.TaskAndEvaluatePaginatorIceRsp>(__responseCb, __exceptionCb, __sentCb)
                                               {
                                                   public final void __completed(Ice.AsyncResult __result)
                                                   {
                                                       MtTaskQueryServiceIcePrxHelper.__queryMtTaskPageForPad_completed(this, __result);
                                                   }
                                               });
    }

    private Ice.AsyncResult begin_queryMtTaskPageForPad(MtTaskPageIceParam mtTaskPageIceParam, 
                                                        java.util.Map<String, String> __ctx, 
                                                        boolean __explicitCtx, 
                                                        boolean __synchronous, 
                                                        IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryMtTaskPageForPad_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryMtTaskPageForPad_name, __cb);
        try
        {
            __result.prepare(__queryMtTaskPageForPad_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MtTaskPageIceParam.__write(__os, mtTaskPageIceParam);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TaskAndEvaluatePaginatorIceRsp end_queryMtTaskPageForPad(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryMtTaskPageForPad_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TaskAndEvaluatePaginatorIceRsp __ret = null;
            __ret = TaskAndEvaluatePaginatorIceRsp.__read(__is, __ret);
            __is.readPendingObjects();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryMtTaskPageForPad_completed(Ice.TwowayCallbackArg1<TaskAndEvaluatePaginatorIceRsp> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        TaskAndEvaluatePaginatorIceRsp __ret = null;
        try
        {
            __ret = __proxy.end_queryMtTaskPageForPad(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __queryTaskIsTimeOut_name = "queryTaskIsTimeOut";

    public TaskIsTimeOutIceParam queryTaskIsTimeOut(int organId, int taskId)
    {
        return queryTaskIsTimeOut(organId, taskId, null, false);
    }

    public TaskIsTimeOutIceParam queryTaskIsTimeOut(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return queryTaskIsTimeOut(organId, taskId, __ctx, true);
    }

    private TaskIsTimeOutIceParam queryTaskIsTimeOut(int organId, int taskId, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__queryTaskIsTimeOut_name);
        return end_queryTaskIsTimeOut(begin_queryTaskIsTimeOut(organId, taskId, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, null, false, false, null);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId, java.util.Map<String, String> __ctx)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId, Ice.Callback __cb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId, Callback_MtTaskQueryServiceIce_queryTaskIsTimeOut __cb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, int taskId, java.util.Map<String, String> __ctx, Callback_MtTaskQueryServiceIce_queryTaskIsTimeOut __cb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                    int taskId, 
                                                    IceInternal.Functional_GenericCallback1<TaskIsTimeOutIceParam> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                    int taskId, 
                                                    IceInternal.Functional_GenericCallback1<TaskIsTimeOutIceParam> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                    int taskId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TaskIsTimeOutIceParam> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                    int taskId, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<TaskIsTimeOutIceParam> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                     int taskId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.Functional_GenericCallback1<TaskIsTimeOutIceParam> __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_queryTaskIsTimeOut(organId, taskId, __ctx, __explicitCtx, __synchronous, 
                                        new IceInternal.Functional_TwowayCallbackArg1<segi.medicaltrans.mttask.query.TaskIsTimeOutIceParam>(__responseCb, __exceptionCb, __sentCb)
                                            {
                                                public final void __completed(Ice.AsyncResult __result)
                                                {
                                                    MtTaskQueryServiceIcePrxHelper.__queryTaskIsTimeOut_completed(this, __result);
                                                }
                                            });
    }

    private Ice.AsyncResult begin_queryTaskIsTimeOut(int organId, 
                                                     int taskId, 
                                                     java.util.Map<String, String> __ctx, 
                                                     boolean __explicitCtx, 
                                                     boolean __synchronous, 
                                                     IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__queryTaskIsTimeOut_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__queryTaskIsTimeOut_name, __cb);
        try
        {
            __result.prepare(__queryTaskIsTimeOut_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeInt(organId);
            __os.writeInt(taskId);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public TaskIsTimeOutIceParam end_queryTaskIsTimeOut(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __queryTaskIsTimeOut_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            TaskIsTimeOutIceParam __ret = null;
            __ret = TaskIsTimeOutIceParam.__read(__is, __ret);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __queryTaskIsTimeOut_completed(Ice.TwowayCallbackArg1<TaskIsTimeOutIceParam> __cb, Ice.AsyncResult __result)
    {
        segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx __proxy = (segi.medicaltrans.mttask.query.MtTaskQueryServiceIcePrx)__result.getProxy();
        TaskIsTimeOutIceParam __ret = null;
        try
        {
            __ret = __proxy.end_queryTaskIsTimeOut(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MtTaskQueryServiceIcePrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static MtTaskQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static MtTaskQueryServiceIcePrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, MtTaskQueryServiceIcePrx.class, MtTaskQueryServiceIcePrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::segi::medicaltrans::mttask::query::MtTaskQueryServiceIce"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, MtTaskQueryServiceIcePrx v)
    {
        __os.writeProxy(v);
    }

    public static MtTaskQueryServiceIcePrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            MtTaskQueryServiceIcePrxHelper result = new MtTaskQueryServiceIcePrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
