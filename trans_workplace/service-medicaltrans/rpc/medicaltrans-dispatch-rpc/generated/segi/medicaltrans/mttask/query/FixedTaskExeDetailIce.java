// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.query;

public class FixedTaskExeDetailIce implements java.lang.Cloneable, java.io.Serializable
{
    public String routeId;

    public String
    getRouteId()
    {
        return routeId;
    }

    public void
    setRouteId(String _routeId)
    {
        routeId = _routeId;
    }

    public String houseId;

    public String
    getHouseId()
    {
        return houseId;
    }

    public void
    setHouseId(String _houseId)
    {
        houseId = _houseId;
    }

    public String houseName;

    public String
    getHouseName()
    {
        return houseName;
    }

    public void
    setHouseName(String _houseName)
    {
        houseName = _houseName;
    }

    public String finishContent;

    public String
    getFinishContent()
    {
        return finishContent;
    }

    public void
    setFinishContent(String _finishContent)
    {
        finishContent = _finishContent;
    }

    public java.util.List<FileParams> autographFileList;

    public java.util.List<FileParams>
    getAutographFileList()
    {
        return autographFileList;
    }

    public void
    setAutographFileList(java.util.List<FileParams> _autographFileList)
    {
        autographFileList = _autographFileList;
    }

    public java.util.List<FileParams> finishFileList;

    public java.util.List<FileParams>
    getFinishFileList()
    {
        return finishFileList;
    }

    public void
    setFinishFileList(java.util.List<FileParams> _finishFileList)
    {
        finishFileList = _finishFileList;
    }

    public String finishTime;

    public String
    getFinishTime()
    {
        return finishTime;
    }

    public void
    setFinishTime(String _finishTime)
    {
        finishTime = _finishTime;
    }

    public FixedTaskExeDetailIce()
    {
        routeId = "";
        houseId = "";
        houseName = "";
        finishContent = "";
        finishTime = "";
    }

    public FixedTaskExeDetailIce(String routeId, String houseId, String houseName, String finishContent, java.util.List<FileParams> autographFileList, java.util.List<FileParams> finishFileList, String finishTime)
    {
        this.routeId = routeId;
        this.houseId = houseId;
        this.houseName = houseName;
        this.finishContent = finishContent;
        this.autographFileList = autographFileList;
        this.finishFileList = finishFileList;
        this.finishTime = finishTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        FixedTaskExeDetailIce _r = null;
        if(rhs instanceof FixedTaskExeDetailIce)
        {
            _r = (FixedTaskExeDetailIce)rhs;
        }

        if(_r != null)
        {
            if(routeId != _r.routeId)
            {
                if(routeId == null || _r.routeId == null || !routeId.equals(_r.routeId))
                {
                    return false;
                }
            }
            if(houseId != _r.houseId)
            {
                if(houseId == null || _r.houseId == null || !houseId.equals(_r.houseId))
                {
                    return false;
                }
            }
            if(houseName != _r.houseName)
            {
                if(houseName == null || _r.houseName == null || !houseName.equals(_r.houseName))
                {
                    return false;
                }
            }
            if(finishContent != _r.finishContent)
            {
                if(finishContent == null || _r.finishContent == null || !finishContent.equals(_r.finishContent))
                {
                    return false;
                }
            }
            if(autographFileList != _r.autographFileList)
            {
                if(autographFileList == null || _r.autographFileList == null || !autographFileList.equals(_r.autographFileList))
                {
                    return false;
                }
            }
            if(finishFileList != _r.finishFileList)
            {
                if(finishFileList == null || _r.finishFileList == null || !finishFileList.equals(_r.finishFileList))
                {
                    return false;
                }
            }
            if(finishTime != _r.finishTime)
            {
                if(finishTime == null || _r.finishTime == null || !finishTime.equals(_r.finishTime))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::mttask::query::FixedTaskExeDetailIce");
        __h = IceInternal.HashUtil.hashAdd(__h, routeId);
        __h = IceInternal.HashUtil.hashAdd(__h, houseId);
        __h = IceInternal.HashUtil.hashAdd(__h, houseName);
        __h = IceInternal.HashUtil.hashAdd(__h, finishContent);
        __h = IceInternal.HashUtil.hashAdd(__h, autographFileList);
        __h = IceInternal.HashUtil.hashAdd(__h, finishFileList);
        __h = IceInternal.HashUtil.hashAdd(__h, finishTime);
        return __h;
    }

    public FixedTaskExeDetailIce
    clone()
    {
        FixedTaskExeDetailIce c = null;
        try
        {
            c = (FixedTaskExeDetailIce)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(routeId);
        __os.writeString(houseId);
        __os.writeString(houseName);
        __os.writeString(finishContent);
        AutographFileListHelper.write(__os, autographFileList);
        FinishFileListHelper.write(__os, finishFileList);
        __os.writeString(finishTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        routeId = __is.readString();
        houseId = __is.readString();
        houseName = __is.readString();
        finishContent = __is.readString();
        autographFileList = AutographFileListHelper.read(__is);
        finishFileList = FinishFileListHelper.read(__is);
        finishTime = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, FixedTaskExeDetailIce __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public FixedTaskExeDetailIce
    __read(IceInternal.BasicStream __is, FixedTaskExeDetailIce __v)
    {
        if(__v == null)
        {
             __v = new FixedTaskExeDetailIce();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final FixedTaskExeDetailIce __nullMarshalValue = new FixedTaskExeDetailIce();

    public static final long serialVersionUID = -1077637516L;
}
