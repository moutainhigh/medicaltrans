// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_manager.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.manager;

public interface _MtTaskManagerHandleServiceIceOperations
{
    resp.RpcRespIce finishFixedTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce autograph(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce evaluate(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    MtTaskGrabRsp grabMtDispatchTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    MtTaskApplyPersonLiableRsp applyPersonLiable(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce backMtTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce startMtTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce cancelMtTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce finishMtTask(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce startTaskForWeb(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce finishTaskForWeb(MtCommonIceParam mtCommonIceParam, Ice.Current __current);

    resp.RpcRespIce photograph(MtCommonIceParam mtCommonIceParam, Ice.Current __current);
}
