// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_manager.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.manager;

public class MtTaskGrabRsp implements java.lang.Cloneable, java.io.Serializable
{
    public String code;

    public String
    getCode()
    {
        return code;
    }

    public void
    setCode(String _code)
    {
        code = _code;
    }

    public String message;

    public String
    getMessage()
    {
        return message;
    }

    public void
    setMessage(String _message)
    {
        message = _message;
    }

    public String taskId;

    public String
    getTaskId()
    {
        return taskId;
    }

    public void
    setTaskId(String _taskId)
    {
        taskId = _taskId;
    }

    public String isPersonLiable;

    public String
    getIsPersonLiable()
    {
        return isPersonLiable;
    }

    public void
    setIsPersonLiable(String _isPersonLiable)
    {
        isPersonLiable = _isPersonLiable;
    }

    public String isGrabTask;

    public String
    getIsGrabTask()
    {
        return isGrabTask;
    }

    public void
    setIsGrabTask(String _isGrabTask)
    {
        isGrabTask = _isGrabTask;
    }

    public MtTaskGrabRsp()
    {
        code = "";
        message = "";
        taskId = "";
        isPersonLiable = "";
        isGrabTask = "";
    }

    public MtTaskGrabRsp(String code, String message, String taskId, String isPersonLiable, String isGrabTask)
    {
        this.code = code;
        this.message = message;
        this.taskId = taskId;
        this.isPersonLiable = isPersonLiable;
        this.isGrabTask = isGrabTask;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MtTaskGrabRsp _r = null;
        if(rhs instanceof MtTaskGrabRsp)
        {
            _r = (MtTaskGrabRsp)rhs;
        }

        if(_r != null)
        {
            if(code != _r.code)
            {
                if(code == null || _r.code == null || !code.equals(_r.code))
                {
                    return false;
                }
            }
            if(message != _r.message)
            {
                if(message == null || _r.message == null || !message.equals(_r.message))
                {
                    return false;
                }
            }
            if(taskId != _r.taskId)
            {
                if(taskId == null || _r.taskId == null || !taskId.equals(_r.taskId))
                {
                    return false;
                }
            }
            if(isPersonLiable != _r.isPersonLiable)
            {
                if(isPersonLiable == null || _r.isPersonLiable == null || !isPersonLiable.equals(_r.isPersonLiable))
                {
                    return false;
                }
            }
            if(isGrabTask != _r.isGrabTask)
            {
                if(isGrabTask == null || _r.isGrabTask == null || !isGrabTask.equals(_r.isGrabTask))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::mttask::manager::MtTaskGrabRsp");
        __h = IceInternal.HashUtil.hashAdd(__h, code);
        __h = IceInternal.HashUtil.hashAdd(__h, message);
        __h = IceInternal.HashUtil.hashAdd(__h, taskId);
        __h = IceInternal.HashUtil.hashAdd(__h, isPersonLiable);
        __h = IceInternal.HashUtil.hashAdd(__h, isGrabTask);
        return __h;
    }

    public MtTaskGrabRsp
    clone()
    {
        MtTaskGrabRsp c = null;
        try
        {
            c = (MtTaskGrabRsp)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(code);
        __os.writeString(message);
        __os.writeString(taskId);
        __os.writeString(isPersonLiable);
        __os.writeString(isGrabTask);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        code = __is.readString();
        message = __is.readString();
        taskId = __is.readString();
        isPersonLiable = __is.readString();
        isGrabTask = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, MtTaskGrabRsp __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public MtTaskGrabRsp
    __read(IceInternal.BasicStream __is, MtTaskGrabRsp __v)
    {
        if(__v == null)
        {
             __v = new MtTaskGrabRsp();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final MtTaskGrabRsp __nullMarshalValue = new MtTaskGrabRsp();

    public static final long serialVersionUID = 13392214L;
}
