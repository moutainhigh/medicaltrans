// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `mt_task_query.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package segi.medicaltrans.mttask.query;

public class MtTaskPageIceParam implements java.lang.Cloneable, java.io.Serializable
{
    public String organId;

    public String
    getOrganId()
    {
        return organId;
    }

    public void
    setOrganId(String _organId)
    {
        organId = _organId;
    }

    public String transTypeParentCode;

    public String
    getTransTypeParentCode()
    {
        return transTypeParentCode;
    }

    public void
    setTransTypeParentCode(String _transTypeParentCode)
    {
        transTypeParentCode = _transTypeParentCode;
    }

    public String evaluateStatus;

    public String
    getEvaluateStatus()
    {
        return evaluateStatus;
    }

    public void
    setEvaluateStatus(String _evaluateStatus)
    {
        evaluateStatus = _evaluateStatus;
    }

    public String urgency;

    public String
    getUrgency()
    {
        return urgency;
    }

    public void
    setUrgency(String _urgency)
    {
        urgency = _urgency;
    }

    public String beginTime;

    public String
    getBeginTime()
    {
        return beginTime;
    }

    public void
    setBeginTime(String _beginTime)
    {
        beginTime = _beginTime;
    }

    public String endTime;

    public String
    getEndTime()
    {
        return endTime;
    }

    public void
    setEndTime(String _endTime)
    {
        endTime = _endTime;
    }

    public String status;

    public String
    getStatus()
    {
        return status;
    }

    public void
    setStatus(String _status)
    {
        status = _status;
    }

    public String taskType;

    public String
    getTaskType()
    {
        return taskType;
    }

    public void
    setTaskType(String _taskType)
    {
        taskType = _taskType;
    }

    public String pageNo;

    public String
    getPageNo()
    {
        return pageNo;
    }

    public void
    setPageNo(String _pageNo)
    {
        pageNo = _pageNo;
    }

    public String pageLength;

    public String
    getPageLength()
    {
        return pageLength;
    }

    public void
    setPageLength(String _pageLength)
    {
        pageLength = _pageLength;
    }

    public String userOrganId;

    public String
    getUserOrganId()
    {
        return userOrganId;
    }

    public void
    setUserOrganId(String _userOrganId)
    {
        userOrganId = _userOrganId;
    }

    public String userId;

    public String
    getUserId()
    {
        return userId;
    }

    public void
    setUserId(String _userId)
    {
        userId = _userId;
    }

    public String taskId;

    public String
    getTaskId()
    {
        return taskId;
    }

    public void
    setTaskId(String _taskId)
    {
        taskId = _taskId;
    }

    public boolean evaluateFlag;

    public boolean
    getEvaluateFlag()
    {
        return evaluateFlag;
    }

    public void
    setEvaluateFlag(boolean _evaluateFlag)
    {
        evaluateFlag = _evaluateFlag;
    }

    public boolean
    isEvaluateFlag()
    {
        return evaluateFlag;
    }

    public String userHouseId;

    public String
    getUserHouseId()
    {
        return userHouseId;
    }

    public void
    setUserHouseId(String _userHouseId)
    {
        userHouseId = _userHouseId;
    }

    public boolean exportFlag;

    public boolean
    getExportFlag()
    {
        return exportFlag;
    }

    public void
    setExportFlag(boolean _exportFlag)
    {
        exportFlag = _exportFlag;
    }

    public boolean
    isExportFlag()
    {
        return exportFlag;
    }

    public String invokingFlag;

    public String
    getInvokingFlag()
    {
        return invokingFlag;
    }

    public void
    setInvokingFlag(String _invokingFlag)
    {
        invokingFlag = _invokingFlag;
    }

    public String version;

    public String
    getVersion()
    {
        return version;
    }

    public void
    setVersion(String _version)
    {
        version = _version;
    }

    public MtTaskPageIceParam()
    {
        organId = "";
        transTypeParentCode = "";
        evaluateStatus = "";
        urgency = "";
        beginTime = "";
        endTime = "";
        status = "";
        taskType = "";
        pageNo = "";
        pageLength = "";
        userOrganId = "";
        userId = "";
        taskId = "";
        userHouseId = "";
        invokingFlag = "";
        version = "";
    }

    public MtTaskPageIceParam(String organId, String transTypeParentCode, String evaluateStatus, String urgency, String beginTime, String endTime, String status, String taskType, String pageNo, String pageLength, String userOrganId, String userId, String taskId, boolean evaluateFlag, String userHouseId, boolean exportFlag, String invokingFlag, String version)
    {
        this.organId = organId;
        this.transTypeParentCode = transTypeParentCode;
        this.evaluateStatus = evaluateStatus;
        this.urgency = urgency;
        this.beginTime = beginTime;
        this.endTime = endTime;
        this.status = status;
        this.taskType = taskType;
        this.pageNo = pageNo;
        this.pageLength = pageLength;
        this.userOrganId = userOrganId;
        this.userId = userId;
        this.taskId = taskId;
        this.evaluateFlag = evaluateFlag;
        this.userHouseId = userHouseId;
        this.exportFlag = exportFlag;
        this.invokingFlag = invokingFlag;
        this.version = version;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MtTaskPageIceParam _r = null;
        if(rhs instanceof MtTaskPageIceParam)
        {
            _r = (MtTaskPageIceParam)rhs;
        }

        if(_r != null)
        {
            if(organId != _r.organId)
            {
                if(organId == null || _r.organId == null || !organId.equals(_r.organId))
                {
                    return false;
                }
            }
            if(transTypeParentCode != _r.transTypeParentCode)
            {
                if(transTypeParentCode == null || _r.transTypeParentCode == null || !transTypeParentCode.equals(_r.transTypeParentCode))
                {
                    return false;
                }
            }
            if(evaluateStatus != _r.evaluateStatus)
            {
                if(evaluateStatus == null || _r.evaluateStatus == null || !evaluateStatus.equals(_r.evaluateStatus))
                {
                    return false;
                }
            }
            if(urgency != _r.urgency)
            {
                if(urgency == null || _r.urgency == null || !urgency.equals(_r.urgency))
                {
                    return false;
                }
            }
            if(beginTime != _r.beginTime)
            {
                if(beginTime == null || _r.beginTime == null || !beginTime.equals(_r.beginTime))
                {
                    return false;
                }
            }
            if(endTime != _r.endTime)
            {
                if(endTime == null || _r.endTime == null || !endTime.equals(_r.endTime))
                {
                    return false;
                }
            }
            if(status != _r.status)
            {
                if(status == null || _r.status == null || !status.equals(_r.status))
                {
                    return false;
                }
            }
            if(taskType != _r.taskType)
            {
                if(taskType == null || _r.taskType == null || !taskType.equals(_r.taskType))
                {
                    return false;
                }
            }
            if(pageNo != _r.pageNo)
            {
                if(pageNo == null || _r.pageNo == null || !pageNo.equals(_r.pageNo))
                {
                    return false;
                }
            }
            if(pageLength != _r.pageLength)
            {
                if(pageLength == null || _r.pageLength == null || !pageLength.equals(_r.pageLength))
                {
                    return false;
                }
            }
            if(userOrganId != _r.userOrganId)
            {
                if(userOrganId == null || _r.userOrganId == null || !userOrganId.equals(_r.userOrganId))
                {
                    return false;
                }
            }
            if(userId != _r.userId)
            {
                if(userId == null || _r.userId == null || !userId.equals(_r.userId))
                {
                    return false;
                }
            }
            if(taskId != _r.taskId)
            {
                if(taskId == null || _r.taskId == null || !taskId.equals(_r.taskId))
                {
                    return false;
                }
            }
            if(evaluateFlag != _r.evaluateFlag)
            {
                return false;
            }
            if(userHouseId != _r.userHouseId)
            {
                if(userHouseId == null || _r.userHouseId == null || !userHouseId.equals(_r.userHouseId))
                {
                    return false;
                }
            }
            if(exportFlag != _r.exportFlag)
            {
                return false;
            }
            if(invokingFlag != _r.invokingFlag)
            {
                if(invokingFlag == null || _r.invokingFlag == null || !invokingFlag.equals(_r.invokingFlag))
                {
                    return false;
                }
            }
            if(version != _r.version)
            {
                if(version == null || _r.version == null || !version.equals(_r.version))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::segi::medicaltrans::mttask::query::MtTaskPageIceParam");
        __h = IceInternal.HashUtil.hashAdd(__h, organId);
        __h = IceInternal.HashUtil.hashAdd(__h, transTypeParentCode);
        __h = IceInternal.HashUtil.hashAdd(__h, evaluateStatus);
        __h = IceInternal.HashUtil.hashAdd(__h, urgency);
        __h = IceInternal.HashUtil.hashAdd(__h, beginTime);
        __h = IceInternal.HashUtil.hashAdd(__h, endTime);
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, taskType);
        __h = IceInternal.HashUtil.hashAdd(__h, pageNo);
        __h = IceInternal.HashUtil.hashAdd(__h, pageLength);
        __h = IceInternal.HashUtil.hashAdd(__h, userOrganId);
        __h = IceInternal.HashUtil.hashAdd(__h, userId);
        __h = IceInternal.HashUtil.hashAdd(__h, taskId);
        __h = IceInternal.HashUtil.hashAdd(__h, evaluateFlag);
        __h = IceInternal.HashUtil.hashAdd(__h, userHouseId);
        __h = IceInternal.HashUtil.hashAdd(__h, exportFlag);
        __h = IceInternal.HashUtil.hashAdd(__h, invokingFlag);
        __h = IceInternal.HashUtil.hashAdd(__h, version);
        return __h;
    }

    public MtTaskPageIceParam
    clone()
    {
        MtTaskPageIceParam c = null;
        try
        {
            c = (MtTaskPageIceParam)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(organId);
        __os.writeString(transTypeParentCode);
        __os.writeString(evaluateStatus);
        __os.writeString(urgency);
        __os.writeString(beginTime);
        __os.writeString(endTime);
        __os.writeString(status);
        __os.writeString(taskType);
        __os.writeString(pageNo);
        __os.writeString(pageLength);
        __os.writeString(userOrganId);
        __os.writeString(userId);
        __os.writeString(taskId);
        __os.writeBool(evaluateFlag);
        __os.writeString(userHouseId);
        __os.writeBool(exportFlag);
        __os.writeString(invokingFlag);
        __os.writeString(version);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        organId = __is.readString();
        transTypeParentCode = __is.readString();
        evaluateStatus = __is.readString();
        urgency = __is.readString();
        beginTime = __is.readString();
        endTime = __is.readString();
        status = __is.readString();
        taskType = __is.readString();
        pageNo = __is.readString();
        pageLength = __is.readString();
        userOrganId = __is.readString();
        userId = __is.readString();
        taskId = __is.readString();
        evaluateFlag = __is.readBool();
        userHouseId = __is.readString();
        exportFlag = __is.readBool();
        invokingFlag = __is.readString();
        version = __is.readString();
    }

    static public void
    __write(IceInternal.BasicStream __os, MtTaskPageIceParam __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public MtTaskPageIceParam
    __read(IceInternal.BasicStream __is, MtTaskPageIceParam __v)
    {
        if(__v == null)
        {
             __v = new MtTaskPageIceParam();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final MtTaskPageIceParam __nullMarshalValue = new MtTaskPageIceParam();

    public static final long serialVersionUID = 90962251L;
}
