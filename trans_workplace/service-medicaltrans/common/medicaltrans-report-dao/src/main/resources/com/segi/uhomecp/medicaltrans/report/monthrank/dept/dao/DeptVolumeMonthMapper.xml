<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.segi.uhomecp.medicaltrans.report.monthrank.dept.dao.DeptVolumeMonthMapper">
  <resultMap id="BaseResultMap" type="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonth">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ORGAN_ID" jdbcType="INTEGER" property="organId" />
    <result column="GROUP_ORGAN_ID" jdbcType="INTEGER" property="groupOrganId" />
    <result column="HOUSE_ID" jdbcType="INTEGER" property="houseId" />
    <result column="BUILD_ID" jdbcType="INTEGER" property="buildId" />
    <result column="SID" jdbcType="INTEGER" property="sid" />
    <result column="FLOOR_ID" jdbcType="INTEGER" property="floorId" />
    <result column="CYCLE_YM" jdbcType="INTEGER" property="cycleYm" />
    <result column="TRANS_AMOUNT" jdbcType="INTEGER" property="transAmount" />
    <result column="DISPATCH_AMOUNT" jdbcType="INTEGER" property="dispatchAmount" />
    <result column="AUTONOMOUS_AMOUNT" jdbcType="INTEGER" property="autonomousAmount" />
    <result column="SPECIAL_AMOUNT" jdbcType="INTEGER" property="specialAmount" />
    <result column="URGENT_AMOUNT" jdbcType="INTEGER" property="urgentAmount" />
    <result column="COMMON_AMOUNT" jdbcType="INTEGER" property="commonAmount" />
    <result column="CREATE_DATE" jdbcType="BIGINT" property="createDate" />
    <result column="UPDATE_DATE" jdbcType="BIGINT" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORGAN_ID, GROUP_ORGAN_ID, HOUSE_ID, BUILD_ID, SID, FLOOR_ID, CYCLE_YM, TRANS_AMOUNT, 
    DISPATCH_AMOUNT, AUTONOMOUS_AMOUNT, SPECIAL_AMOUNT, URGENT_AMOUNT, COMMON_AMOUNT, 
    CREATE_DATE, UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonthCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evt_mt_dept_volume_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evt_mt_dept_volume_month
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evt_mt_dept_volume_month
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonthCriteria">
    delete from evt_mt_dept_volume_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonth">
    insert into evt_mt_dept_volume_month (ID, ORGAN_ID, GROUP_ORGAN_ID, 
      HOUSE_ID, BUILD_ID, SID, 
      FLOOR_ID, CYCLE_YM, TRANS_AMOUNT, 
      DISPATCH_AMOUNT, AUTONOMOUS_AMOUNT, SPECIAL_AMOUNT, 
      URGENT_AMOUNT, COMMON_AMOUNT, CREATE_DATE, 
      UPDATE_DATE)
    values (#{id,jdbcType=INTEGER}, #{organId,jdbcType=INTEGER}, #{groupOrganId,jdbcType=INTEGER}, 
      #{houseId,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{floorId,jdbcType=INTEGER}, #{cycleYm,jdbcType=INTEGER}, #{transAmount,jdbcType=INTEGER}, 
      #{dispatchAmount,jdbcType=INTEGER}, #{autonomousAmount,jdbcType=INTEGER}, #{specialAmount,jdbcType=INTEGER}, 
      #{urgentAmount,jdbcType=INTEGER}, #{commonAmount,jdbcType=INTEGER}, #{createDate,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonth">
    insert into evt_mt_dept_volume_month
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="organId != null">
        ORGAN_ID,
      </if>
      <if test="groupOrganId != null">
        GROUP_ORGAN_ID,
      </if>
      <if test="houseId != null">
        HOUSE_ID,
      </if>
      <if test="buildId != null">
        BUILD_ID,
      </if>
      <if test="sid != null">
        SID,
      </if>
      <if test="floorId != null">
        FLOOR_ID,
      </if>
      <if test="cycleYm != null">
        CYCLE_YM,
      </if>
      <if test="transAmount != null">
        TRANS_AMOUNT,
      </if>
      <if test="dispatchAmount != null">
        DISPATCH_AMOUNT,
      </if>
      <if test="autonomousAmount != null">
        AUTONOMOUS_AMOUNT,
      </if>
      <if test="specialAmount != null">
        SPECIAL_AMOUNT,
      </if>
      <if test="urgentAmount != null">
        URGENT_AMOUNT,
      </if>
      <if test="commonAmount != null">
        COMMON_AMOUNT,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organId != null">
        #{organId,jdbcType=INTEGER},
      </if>
      <if test="groupOrganId != null">
        #{groupOrganId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="floorId != null">
        #{floorId,jdbcType=INTEGER},
      </if>
      <if test="cycleYm != null">
        #{cycleYm,jdbcType=INTEGER},
      </if>
      <if test="transAmount != null">
        #{transAmount,jdbcType=INTEGER},
      </if>
      <if test="dispatchAmount != null">
        #{dispatchAmount,jdbcType=INTEGER},
      </if>
      <if test="autonomousAmount != null">
        #{autonomousAmount,jdbcType=INTEGER},
      </if>
      <if test="specialAmount != null">
        #{specialAmount,jdbcType=INTEGER},
      </if>
      <if test="urgentAmount != null">
        #{urgentAmount,jdbcType=INTEGER},
      </if>
      <if test="commonAmount != null">
        #{commonAmount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonthCriteria" resultType="java.lang.Integer">
    select count(*) from evt_mt_dept_volume_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evt_mt_dept_volume_month
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.organId != null">
        ORGAN_ID = #{record.organId,jdbcType=INTEGER},
      </if>
      <if test="record.groupOrganId != null">
        GROUP_ORGAN_ID = #{record.groupOrganId,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null">
        HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        SID = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.floorId != null">
        FLOOR_ID = #{record.floorId,jdbcType=INTEGER},
      </if>
      <if test="record.cycleYm != null">
        CYCLE_YM = #{record.cycleYm,jdbcType=INTEGER},
      </if>
      <if test="record.transAmount != null">
        TRANS_AMOUNT = #{record.transAmount,jdbcType=INTEGER},
      </if>
      <if test="record.dispatchAmount != null">
        DISPATCH_AMOUNT = #{record.dispatchAmount,jdbcType=INTEGER},
      </if>
      <if test="record.autonomousAmount != null">
        AUTONOMOUS_AMOUNT = #{record.autonomousAmount,jdbcType=INTEGER},
      </if>
      <if test="record.specialAmount != null">
        SPECIAL_AMOUNT = #{record.specialAmount,jdbcType=INTEGER},
      </if>
      <if test="record.urgentAmount != null">
        URGENT_AMOUNT = #{record.urgentAmount,jdbcType=INTEGER},
      </if>
      <if test="record.commonAmount != null">
        COMMON_AMOUNT = #{record.commonAmount,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evt_mt_dept_volume_month
    set ID = #{record.id,jdbcType=INTEGER},
      ORGAN_ID = #{record.organId,jdbcType=INTEGER},
      GROUP_ORGAN_ID = #{record.groupOrganId,jdbcType=INTEGER},
      HOUSE_ID = #{record.houseId,jdbcType=INTEGER},
      BUILD_ID = #{record.buildId,jdbcType=INTEGER},
      SID = #{record.sid,jdbcType=INTEGER},
      FLOOR_ID = #{record.floorId,jdbcType=INTEGER},
      CYCLE_YM = #{record.cycleYm,jdbcType=INTEGER},
      TRANS_AMOUNT = #{record.transAmount,jdbcType=INTEGER},
      DISPATCH_AMOUNT = #{record.dispatchAmount,jdbcType=INTEGER},
      AUTONOMOUS_AMOUNT = #{record.autonomousAmount,jdbcType=INTEGER},
      SPECIAL_AMOUNT = #{record.specialAmount,jdbcType=INTEGER},
      URGENT_AMOUNT = #{record.urgentAmount,jdbcType=INTEGER},
      COMMON_AMOUNT = #{record.commonAmount,jdbcType=INTEGER},
      CREATE_DATE = #{record.createDate,jdbcType=BIGINT},
      UPDATE_DATE = #{record.updateDate,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonth">
    update evt_mt_dept_volume_month
    <set>
      <if test="organId != null">
        ORGAN_ID = #{organId,jdbcType=INTEGER},
      </if>
      <if test="groupOrganId != null">
        GROUP_ORGAN_ID = #{groupOrganId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        HOUSE_ID = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        BUILD_ID = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        SID = #{sid,jdbcType=INTEGER},
      </if>
      <if test="floorId != null">
        FLOOR_ID = #{floorId,jdbcType=INTEGER},
      </if>
      <if test="cycleYm != null">
        CYCLE_YM = #{cycleYm,jdbcType=INTEGER},
      </if>
      <if test="transAmount != null">
        TRANS_AMOUNT = #{transAmount,jdbcType=INTEGER},
      </if>
      <if test="dispatchAmount != null">
        DISPATCH_AMOUNT = #{dispatchAmount,jdbcType=INTEGER},
      </if>
      <if test="autonomousAmount != null">
        AUTONOMOUS_AMOUNT = #{autonomousAmount,jdbcType=INTEGER},
      </if>
      <if test="specialAmount != null">
        SPECIAL_AMOUNT = #{specialAmount,jdbcType=INTEGER},
      </if>
      <if test="urgentAmount != null">
        URGENT_AMOUNT = #{urgentAmount,jdbcType=INTEGER},
      </if>
      <if test="commonAmount != null">
        COMMON_AMOUNT = #{commonAmount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonth">
    update evt_mt_dept_volume_month
    set ORGAN_ID = #{organId,jdbcType=INTEGER},
      GROUP_ORGAN_ID = #{groupOrganId,jdbcType=INTEGER},
      HOUSE_ID = #{houseId,jdbcType=INTEGER},
      BUILD_ID = #{buildId,jdbcType=INTEGER},
      SID = #{sid,jdbcType=INTEGER},
      FLOOR_ID = #{floorId,jdbcType=INTEGER},
      CYCLE_YM = #{cycleYm,jdbcType=INTEGER},
      TRANS_AMOUNT = #{transAmount,jdbcType=INTEGER},
      DISPATCH_AMOUNT = #{dispatchAmount,jdbcType=INTEGER},
      AUTONOMOUS_AMOUNT = #{autonomousAmount,jdbcType=INTEGER},
      SPECIAL_AMOUNT = #{specialAmount,jdbcType=INTEGER},
      URGENT_AMOUNT = #{urgentAmount,jdbcType=INTEGER},
      COMMON_AMOUNT = #{commonAmount,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=BIGINT},
      UPDATE_DATE = #{updateDate,jdbcType=BIGINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.segi.uhomecp.medicaltrans.report.monthrank.dept.model.DeptVolumeMonthCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evt_mt_dept_volume_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>